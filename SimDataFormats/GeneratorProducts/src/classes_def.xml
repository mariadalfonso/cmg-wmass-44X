<lcgdict>
	<!-- HepMC externals -->

	<class name="HepMC::GenEvent"/>
	<class name="HepMC::GenVertex"/>
	<class name="HepMC::GenParticle">
		<field name="itsParticleData" transient="true"/>
		<field name="itsDecayData" transient="true"/>
	</class>
    <class name="HepMC::GenCrossSection"/>
	<class name="HepMC::WeightContainer"/>
	<class name="HepMC::FourVector"/>
	<class name="HepMC::HeavyIon"/>
	<class name="HepMC::PdfInfo"/>
	<class name="HepMC::Flow">
		<field name="m_particle_owner" transient="true"/>
	</class>
	<class name="HepMC::Polarization"/>
	<class name="HepMC::GenEvent::particle_iterator">
		<field name="m_map_iterator" transient="true"/>
	</class>
	<class name="HepMC::GenEvent::particle_const_iterator">
		<field name="m_map_iterator" transient="true"/>
	</class>
	<class name="HepMC::GenEvent::vertex_iterator">
		<field name="m_map_iterator" transient="true"/>
	</class>
	<class name="HepMC::GenEvent::vertex_const_iterator">
		<field name="m_map_iterator" transient="true"/>
	</class>
	<class name="std::vector&lt;HepMC::GenParticle*&gt;"/>
	<!-- <class name="std::iterator&lt;std::forward_iterator_tag,HepMC::GenVertex*,int,HepMC::GenVertex**,HepMC::GenVertex*& &gt;"/> -->
	<class pattern="std::iterator&lt;std::forward_iterator_tag,HepMC::GenVertex*&gt;"/>
	<!-- <class name="std::iterator&lt;std::forward_iterator_tag,HepMC::GenParticle*,int,HepMC::GenParticle**,HepMC::GenParticle*& &gt;"/> -->
	<class pattern="std::iterator&lt;std::forward_iterator_tag,HepMC::GenParticle*&gt;"/>
	<!--
		<class name="HepMC::GenVertex::edge_iterator">
			<field name="m_set_iter" transient="true"/>
		</class>
	-->
	<!-- <class name="_Rb_tree_iterator&lt;HepMC::GenParticle*,HepMC::GenParticle* const&,HepMC::GenParticle* const*&gt;"/> -->
	<!-- <class pattern="*iterator&lt;HepMC::GenParticle*&gt;"/> -->
	<!-- <class name="_Rb_tree_iterator&lt;std::pair&lt;const int,HepMC::GenVertex*&gt;,const std::pair&lt;const int,HepMC::GenVertex*&gt;&,const std::pair&lt;const int,HepMC::GenVertex*&gt;*&gt;"/> -->
	<!-- <class pattern="*iterator&lt;std::pair&lt;*HepMC::GenVertex*&gt;*&gt;"/> -->
	<!-- <class pattern="*iterator&lt;std::pair&lt;*HepMC::GenParticle*&gt;*&gt;"/> -->
	<!-- <class name="HepPDT::ParticleID"/> -->
	<!-- <class name="HepPDT::Quarks"/> -->
	<!-- <class name="HepPDT::DecayDataT&lt;HepMCConfig&gt;"/> -->
	<!-- <class name="HepPDT::ParticleDataT&lt;HepMCConfig&gt;"/> -->

	<!-- HepMCProduct -->

	<class name="edm::Wrapper&lt;edm::HepMCProduct&gt;"/>
	<class name="edm::HepMCProduct"/>
        <class name="std::vector&lt;const edm::HepMCProduct*&gt;"/>
	<class name="edm::Ref&lt;edm::HepMCProduct,HepMC::GenVertex,edm::refhelper::FindTrait&lt;edm::HepMCProduct,HepMC::GenVertex&gt;::Find&gt;"/>
	<class name="edm::Ref&lt;edm::HepMCProduct,HepMC::GenParticle,edm::refhelper::FindTrait&lt;edm::HepMCProduct,HepMC::GenParticle&gt;::Find&gt;"/>
	<class name="edm::RefVector&lt;edm::HepMCProduct,HepMC::GenVertex,edm::refhelper::FindTrait&lt;edm::HepMCProduct,HepMC::GenVertex&gt;::Find&gt;"/>
	<class name="edm::RefVector&lt;edm::HepMCProduct,HepMC::GenParticle,edm::refhelper::FindTrait&lt;edm::HepMCProduct,HepMC::GenParticle&gt;::Find&gt;"/>
	<class name="std::map&lt;int,HepMC::GenVertex*&gt;"/>
	<class name="std::pair&lt;const int,HepMC::GenVertex*&gt;"/>
	<class name="std::map&lt;int,HepMC::GenParticle*&gt;"/>
	<class name="std::pair&lt;const int,HepMC::GenParticle*&gt;"/>
	<class name="std::map&lt;int,HepMC::GenVertex*,std::greater&lt;int&gt; &gt;"/>

	<!-- Classes shared between different kinds of products -->

	<class name="gen::PdfInfo"/>
	<class name="std::auto_ptr&lt;gen::PdfInfo&gt;"/>

	<!-- GenRunInfoProduct -->

	<class name="GenRunInfoProduct"/>
	<class name="GenRunInfoProduct::XSec"/>
	<class name="edm::Wrapper&lt;GenRunInfoProduct&gt;"/>

	<!-- GenFilterInfo -->

	<class name="GenFilterInfo"/>
	<class name="edm::Wrapper&lt;GenFilterInfo&gt;"/>


	<!-- GenEventInfoProduct -->

	<class name="GenEventInfoProduct"/>
	<class name="edm::Wrapper&lt;GenEventInfoProduct&gt;"/>

	<!-- LHE products -->

	<class name="lhef::HEPEUP::FiveVector"/>
	<class name="std::vector&lt;lhef::HEPEUP::FiveVector&gt;"/>
	<class name="lhef::HEPRUP"/>
	<class name="lhef::HEPEUP"/>
	<class name="LHERunInfoProduct::Header"/>
	<class name="std::vector&lt;LHERunInfoProduct::Header&gt;"/>
	<class name="LHERunInfoProduct"/>
	<class name="LHEEventProduct"/>
	<class name="edm::Wrapper&lt;LHERunInfoProduct&gt;"/>
	<class name="edm::Wrapper&lt;LHEEventProduct&gt;"/>

</lcgdict>
