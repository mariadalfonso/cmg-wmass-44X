import FWCore.ParameterSet.Config as cms

process = cms.Process("PAT")

process.source = cms.Source("PoolSource",
    noEventSort = cms.untracked.bool(True),
    duplicateCheckMode = cms.untracked.string('noDuplicateCheck'),
    fileNames = (cms.untracked.vstring('/store/group/phys_smp/Wmass/perrozzi/test_ewk/Z/02488368-D82A-E311-86C5-00261894392C.root' ))
)
process.TauDecayModeCutMutliplexerPrototype = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.ak3HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.3)
)


process.ak4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.4)
)


process.ak5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("ak5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("ak5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.ak5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ak5CaloJets")
)


process.ak5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("ak5CaloJets")
)


process.ak5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("ak5PFJetsSel")
)


process.ak5JetTracksAssociatorAtVertexCHS = cms.EDProducer("JetTracksAssociatorAtVertex",
    jets = cms.InputTag("ak5PFJetsSelCHS"),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5)
)


process.ak5PFJetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    jets = cms.InputTag("pfJetsForHPSTau"),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5)
)


process.ak5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    src = cms.InputTag("particleFlow"),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    doAreaDiskApprox = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5PFJetsCHS = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("pfNoPileUp"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5PFJetsLegacyHPSPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('algoIs("kStrips")'),
        name = cms.string('InStrip'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 0'),
    jetSrc = cms.InputTag("pfJetsForHPSTau"),
    builders = cms.VPSet(cms.PSet(
        name = cms.string('s'),
        stripPhiAssociationDistance = cms.double(0.2),
        plugin = cms.string('RecoTauPiZeroStripPlugin2'),
        minGammaEtStripAdd = cms.double(0.0),
        minGammaEtStripSeed = cms.double(0.5),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        maxStripBuildIterations = cms.int32(-1),
        updateStripAfterEachDaughter = cms.bool(False),
        makeCombinatoricStrips = cms.bool(False),
        applyElecTrackQcuts = cms.bool(False),
        stripCandidatesParticleIds = cms.vint32(2, 4),
        minStripEt = cms.double(1.0),
        stripEtaAssociationDistance = cms.double(0.05)
    ))
)


process.ak5PFJetsLegacyTaNCPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('mass() < 0.2'),
        name = cms.string('PFTDM'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 1.5'),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        plugin = cms.string('RecoTauPiZeroTrivialPlugin'),
        name = cms.string('1'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        )
    ), 
        cms.PSet(
            maxMass = cms.double(-1.0),
            plugin = cms.string('RecoTauPiZeroCombinatoricPlugin'),
            minMass = cms.double(0.0),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(8),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(1.0),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(1.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                ),
                pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                signalQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(3),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(0.5),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(0.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                )
            ),
            choose = cms.uint32(2),
            maxInputGammas = cms.uint32(10),
            name = cms.string('2')
        ))
)


process.ak5PFJetsRecoTauPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('abs(eta()) < 1.5 & abs(mass() - 0.13579) < 0.05'),
        name = cms.string('nearPiZeroMass'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
            selection = cms.string('abs(eta()) > 1.5 & mass() < 0.2'),
            name = cms.string('nearPiZeroMass'),
            plugin = cms.string('RecoTauPiZeroStringQuality'),
            selectionFailValue = cms.double(1000)
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
            selection = cms.string('algoIs("kStrips")'),
            name = cms.string('InStrip'),
            plugin = cms.string('RecoTauPiZeroStringQuality'),
            selectionFailValue = cms.double(1000)
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 1.5'),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        maxMass = cms.double(-1.0),
        plugin = cms.string('RecoTauPiZeroCombinatoricPlugin'),
        minMass = cms.double(0.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        choose = cms.uint32(2),
        maxInputGammas = cms.uint32(10),
        name = cms.string('2')
    ), 
        cms.PSet(
            name = cms.string('s'),
            stripPhiAssociationDistance = cms.double(0.2),
            plugin = cms.string('RecoTauPiZeroStripPlugin2'),
            minGammaEtStripAdd = cms.double(0.0),
            minGammaEtStripSeed = cms.double(0.5),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(8),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(1.0),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(1.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                ),
                pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                signalQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(3),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(0.5),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(0.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                )
            ),
            maxStripBuildIterations = cms.int32(-1),
            updateStripAfterEachDaughter = cms.bool(False),
            makeCombinatoricStrips = cms.bool(False),
            applyElecTrackQcuts = cms.bool(False),
            stripCandidatesParticleIds = cms.vint32(2, 4),
            minStripEt = cms.double(1.0),
            stripEtaAssociationDistance = cms.double(0.05)
        ))
)


process.ak7GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.7)
)


process.ca4GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('CambridgeAachen'),
    rParam = cms.double(0.4)
)


process.ca4GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca4GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.cleanElectronTriggerMatchHLTEle27CaloIdVTCaloIsoTTrkIdTTrkIsoT = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('path( "HLT_Ele27_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v*" )'),
    src = cms.InputTag("cleanPatElectrons"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanElectronTriggerMatchL1EGammaCollection = cms.EDProducer("PATTriggerMatcherDRLessByR",
    matchedCuts = cms.string('coll( "l1extraParticles:NonIsolated" ) || coll( "l1extraParticles:Isolated" )'),
    src = cms.InputTag("cleanPatElectrons"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanJetTriggerMatchHLTJet240 = cms.EDProducer("PATTriggerMatcherDRLessByR",
    matchedCuts = cms.string('path( "HLT_Jet240_v*" )'),
    src = cms.InputTag("cleanPatJets"),
    maxDPtRel = cms.double(3.0),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.4),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanJetTriggerMatchHLTMu17CentralJet30 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('type( "TriggerJet" ) && path( "HLT_Mu17_CentralJet30_v*" )'),
    src = cms.InputTag("cleanPatJets"),
    maxDPtRel = cms.double(3.0),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.4),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanMuonTriggerMatchHLTDoubleMu6 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('path( "HLT_DoubleMu6_v*" )'),
    src = cms.InputTag("cleanPatMuons"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanMuonTriggerMatchHLTMu17CentralJet30 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('type( "TriggerMuon" ) && path( "HLT_Mu17_CentralJet30_v*" )'),
    src = cms.InputTag("cleanPatMuons"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanMuonTriggerMatchHLTMu20 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('path( "HLT_Mu20_v*" )'),
    src = cms.InputTag("cleanPatMuons"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanMuonTriggerMatchPDSingleMu = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('path( "HLT_IsoMu12_v*" ) || path( "HLT_IsoMu15_v*" ) || path( "HLT_IsoMu17_v*" ) || path( "HLT_IsoMu24_v*" ) || path( "HLT_IsoMu30_v*" ) || path( "HLT_L1SingleMu10_v*" ) || path( "HLT_L1SingleMu20_v*" ) || path( "HLT_L2Mu10_v*" ) || path( "HLT_L2Mu20_v*" ) || path( "HLT_Mu3_v*" ) || path( "HLT_Mu5_v*" ) || path( "HLT_Mu8_v*" ) || path( "HLT_Mu12_v*" ) || path( "HLT_Mu15_v*" ) || path( "HLT_Mu20_v*" ) || path( "HLT_Mu24_v*" ) || path( "HLT_Mu30_v*" )'),
    src = cms.InputTag("cleanPatMuons"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanMuonTriggerMatchTriggerMuon = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('type( "TriggerL1Mu" ) || type( "TriggerMuon" )'),
    src = cms.InputTag("cleanPatMuons"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanPatElectronsTriggerMatch = cms.EDProducer("PATTriggerMatchElectronEmbedder",
    matches = cms.VInputTag("cleanElectronTriggerMatchHLTEle27CaloIdVTCaloIsoTTrkIdTTrkIsoT"),
    src = cms.InputTag("cleanPatElectrons")
)


process.cleanPatJetsTriggerMatch = cms.EDProducer("PATTriggerMatchJetEmbedder",
    matches = cms.VInputTag("cleanJetTriggerMatchHLTJet240"),
    src = cms.InputTag("cleanPatJets")
)


process.cleanPatMuonsTriggerMatch = cms.EDProducer("PATTriggerMatchMuonEmbedder",
    matches = cms.VInputTag("cleanMuonTriggerMatchHLTMu20", "cleanMuonTriggerMatchHLTDoubleMu6"),
    src = cms.InputTag("cleanPatMuons")
)


process.cleanPatPhotonsTriggerMatch = cms.EDProducer("PATTriggerMatchPhotonEmbedder",
    matches = cms.VInputTag("cleanPhotonTriggerMatchHLTPhoton26IsoVLPhoton18"),
    src = cms.InputTag("cleanPatPhotons")
)


process.cleanPatTausTriggerMatch = cms.EDProducer("PATTriggerMatchTauEmbedder",
    matches = cms.VInputTag("cleanTauTriggerMatchHLTDoubleIsoPFTau20Trk5"),
    src = cms.InputTag("cleanPatTaus")
)


process.cleanPhotonTriggerMatchHLTPhoton26IsoVLPhoton18 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('path( "HLT_Photon26_IsoVL_Photon18_v*" )'),
    src = cms.InputTag("cleanPatPhotons"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cleanTauTriggerMatchHLTDoubleIsoPFTau20Trk5 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('path( "HLT_DoubleIsoPFTau20_Trk5_v*" )'),
    src = cms.InputTag("cleanPatTaus"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.cmgCaloBaseJetLead = cms.EDProducer("LeadingCMGBaseJetSelector",
    index = cms.int32(2),
    inputCollection = cms.InputTag("cmgCaloBaseJet")
)


process.cmgPFBaseJetLead = cms.EDProducer("LeadingCMGBaseJetSelector",
    index = cms.int32(4),
    inputCollection = cms.InputTag("cmgPFBaseJetAll")
)


process.cmgPFBaseJetLeadCHS = cms.EDProducer("LeadingCMGBaseJetSelector",
    index = cms.int32(4),
    inputCollection = cms.InputTag("cmgPFBaseJetAllCHS")
)


process.cmgPUJetMva = cms.EDProducer("PileupJetIdProducer",
    produceJetIds = cms.bool(False),
    runMvas = cms.bool(True),
    inputIsCorrected = cms.bool(True),
    vertexes = cms.InputTag("offlinePrimaryVertices"),
    residualsTxt = cms.FileInPath('CMGTools/External/data/dummy.txt'),
    jec = cms.string('AK5PF'),
    residualsFromTxt = cms.bool(False),
    applyJec = cms.bool(False),
    jetids = cms.InputTag("puJetId"),
    rho = cms.InputTag("kt6PFJets","rho"),
    jets = cms.InputTag("selectedPatJets"),
    algos = cms.VPSet(cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'beta', 
            'betaStar'),
        tmvaMethod = cms.string('PuJetIdMinMVA'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdMinMVA.weights.xml'),
        tmvaSpectators = cms.vstring('nvtx', 
            'jetPt', 
            'jetEta'),
        label = cms.string('simple'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
            Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
            Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
            Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
            Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
            Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
        ),
        impactParTkThreshold = cms.double(1.0)
    ), 
        cms.PSet(
            tmvaVariables = cms.vstring('frac01', 
                'frac02', 
                'frac03', 
                'frac04', 
                'frac05', 
                'nvtx', 
                'nNeutrals', 
                'beta', 
                'betaStar', 
                'dZ', 
                'nCharged'),
            tmvaMethod = cms.string('PuJetIdOptMVA'),
            cutBased = cms.bool(False),
            tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
            tmvaSpectators = cms.vstring('jetPt', 
                'jetEta'),
            label = cms.string('full'),
            version = cms.int32(-1),
            JetIdParams = cms.PSet(
                Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
                Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
                Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
                Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
                Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
                Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
                Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
                Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
                Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
                Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
                Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
                Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
            ),
            impactParTkThreshold = cms.double(1.0)
        ), 
        cms.PSet(
            cutBased = cms.bool(True),
            JetIdParams = cms.PSet(
                Pt010_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
                Pt3050_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt3050_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt010_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt010_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt1020_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
                Pt1020_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt2030_RMSTight = cms.vdouble(0.05, 0.07, 0.03, 0.045),
                Pt3050_RMSTight = cms.vdouble(0.05, 0.06, 0.03, 0.04),
                Pt1020_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05),
                Pt3050_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt3050_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
                Pt2030_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
                Pt010_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt2030_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt2030_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt2030_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt2030_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt010_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt3050_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt010_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05)
            ),
            impactParTkThreshold = cms.double(1.0),
            label = cms.string('cutbased')
        ), 
        cms.PSet(
            tmvaVariables = cms.vstring('nvtx', 
                'jetPt', 
                'jetEta', 
                'jetPhi', 
                'dZ', 
                'd0', 
                'beta', 
                'betaStar', 
                'nCharged', 
                'nNeutrals', 
                'dRMean', 
                'frac01', 
                'frac02', 
                'frac03', 
                'frac04', 
                'frac05'),
            tmvaMethod = cms.string('JetID'),
            cutBased = cms.bool(False),
            tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
            tmvaSpectators = cms.vstring(),
            label = cms.string('philv1'),
            version = cms.int32(-1),
            JetIdParams = cms.PSet(
                Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
                Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
                Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
                Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
                Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
                Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
                Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
                Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
                Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
                Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
                Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
                Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
            ),
            impactParTkThreshold = cms.double(1.0)
        ))
)


process.cmgPUJetMvaCHS = cms.EDProducer("PileupJetIdProducer",
    residualsTxt = cms.FileInPath('CMGTools/External/data/dummy.txt'),
    runMvas = cms.bool(True),
    inputIsCorrected = cms.bool(True),
    vertexes = cms.InputTag("offlinePrimaryVertices"),
    produceJetIds = cms.bool(False),
    jec = cms.string('AK5PF'),
    residualsFromTxt = cms.bool(False),
    applyJec = cms.bool(False),
    jetids = cms.InputTag("puJetIdCHS"),
    rho = cms.InputTag("kt6PFJets","rho"),
    jets = cms.InputTag("selectedPatJetsCHS"),
    algos = cms.VPSet(cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'beta', 
            'betaStar'),
        tmvaMethod = cms.string('PuJetIdMinMVA'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdMinMVA.weights.xml'),
        tmvaSpectators = cms.vstring('nvtx', 
            'jetPt', 
            'jetEta'),
        label = cms.string('simple'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
            Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
            Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
            Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
            Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
            Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
        ),
        impactParTkThreshold = cms.double(1.0)
    ), 
        cms.PSet(
            tmvaVariables = cms.vstring('frac01', 
                'frac02', 
                'frac03', 
                'frac04', 
                'frac05', 
                'nvtx', 
                'nNeutrals', 
                'beta', 
                'betaStar', 
                'dZ', 
                'nCharged'),
            tmvaMethod = cms.string('PuJetIdOptMVA'),
            cutBased = cms.bool(False),
            tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
            tmvaSpectators = cms.vstring('jetPt', 
                'jetEta'),
            label = cms.string('full'),
            version = cms.int32(-1),
            JetIdParams = cms.PSet(
                Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
                Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
                Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
                Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
                Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
                Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
                Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
                Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
                Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
                Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
                Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
                Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
            ),
            impactParTkThreshold = cms.double(1.0)
        ), 
        cms.PSet(
            cutBased = cms.bool(True),
            JetIdParams = cms.PSet(
                Pt010_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
                Pt3050_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt3050_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt010_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt010_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt1020_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
                Pt1020_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt2030_RMSTight = cms.vdouble(0.05, 0.07, 0.03, 0.045),
                Pt3050_RMSTight = cms.vdouble(0.05, 0.06, 0.03, 0.04),
                Pt1020_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05),
                Pt3050_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt3050_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
                Pt2030_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
                Pt010_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt2030_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt2030_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt2030_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt2030_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt010_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt3050_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt010_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05)
            ),
            impactParTkThreshold = cms.double(1.0),
            label = cms.string('cutbased')
        ), 
        cms.PSet(
            tmvaVariables = cms.vstring('nvtx', 
                'jetPt', 
                'jetEta', 
                'jetPhi', 
                'dZ', 
                'd0', 
                'beta', 
                'betaStar', 
                'nCharged', 
                'nNeutrals', 
                'dRMean', 
                'frac01', 
                'frac02', 
                'frac03', 
                'frac04', 
                'frac05'),
            tmvaMethod = cms.string('JetID'),
            cutBased = cms.bool(False),
            tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
            tmvaSpectators = cms.vstring(),
            label = cms.string('philv1'),
            version = cms.int32(-1),
            JetIdParams = cms.PSet(
                Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
                Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
                Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
                Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
                Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
                Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
                Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
                Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
                Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
                Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
                Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
                Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
            ),
            impactParTkThreshold = cms.double(1.0)
        ))
)


process.combinatoricRecoTaus = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsLegacyHPSPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        plugin = cms.string('RecoTauImpactParameterSignificancePlugin'),
        name = cms.string('sipt'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        )
    ), 
        cms.PSet(
            ElectronPreIDProducer = cms.InputTag("elecpreid"),
            name = cms.string('elec_rej'),
            plugin = cms.string('RecoTauElectronRejectionPlugin'),
            DataType = cms.string('AOD'),
            maximumForElectrionPreIDOutput = cms.double(-0.1),
            EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
            EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
            EcalStripSumE_minClusEnergy = cms.double(0.1),
            ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
            EcalStripSumE_deltaEta = cms.double(0.03)
        ), 
        cms.PSet(
            lev1EtaWindow = cms.double(0.1),
            corrLevel = cms.uint32(3),
            lev1PhiWindow = cms.double(0.5),
            qualityCuts = cms.PSet(
                isolationQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(8),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(1.0),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(1.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                ),
                pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
                primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
                signalQualityCuts = cms.PSet(
                    minTrackHits = cms.uint32(3),
                    minTrackVertexWeight = cms.double(-1),
                    minTrackPt = cms.double(0.5),
                    maxTrackChi2 = cms.double(100.0),
                    minTrackPixelHits = cms.uint32(0),
                    minGammaEt = cms.double(0.5),
                    maxDeltaZ = cms.double(0.2),
                    maxTransverseImpactParameter = cms.double(0.03)
                )
            ),
            name = cms.string('tau_en_recovery'),
            plugin = cms.string('RecoTauEnergyRecoveryPlugin')
        ), 
        cms.PSet(
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            name = cms.string('TTIworkaround'),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("pfJetsForHPSTau"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        name = cms.string('combinatoric'),
        plugin = cms.string('RecoTauBuilderCombinatoricPlugin'),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        decayModes = cms.VPSet(cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(1),
            maxPiZeros = cms.uint32(0),
            maxTracks = cms.uint32(6)
        ), 
            cms.PSet(
                nPiZeros = cms.uint32(1),
                nCharged = cms.uint32(1),
                maxPiZeros = cms.uint32(6),
                maxTracks = cms.uint32(6)
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(2),
                nCharged = cms.uint32(1),
                maxPiZeros = cms.uint32(5),
                maxTracks = cms.uint32(6)
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(0),
                nCharged = cms.uint32(3),
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6)
            )),
        isolationConeSize = cms.double(0.5),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.combinatoricRecoTausDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(False),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus")
)


process.combinatoricRecoTausDiscriminationByTanc = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(
        BinnedMaskedHcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
        ),
        InvariantOpeningAngle = cms.PSet(
            defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
            plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
            decayModes = cms.VPSet(cms.PSet(
                nPiZeros = cms.uint32(1),
                rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
            ), 
                cms.PSet(
                    nPiZeros = cms.uint32(2),
                    rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                    nCharged = cms.uint32(1),
                    mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
                ), 
                cms.PSet(
                    nPiZeros = cms.uint32(0),
                    rms = cms.string('0.38/max(pt, 1.0)'),
                    nCharged = cms.uint32(3),
                    mean = cms.string('0.87/max(pt, 1.0)')
                )),
            defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
        ),
        BinnedMaskedEcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.88, 2.53),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.65, 0.98, 2.53),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.74, 1.05, 2.54),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.8, 1.11, 2.54),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.86, 1.15, 2.54),
                    nPUVtx = cms.int32(4)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.9, 1.19, 2.55),
                    nPUVtx = cms.int32(5)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.94, 1.22, 2.55),
                    nPUVtx = cms.int32(6)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.97, 1.25, 2.55),
                    nPUVtx = cms.int32(7)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.0, 1.27, 2.56),
                    nPUVtx = cms.int32(8)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.03, 1.3, 2.56),
                    nPUVtx = cms.int32(9)
                )),
            defaultBinning = cms.vdouble(1.03, 1.3, 2.56),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
        ),
        FlightPathSignificance = cms.PSet(
            plugin = cms.string('RecoTauDiscriminantFromDiscriminator'),
            discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
            maxValue = cms.double(25),
            minValue = cms.double(-25)
        ),
        BinnedTrackIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
            plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
        )
    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('1prong0pi0'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('1prong1pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('1prong2pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('3prong0pi0'),
            nCharged = cms.uint32(3)
        )),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    remapOutput = cms.bool(True),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    dbLabel = cms.string('hpstanc')
)


process.combinatoricRecoTausHPSSelector = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    src = cms.InputTag("combinatoricRecoTaus"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(5.0),
    coneSizeFormula = cms.string('0.3'),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        )),
    matchingCone = cms.double(0.1)
)


process.combinatoricRecoTausTancTransform = cms.EDProducer("RecoTauMVATransform",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    transforms = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508)+cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335)+cms.vdouble(0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 0.9679163435, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(3)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdoublecms.vdouble(0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364)+cms.vdouble(0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdoublecms.vdouble(0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107)+cms.vdouble(0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277)+cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792)+cms.vdouble(0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        )),
    toTransform = cms.InputTag("combinatoricRecoTausDiscriminationByTanc"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus")
)


process.combinedMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedMVA'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"), cms.InputTag("softMuonTagInfos"), cms.InputTag("softElectronTagInfos"))
)


process.combinedSecondaryVertexBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertex'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"))
)


process.combinedSecondaryVertexBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertex'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfosCHS"), cms.InputTag("secondaryVertexTagInfosCHS"))
)


process.combinedSecondaryVertexMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertexMVA'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"))
)


process.combinedSecondaryVertexMVABJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertexMVA'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfosCHS"), cms.InputTag("secondaryVertexTagInfosCHS"))
)


process.corMetGlobalMuons = cms.EDProducer("MuonMET",
    muonMETDepositValueMapInputTag = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    metTypeInputTag = cms.InputTag("CaloMET"),
    muonsInputTag = cms.InputTag("muons"),
    uncorMETInputTag = cms.InputTag("met")
)


process.deltaPhiJetMET = cms.EDProducer("DeltaPhiProducer",
    met = cms.InputTag("cmgPFMET"),
    objects = cms.InputTag("cmgPFJetSel")
)


process.dummy = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.eidCutBasedExt = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('loose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidHyperTight1 = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('hypertight1'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True),
    classbasedhypertight1EleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.00651, 0.00351, 0.00553, 0.00916, 0.0053, 
            0.00828, 0.0108, 0.0297, 0.00724),
        cutiso_sum = cms.vdouble(7.92, 6.85, 7.87, 6.77, 4.47, 
            5.28, 6.57, 10.2, 1.78),
        cutip_gsf = cms.vdouble(0.0121, 0.0176, 0.0601, 0.0296, 0.174, 
            0.097, 0.0774, 0.133, 0.078),
        cutip_gsfl = cms.vdouble(0.0101, 0.0156, 0.0687, 0.0213, 0.125, 
            0.0816, 0.079, 0.13, 0.0479),
        cuthoe = cms.vdouble(0.0617, 0.037, 0.141, 0.291, 0.0382, 
            0.134, 0.419, 0.387, 0.393),
        cutiso_sumoetl = cms.vdouble(4.18, 3.12, 3.44, 3.25, 1.77, 
            2.06, 2.83, 3.12, 1.43),
        cutfmishits = cms.vdouble(3.5, 1.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 0.5),
        cuthoel = cms.vdouble(0.0443, 0.0357, 0.141, 0.281, 0.0307, 
            0.128, 0.227, 0.38, 0.132),
        cutdphiin = cms.vdouble(0.0483, 0.0491, 0.23, 0.0348, 0.0744, 
            0.204, 0.0995, 0.393, 0.284),
        cutseel = cms.vdouble(0.0104, 0.0103, 0.0101, 0.0304, 0.0274, 
            0.0278, 0.00958, 0.0254, 0.0283),
        cutiso_sumoet = cms.vdouble(5.2, 3.93, 3.88, 4.1, 2.4, 
            2.43, 3.49, 3.94, 3.01),
        cutdcotdist = cms.vdouble(0.0148, 0.015, 0.00825, 0.0316, 0.0285, 
            0.0315, 0.00662, 0.0348, 3.63e-06),
        cutsee = cms.vdouble(0.0105, 0.0104, 0.0101, 0.0324, 0.028, 
            0.0285, 0.00967, 0.0261, 0.0295),
        cuteseedopcor = cms.vdouble(0.772, 0.99, 1.01, 0.855, 0.911, 
            0.772, 0.917, 1.06, 0.763),
        cutdphiinl = cms.vdouble(0.0474, 0.0451, 0.218, 0.0299, 0.0737, 
            0.211, 0.0999, 0.353, 0.289),
        cutdetainl = cms.vdouble(0.00605, 0.00323, 0.00493, 0.00801, 0.00493, 
            0.00791, 0.0103, 0.0294, 0.0041)
    )
)


process.eidHyperTight2 = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('hypertight2'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True),
    classbasedhypertight2EleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.00529, 0.00256, 0.00489, 0.00789, 0.0053, 
            0.00737, 0.00891, 0.00936, 0.00594),
        cutiso_sum = cms.vdouble(6.4, 5.77, 6.54, 5.22, 3.86, 
            4.63, 6.31, 10.2, 1.78),
        cutip_gsf = cms.vdouble(0.0114, 0.0138, 0.0529, 0.0187, 0.131, 
            0.0863, 0.0774, 0.104, 0.0242),
        cutip_gsfl = cms.vdouble(0.00983, 0.0135, 0.0427, 0.0172, 0.125, 
            0.0792, 0.079, 0.13, 0.034),
        cuthoe = cms.vdouble(0.0494, 0.0345, 0.14, 0.202, 0.0382, 
            0.119, 0.123, 0.382, 0.25),
        cutiso_sumoetl = cms.vdouble(3.08, 2.31, 2.84, 2.53, 1.65, 
            1.72, 2.34, 3.11, 1.35),
        cutfmishits = cms.vdouble(1.5, 1.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, -0.5),
        cuthoel = cms.vdouble(0.0404, 0.0342, 0.131, 0.185, 0.0301, 
            0.127, 0.227, 0.38, 0.132),
        cutdphiin = cms.vdouble(0.0241, 0.0383, 0.148, 0.0291, 0.0315, 
            0.157, 0.089, 0.102, 0.281),
        cutseel = cms.vdouble(0.0102, 0.0102, 0.0098, 0.029, 0.0274, 
            0.0275, 0.00958, 0.0249, 0.025),
        cutiso_sumoet = cms.vdouble(4.03, 3.03, 3.24, 3.13, 2.05, 
            2.01, 2.99, 3.44, 2.76),
        cutdcotdist = cms.vdouble(0.0115, 0.0107, 0.00401, 0.0297, 0.0285, 
            0.031, 0.000934, 0.034, 2.82e-07),
        cutsee = cms.vdouble(0.0103, 0.0103, 0.00988, 0.0303, 0.0279, 
            0.0279, 0.00967, 0.0252, 0.0258),
        cuteseedopcor = cms.vdouble(1.03, 0.995, 1.03, 1.01, 0.946, 
            0.903, 0.997, 1.14, 0.8),
        cutdphiinl = cms.vdouble(0.0213, 0.0379, 0.125, 0.0224, 0.0369, 
            0.164, 0.0999, 0.0923, 0.237),
        cutdetainl = cms.vdouble(0.00448, 0.00259, 0.00442, 0.00654, 0.00493, 
            0.00698, 0.00849, 0.00906, -0.00481)
    )
)


process.eidHyperTight3 = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('hypertight3'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True),
    classbasedhypertight3EleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.00486, 0.00229, 0.0044, 0.00779, 0.00407, 
            0.00633, 0.0077, 0.00793, 0.00594),
        cutiso_sum = cms.vdouble(5.4, 5.41, 5.88, 4.32, 3.86, 
            4.33, 5.87, 9.05, 1.78),
        cutip_gsf = cms.vdouble(0.0114, 0.0126, 0.0379, 0.0168, 0.121, 
            0.0529, 0.0774, 0.0335, 0.0242),
        cutip_gsfl = cms.vdouble(0.00983, 0.0118, 0.0359, 0.0156, 0.12, 
            0.0536, 0.079, 0.0288, 0.034),
        cuthoe = cms.vdouble(0.0352, 0.0345, 0.133, 0.188, 0.0272, 
            0.119, 0.0928, 0.246, 0.25),
        cutiso_sumoetl = cms.vdouble(2.36, 2.02, 2.29, 1.89, 1.65, 
            1.69, 2.03, 2.79, 1.35),
        cutfmishits = cms.vdouble(0.5, 1.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, -0.5),
        cuthoel = cms.vdouble(0.0404, 0.034, 0.131, 0.184, 0.0264, 
            0.118, 0.0976, 0.253, 0.132),
        cutdphiin = cms.vdouble(0.0241, 0.0288, 0.0739, 0.0291, 0.0191, 
            0.114, 0.0361, 0.0892, 0.281),
        cutseel = cms.vdouble(0.0102, 0.01, 0.00973, 0.0279, 0.0273, 
            0.0269, 0.0094, 0.0246, 0.025),
        cutiso_sumoet = cms.vdouble(3.03, 2.5, 2.58, 2.44, 1.91, 
            1.76, 2.92, 3.13, 2.76),
        cutdcotdist = cms.vdouble(0.00963, 0.00511, 0.000195, 0.0297, 0.0285, 
            0.0218, 2.61e-05, 0.0257, 2.82e-07),
        cutsee = cms.vdouble(0.0103, 0.0101, 0.00984, 0.0289, 0.0274, 
            0.0273, 0.00947, 0.0244, 0.0258),
        cuteseedopcor = cms.vdouble(1.07, 1.01, 1.08, 1.01, 0.969, 
            0.91, 1.04, 1.2, 0.8),
        cutdphiinl = cms.vdouble(0.0195, 0.0342, 0.0806, 0.0222, 0.0226, 
            0.0973, 0.0451, 0.0923, 0.237),
        cutdetainl = cms.vdouble(0.00448, 0.0023, 0.00414, 0.00604, 0.00387, 
            0.00609, 0.00797, 0.00804, -0.00481)
    )
)


process.eidHyperTight4 = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('hypertight4'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True),
    classbasedhypertight4EleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.00244, 0.00167, 0.00226, 0.00343, 0.00351, 
            0.00352, 0.00298, 0.00479, 0.00594),
        cutiso_sum = cms.vdouble(5.4, 5.41, 5.88, 4.32, 3.86, 
            4.33, 5.86, 9.05, 1.78),
        cutip_gsf = cms.vdouble(0.00761, 0.00522, 0.0379, 0.0102, 0.0462, 
            0.0182, 0.0774, 0.0335, 0.0242),
        cutip_gsfl = cms.vdouble(0.00781, 0.00425, 0.0308, 0.0104, 0.0235, 
            0.0245, 0.079, 0.0288, 0.034),
        cuthoe = cms.vdouble(0.0239, 0.0268, 0.0212, 0.103, 0.00992, 
            0.0707, 0.0712, 0.148, 0.25),
        cutiso_sumoetl = cms.vdouble(2.28, 2.02, 2.04, 1.69, 1.65, 
            1.61, 2.03, 1.82, 1.35),
        cutfmishits = cms.vdouble(0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, -0.5),
        cuthoel = cms.vdouble(0.0287, 0.0194, 0.0216, 0.0568, 0.0135, 
            0.0404, 0.0798, 0.15, 0.132),
        cutdphiin = cms.vdouble(0.00844, 0.00521, 0.0218, 0.0139, 0.00782, 
            0.0152, 0.0259, 0.0387, 0.281),
        cutseel = cms.vdouble(0.00966, 0.00969, 0.00958, 0.0273, 0.0266, 
            0.0266, 0.00864, 0.0246, 0.025),
        cutiso_sumoet = cms.vdouble(2.53, 2.1, 1.87, 1.84, 1.79, 
            1.61, 2.53, 1.98, 2.76),
        cutdcotdist = cms.vdouble(0.00027, 0.000143, 0.000195, 0.00264, 0.0282, 
            0.0164, 2.61e-05, 0.0257, 2.82e-07),
        cutsee = cms.vdouble(0.00999, 0.00961, 0.00965, 0.0275, 0.0261, 
            0.0264, 0.00918, 0.0244, 0.0258),
        cuteseedopcor = cms.vdouble(1.15, 1.01, 1.21, 1.07, 0.969, 
            0.91, 1.08, 1.36, 0.8),
        cutdphiinl = cms.vdouble(0.00577, 0.0032, 0.0285, 0.0222, 0.007, 
            0.0184, 0.0291, 0.044, 0.237),
        cutdetainl = cms.vdouble(0.00234, 0.00129, 0.0023, 0.0033, 0.00361, 
            0.00384, 0.00253, 0.00366, -0.00481)
    )
)


process.eidLoose = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('loose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0133, 0.00528, 0.0144, 0.0219, 0.0125, 
            0.0137, 0.0218, 0.0384, 0.0275),
        cutiso_sum = cms.vdouble(20.2, 13.1, 15.6, 16.1, 8.61, 
            11.0, 13.1, 16.3, 2.37),
        cutip_gsf = cms.vdouble(0.0848, 0.0995, 0.175, 0.0697, 0.565, 
            0.477, 0.43, 3.32, 0.161),
        cutip_gsfl = cms.vdouble(0.0758, 0.0981, 0.176, 0.0666, 0.565, 
            0.516, 0.901, 1.12, 0.0842),
        cuthoe = cms.vdouble(0.196, 0.0792, 0.148, 0.366, 0.0688, 
            0.145, 0.429, 0.442, 0.4),
        cutiso_sumoetl = cms.vdouble(12.1, 9.18, 8.66, 9.43, 4.34, 
            5.73, 10.8, 10.5, 8.08),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 1.5, 1.5, 
            1.5, 3.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.226, 0.0795, 0.148, 0.36, 0.0623, 
            0.146, 0.326, 0.383, 0.392),
        cutdphiin = cms.vdouble(0.0936, 0.246, 0.325, 0.0818, 0.322, 
            0.283, 0.354, 0.404, 0.68),
        cutseel = cms.vdouble(0.0177, 0.0115, 0.015, 0.0455, 0.0324, 
            0.0446, 0.0122, 0.0617, 0.119),
        cutiso_sumoet = cms.vdouble(14.9, 8.33, 7.64, 12.2, 4.49, 
            5.59, 7.44, 7.31, 27.4),
        cutdcotdist = cms.vdouble(0.0387, 0.035, 0.0318, 0.0392, 0.0394, 
            0.0397, 0.031, 0.0395, 0.011),
        cutsee = cms.vdouble(0.0157, 0.0112, 0.014, 0.0395, 0.031, 
            0.0337, 0.0111, 0.0613, 0.0669),
        cuteseedopcor = cms.vdouble(0.637, 0.879, 0.402, 0.745, 0.367, 
            0.488, 0.127, 0.719, 0.0628),
        cutdphiinl = cms.vdouble(0.0793, 0.244, 0.311, 0.0912, 0.304, 
            0.282, 0.339, 0.661, 0.291),
        cutdetainl = cms.vdouble(0.0126, 0.00488, 0.0168, 0.0267, 0.0121, 
            0.0131, 0.0192, 0.197, 0.0284)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidMedium = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('medium'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True),
    classbasedmediumEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0133, 0.00448, 0.00922, 0.0154, 0.00726, 
            0.0124, 0.0129, 0.0384, 0.0188),
        cutiso_sum = cms.vdouble(14.4, 11.2, 10.9, 10.8, 6.35, 
            9.78, 13.0, 16.2, 1.96),
        cutip_gsf = cms.vdouble(0.0245, 0.0974, 0.148, 0.0549, 0.565, 
            0.333, 0.204, 0.541, 0.121),
        cutip_gsfl = cms.vdouble(0.0192, 0.0981, 0.133, 0.0434, 0.565, 
            0.324, 0.233, 0.43, 0.0644),
        cuthoe = cms.vdouble(0.196, 0.063, 0.148, 0.366, 0.0566, 
            0.145, 0.429, 0.428, 0.399),
        cutiso_sumoetl = cms.vdouble(9.44, 7.67, 7.15, 7.34, 3.35, 
            4.7, 8.32, 7.55, 6.25),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 1.5, 0.5, 0.5),
        cuthoel = cms.vdouble(0.219, 0.0619, 0.147, 0.358, 0.0461, 
            0.146, 0.326, 0.381, 0.389),
        cutdphiin = cms.vdouble(0.0709, 0.243, 0.296, 0.0798, 0.235, 
            0.276, 0.342, 0.404, 0.299),
        cutseel = cms.vdouble(0.0142, 0.0111, 0.0129, 0.0432, 0.0296, 
            0.0382, 0.0101, 0.0445, 0.119),
        cutiso_sumoet = cms.vdouble(10.1, 6.41, 6.0, 8.14, 3.9, 
            4.76, 6.86, 6.48, 17.4),
        cutdcotdist = cms.vdouble(0.0332, 0.0292, 0.0249, 0.0392, 0.0341, 
            0.0396, 0.0291, 0.0395, 0.00771),
        cutsee = cms.vdouble(0.013, 0.0109, 0.0118, 0.0394, 0.0304, 
            0.0328, 0.01, 0.0373, 0.0669),
        cuteseedopcor = cms.vdouble(0.642, 0.944, 0.453, 0.762, 0.367, 
            0.557, 0.198, 0.915, 0.0628),
        cutdphiinl = cms.vdouble(0.0742, 0.243, 0.297, 0.0912, 0.226, 
            0.276, 0.334, 0.558, 0.291),
        cutdetainl = cms.vdouble(0.0121, 0.00422, 0.00918, 0.0161, 0.00645, 
            0.0116, 0.0123, 0.062, 0.0243)
    )
)


process.eidSuperTight = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('supertight'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True),
    classbasedsupertightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.00784, 0.00367, 0.007, 0.0128, 0.00565, 
            0.00953, 0.0108, 0.0297, 0.00724),
        cutiso_sum = cms.vdouble(8.95, 8.18, 8.75, 7.47, 5.43, 
            5.87, 8.16, 10.2, 1.78),
        cutip_gsf = cms.vdouble(0.0142, 0.0266, 0.106, 0.0338, 0.323, 
            0.107, 0.0774, 0.232, 0.078),
        cutip_gsfl = cms.vdouble(0.0115, 0.0272, 0.0841, 0.0249, 0.417, 
            0.102, 0.079, 0.169, 0.0479),
        cuthoe = cms.vdouble(0.0919, 0.0411, 0.142, 0.335, 0.0382, 
            0.141, 0.429, 0.401, 0.399),
        cutiso_sumoetl = cms.vdouble(6.02, 3.96, 4.23, 4.73, 1.99, 
            2.64, 3.72, 3.81, 1.44),
        cutfmishits = cms.vdouble(3.5, 1.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 0.5),
        cuthoel = cms.vdouble(0.0751, 0.0381, 0.141, 0.332, 0.031, 
            0.143, 0.235, 0.38, 0.132),
        cutdphiin = cms.vdouble(0.0483, 0.0739, 0.238, 0.0574, 0.129, 
            0.213, 0.331, 0.393, 0.284),
        cutseel = cms.vdouble(0.0112, 0.0105, 0.0107, 0.0351, 0.0275, 
            0.0287, 0.00959, 0.0267, 0.0298),
        cutiso_sumoet = cms.vdouble(6.45, 5.14, 4.99, 5.21, 2.65, 
            3.12, 4.52, 4.72, 3.68),
        cutdcotdist = cms.vdouble(0.0211, 0.0186, 0.0155, 0.034, 0.0285, 
            0.0332, 0.0164, 0.0375, 0.00013),
        cutsee = cms.vdouble(0.0109, 0.0105, 0.0105, 0.0324, 0.0281, 
            0.0295, 0.00977, 0.0275, 0.0295),
        cuteseedopcor = cms.vdouble(0.732, 0.977, 0.983, 0.855, 0.431, 
            0.735, 0.418, 0.999, 0.589),
        cutdphiinl = cms.vdouble(0.0579, 0.0721, 0.218, 0.077, 0.141, 
            0.211, 0.243, 0.353, 0.289),
        cutdetainl = cms.vdouble(0.00761, 0.00328, 0.00657, 0.0103, 0.00505, 
            0.00855, 0.0107, 0.0294, 0.0041)
    )
)


process.eidTight = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('tight'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.00892, 0.00396, 0.0085, 0.0134, 0.00627, 
            0.0105, 0.0112, 0.0309, 0.0188),
        cutiso_sum = cms.vdouble(12.3, 9.77, 10.1, 9.77, 6.13, 
            7.55, 13.0, 16.2, 1.78),
        cutip_gsf = cms.vdouble(0.0158, 0.0825, 0.115, 0.0405, 0.54, 
            0.151, 0.0774, 0.417, 0.078),
        cutip_gsfl = cms.vdouble(0.0127, 0.0626, 0.0968, 0.0302, 0.565, 
            0.146, 0.079, 0.41, 0.0479),
        cuthoe = cms.vdouble(0.174, 0.0488, 0.146, 0.364, 0.0493, 
            0.145, 0.429, 0.42, 0.399),
        cutiso_sumoetl = cms.vdouble(7.56, 5.08, 5.77, 5.74, 2.37, 
            3.32, 4.97, 5.46, 3.82),
        cutfmishits = cms.vdouble(4.5, 1.5, 0.5, 1.5, 1.5, 
            0.5, 0.5, 0.5, 0.5),
        cuthoel = cms.vdouble(0.219, 0.0525, 0.147, 0.357, 0.0425, 
            0.145, 0.326, 0.38, 0.132),
        cutdphiin = cms.vdouble(0.0637, 0.153, 0.29, 0.0769, 0.181, 
            0.234, 0.342, 0.393, 0.284),
        cutseel = cms.vdouble(0.0127, 0.0108, 0.0113, 0.0419, 0.0281, 
            0.0302, 0.00976, 0.0428, 0.0298),
        cutiso_sumoet = cms.vdouble(7.75, 5.45, 5.67, 5.97, 3.17, 
            3.86, 6.06, 5.31, 10.5),
        cutdcotdist = cms.vdouble(0.0268, 0.0236, 0.0221, 0.0372, 0.0317, 
            0.0361, 0.0255, 0.0375, 0.000216),
        cutsee = cms.vdouble(0.0116, 0.0107, 0.0108, 0.0349, 0.0289, 
            0.0308, 0.00987, 0.0337, 0.044),
        cuteseedopcor = cms.vdouble(0.652, 0.969, 0.912, 0.779, 0.367, 
            0.699, 0.328, 0.967, 0.589),
        cutdphiinl = cms.vdouble(0.0692, 0.233, 0.296, 0.0865, 0.185, 
            0.276, 0.334, 0.353, 0.29),
        cutdetainl = cms.vdouble(0.00923, 0.00377, 0.0087, 0.0139, 0.0056, 
            0.0094, 0.0107, 0.062, 0.0041)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidVeryLoose = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('veryloose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string('V06'),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True),
    classbasedverylooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0133, 0.00697, 0.0243, 0.0247, 0.055, 
            0.022, 0.0431, 0.0384, 0.0313),
        cutiso_sum = cms.vdouble(25.6, 17.0, 17.6, 18.6, 8.79, 
            12.5, 21.4, 23.4, 3.23),
        cutip_gsf = cms.vdouble(0.0848, 0.105, 0.178, 0.0878, 0.713, 
            0.477, 0.43, 5.69, 0.476),
        cutip_gsfl = cms.vdouble(0.087, 0.109, 0.179, 0.0755, 0.714, 
            0.524, 0.901, 1.84, 0.301),
        cuthoe = cms.vdouble(0.23, 0.116, 0.148, 0.366, 0.101, 
            0.146, 0.429, 0.442, 0.4),
        cutiso_sumoetl = cms.vdouble(17.6, 11.0, 11.4, 13.7, 6.28, 
            8.27, 15.9, 15.8, 8.08),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 4.5, 2.5, 
            1.5, 3.5, 4.5, 3.5),
        cuthoel = cms.vdouble(0.244, 0.117, 0.148, 0.36, 0.0769, 
            0.146, 0.326, 0.383, 0.393),
        cutdphiin = cms.vdouble(0.0971, 0.27, 0.359, 0.0836, 0.442, 
            0.334, 0.363, 0.404, 0.92),
        cutseel = cms.vdouble(0.0177, 0.0123, 0.0192, 0.0473, 0.0354, 
            0.0487, 0.0159, 0.0617, 0.119),
        cutiso_sumoet = cms.vdouble(53.8, 10.7, 10.3, 40.2, 5.81, 
            8.01, 9.27, 11.5, 886.0),
        cutdcotdist = cms.vdouble(0.0389, 0.039, 0.0396, 0.0392, 0.0395, 
            0.0397, 0.0392, 0.0395, 0.0298),
        cutsee = cms.vdouble(0.0157, 0.012, 0.0184, 0.0398, 0.0324, 
            0.0381, 0.0125, 0.0642, 0.0669),
        cuteseedopcor = cms.vdouble(0.635, 0.327, 0.4, 0.731, 0.35, 
            0.454, 0.127, 0.291, 0.0628),
        cutdphiinl = cms.vdouble(0.0793, 0.266, 0.36, 0.0912, 0.442, 
            0.333, 0.339, 0.661, 0.292),
        cutdetainl = cms.vdouble(0.0128, 0.00593, 0.0264, 0.0272, 0.0672, 
            0.0206, 0.0192, 0.197, 0.0291)
    )
)


process.elPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles"),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        SCMatch_Veto = cms.bool(False),
        ComponentName = cms.string('PFCandWithSuperClusterExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        MissHitSCMatch_Veto = cms.bool(True),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles"),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string('')
    )
)


process.elPFIsoValueCharged03NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositCharged"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueCharged03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositCharged"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueCharged04NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositCharged"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueCharged04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositCharged"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueChargedAll03NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueChargedAll03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueChargedAll04NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueChargedAll04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueGamma03NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositGamma"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueGamma03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositGamma"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueGamma04NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositGamma"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueGamma04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositGamma"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueNeutral03NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositNeutral"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueNeutral03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositNeutral"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueNeutral04NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositNeutral"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValueNeutral04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositNeutral"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValuePU03NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositPU"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValuePU03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositPU"),
        deltaR = cms.double(0.3),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValuePU04NoPFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositPU"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.elPFIsoValuePU04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("elPFIsoDepositPU"),
        deltaR = cms.double(0.4),
        PivotCoordinatesForEBEE = cms.bool(True),
        weight = cms.string('1'),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.eleIsoDepositEcalFromHits = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        isolationVariable = cms.string('et'),
        tryBoth = cms.bool(True),
        intStrip = cms.double(0.0),
        ComponentName = cms.string('EgammaRecHitExtractor'),
        endcapEcalHits = cms.InputTag("reducedEcalRecHitsEE"),
        recHitFlagsToBeExcluded = cms.vstring('kFaultyHardware', 
            'kPoorCalib', 
            'kTowerRecovered', 
            'kDead'),
        intRadius = cms.double(0.0),
        severityLevelCut = cms.int32(4),
        energyMin = cms.double(0.08),
        extRadius = cms.double(0.6),
        subtractSuperClusterEnergy = cms.bool(False),
        vetoClustered = cms.bool(False),
        etMin = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        barrelEcalHits = cms.InputTag("reducedEcalRecHitsEB")
    )
)


process.eleIsoDepositHcalDepth1FromTowers = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        caloTowers = cms.InputTag("towerMaker"),
        ComponentName = cms.string('EgammaTowerExtractor'),
        hcalDepth = cms.int32(1),
        intRadius = cms.double(0.0),
        extRadius = cms.double(0.6),
        DepositLabel = cms.untracked.string(''),
        etMin = cms.double(-999.0)
    )
)


process.eleIsoDepositHcalDepth2FromTowers = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        caloTowers = cms.InputTag("towerMaker"),
        ComponentName = cms.string('EgammaTowerExtractor'),
        hcalDepth = cms.int32(2),
        intRadius = cms.double(0.0),
        extRadius = cms.double(0.6),
        DepositLabel = cms.untracked.string(''),
        etMin = cms.double(-999.0)
    )
)


process.eleIsoDepositHcalFromTowers = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        caloTowers = cms.InputTag("towerMaker"),
        ComponentName = cms.string('EgammaTowerExtractor'),
        hcalDepth = cms.int32(-1),
        intRadius = cms.double(0.0),
        extRadius = cms.double(0.6),
        DepositLabel = cms.untracked.string(''),
        etMin = cms.double(-999.0)
    )
)


process.eleIsoDepositTk = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("gsfElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        dzOption = cms.string('vz'),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('EgammaTrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(9999.0),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.0),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        inputTrackCollection = cms.InputTag("generalTracks")
    )
)


process.eleIsoFromDepsEcalFromHitsByCrystal = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("eleIsoDepositEcalFromHits"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('NumCrystalVeto(3.0)', 
            'NumCrystalEtaPhiVeto(1.5,9999.0)', 
            'EcalBarrel:AbsThresholdFromTransverse(0.08)', 
            'EcalEndcaps:AbsThreshold(0.100)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.eleIsoFromDepsHcalFromTowers = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("eleIsoDepositHcalFromTowers"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.15'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.eleIsoFromDepsTk = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("eleIsoDepositTk"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('RectangularEtaPhiVeto(-0.015,0.015,-0.5,0.5)', 
            'Threshold(0.7)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.eleIsoFromDepsTkOptimized5 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("eleIsoDepositTk"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('vetoMuons:0.015', 
            'vetoElectrons5:RectangularEtaPhiVeto(-0.015,0.015,-0.5,0.5)', 
            'RectangularEtaPhiVeto(-0.015,0.015,-0.5,0.5)', 
            'Threshold(0.7)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.eleIsoFromDepsTkOptimized7 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("eleIsoDepositTk"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('vetoMuons:0.015', 
            'vetoElectrons7:RectangularEtaPhiVeto(-0.015,0.015,-0.5,0.5)', 
            'RectangularEtaPhiVeto(-0.015,0.015,-0.5,0.5)', 
            'Threshold(0.7)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.eleTriggerMatchHLT = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('dummy'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT1 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltL1IsoRecoEcalCandidate")||coll("hltL1NonIsoRecoEcalCandidate")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT10 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltEle27WP80PixelMatchElectronsL1Seeded")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT2 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltPixelMatchElectronsL1Iso")||coll("hltPixelMatchElectronsL1NonIso")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT3 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltPixelMatch3HitElectronsL1Iso")||coll("hltPixelMatch3HitElectronsL1NonIso")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT4 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltPixelMatchElectronsActivity")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT5 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltPixelMatch3HitElectronsActivity")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT6 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltRecoEcalSuperClusterActivityCandidate")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT7 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltL1SeededRecoEcalCandidate")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT8 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltPixelMatch3HitElectronsL1Seeded")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.eleTriggerMatchHLT9 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltPixelMatchElectronsL1Seeded")'),
    src = cms.InputTag("patElectronsWithMVA"),
    maxDPtRel = cms.double(0.5),
    andOr = cms.bool(False),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.electronMatch = cms.EDProducer("MCMatcher",
    src = cms.InputTag("gsfElectrons"),
    maxDPtRel = cms.double(0.5),
    mcPdgId = cms.vint32(11),
    mcStatus = cms.vint32(1),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.5),
    checkCharge = cms.bool(True),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("genParticles")
)


process.fixedConePFTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("fixedConePFTauDecayModeProducer")
)


process.fixedConePFTauDecayModeProducer = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer")
)


process.fixedConePFTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.fixedConePFTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.fixedConePFTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.fixedConePFTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.fixedConePFTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.fixedConePFTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.fixedConePFTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.fixedConePFTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauProducer = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsRecoTauPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.10'),
        name = cms.string('fixedCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        useClosestPV = cms.bool(False),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('0.07'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        signalConePiZeros = cms.string('0.15'),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.fixedConeRecoTaus = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsRecoTauPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.10'),
        name = cms.string('fixedCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        useClosestPV = cms.bool(False),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('0.07'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        signalConePiZeros = cms.string('0.15'),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.genParticlesForJets = cms.EDProducer("InputGenJetsParticleSelector",
    src = cms.InputTag("genParticles"),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39),
    partonicFinalState = cms.bool(False),
    excludeResonances = cms.bool(True),
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    tausAsJets = cms.bool(False)
)


process.genParticlesForJetsNoMuNoNu = cms.EDProducer("InputGenJetsParticleSelector",
    src = cms.InputTag("genParticles"),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39, 12, 13, 14, 16),
    partonicFinalState = cms.bool(False),
    excludeResonances = cms.bool(True),
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    tausAsJets = cms.bool(False)
)


process.genParticlesForJetsNoNu = cms.EDProducer("InputGenJetsParticleSelector",
    src = cms.InputTag("genParticles"),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39, 12, 14, 16),
    partonicFinalState = cms.bool(False),
    excludeResonances = cms.bool(True),
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    tausAsJets = cms.bool(False)
)


process.genParticlesPruned = cms.EDProducer("GenParticlePruner",
    src = cms.InputTag("genParticles"),
    select = cms.vstring('drop  *  ', 
        'keep status()==3', 
        'keep++ pdgId =   {e+}', 
        '++keep pdgId =   {e+}', 
        'keep++ pdgId =   {e-}', 
        '++keep pdgId =   {e-}', 
        'keep++ pdgId =  {mu+}', 
        '++keep pdgId =  {mu+}', 
        'keep++ pdgId =  {mu-}', 
        '++keep pdgId =  {mu-}', 
        'keep++ pdgId = {tau+}', 
        '++keep pdgId = {tau+}', 
        'keep++ pdgId = {tau-}', 
        '++keep pdgId = {tau-}', 
        'keep status = 2 & pdgId = 4', 
        'keep status = 2 & pdgId = -4', 
        'keep status = 2 & pdgId = 5', 
        'keep status = 2 & pdgId = -5')
)


process.ghostTrackBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('ghostTrack'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("ghostTrackVertexTagInfos"))
)


process.ghostTrackBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('ghostTrack'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfosCHS"), cms.InputTag("ghostTrackVertexTagInfosCHS"))
)


process.ghostTrackVertexTagInfos = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    vertexReco = cms.PSet(
        primcut = cms.double(2.0),
        seccut = cms.double(4.0),
        maxFitChi2 = cms.double(10.0),
        fitType = cms.string('RefitGhostTrackWithVertices'),
        mergeThreshold = cms.double(3.0),
        finder = cms.string('gtvr')
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    constraint = cms.string('BeamSpot'),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(1),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip3dSig')
)


process.ghostTrackVertexTagInfosCHS = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    vertexReco = cms.PSet(
        primcut = cms.double(2.0),
        seccut = cms.double(4.0),
        maxFitChi2 = cms.double(10.0),
        fitType = cms.string('RefitGhostTrackWithVertices'),
        mergeThreshold = cms.double(3.0),
        finder = cms.string('gtvr')
    ),
    constraint = cms.string('BeamSpot'),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(1),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfosCHS"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip3dSig')
)


process.gk5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('GeneralizedKt'),
    rParam = cms.double(0.5)
)


process.gk5GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk5GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.hiGenParticlesForJets = cms.EDProducer("InputGenJetsParticleSelector",
    src = cms.InputTag("hiGenParticles"),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39),
    partonicFinalState = cms.bool(False),
    excludeResonances = cms.bool(True),
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    tausAsJets = cms.bool(False)
)


process.hpsPFTauDiscriminationByDecayModeFinding = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.1, 2.8/pt()),0.05)'),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        )),
    matchingCone = cms.double(0.1)
)


process.hpsPFTauDiscriminationByIsolationMVAraw = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolation",
    mvaMin = cms.double(0.863),
    gbrfFilePath = cms.FileInPath('RecoTauTag/RecoTau/data/gbrfTauIso.root'),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJetsForRhoComputationVoronoi","rho"),
    returnMVA = cms.bool(True),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    )
)


process.hpsPFTauDiscriminationByLooseChargedIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    applyDeltaBetaCorrection = cms.bool(False),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(2.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    applyDeltaBetaCorrection = cms.bool(True),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    relativeSumPtCut = cms.double(0.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    rhoUEOffsetCorrection = cms.double(1.0),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByLooseElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(0.6),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    applyDeltaBetaCorrection = cms.bool(False),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByLooseIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.0729'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    rhoUEOffsetCorrection = cms.double(1.0),
    maximumSumPtCut = cms.double(1.5),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    applyDeltaBetaCorrection = cms.bool(True),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    relativeSumPtCut = cms.double(0.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByLooseIsolationMVA = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        mva = cms.PSet(
            cut = cms.double(0.795),
            Producer = cms.InputTag("hpsPFTauDiscriminationByIsolationMVAraw")
        ),
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.1, 2.8/pt()),0.05)'),
    matchingCone = cms.double(0.1),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        ))
)


process.hpsPFTauDiscriminationByLooseMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.hpsPFTauDiscriminationByMVA2LooseElectronRejection = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    key = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection","category"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.double(-0.0639254)
    ), 
        cms.PSet(
            category = cms.uint32(1),
            cut = cms.double(-0.0220708)
        ), 
        cms.PSet(
            category = cms.uint32(2),
            cut = cms.double(-0.102071)
        ), 
        cms.PSet(
            category = cms.uint32(3),
            cut = cms.double(-0.0233814)
        ), 
        cms.PSet(
            category = cms.uint32(4),
            cut = cms.double(-0.0391565)
        ), 
        cms.PSet(
            category = cms.uint32(5),
            cut = cms.double(-0.142564)
        ), 
        cms.PSet(
            category = cms.uint32(6),
            cut = cms.double(0.00982555)
        ), 
        cms.PSet(
            category = cms.uint32(7),
            cut = cms.double(-0.0596019)
        ), 
        cms.PSet(
            category = cms.uint32(8),
            cut = cms.double(-0.0381238)
        ), 
        cms.PSet(
            category = cms.uint32(9),
            cut = cms.double(-0.100381)
        )),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection"),
    PFTauProducer = cms.InputTag("hpsPFTauProducer")
)


process.hpsPFTauDiscriminationByMVA2MediumElectronRejection = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    key = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection","category"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.double(0.011729)
    ), 
        cms.PSet(
            category = cms.uint32(1),
            cut = cms.double(0.0203646)
        ), 
        cms.PSet(
            category = cms.uint32(2),
            cut = cms.double(0.177502)
        ), 
        cms.PSet(
            category = cms.uint32(3),
            cut = cms.double(0.0103449)
        ), 
        cms.PSet(
            category = cms.uint32(4),
            cut = cms.double(0.257798)
        ), 
        cms.PSet(
            category = cms.uint32(5),
            cut = cms.double(-0.0966083)
        ), 
        cms.PSet(
            category = cms.uint32(6),
            cut = cms.double(-0.0466023)
        ), 
        cms.PSet(
            category = cms.uint32(7),
            cut = cms.double(0.0467638)
        ), 
        cms.PSet(
            category = cms.uint32(8),
            cut = cms.double(0.0863876)
        ), 
        cms.PSet(
            category = cms.uint32(9),
            cut = cms.double(0.233436)
        )),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection"),
    PFTauProducer = cms.InputTag("hpsPFTauProducer")
)


process.hpsPFTauDiscriminationByMVA2TightElectronRejection = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    key = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection","category"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.double(0.0306715)
    ), 
        cms.PSet(
            category = cms.uint32(1),
            cut = cms.double(0.992195)
        ), 
        cms.PSet(
            category = cms.uint32(2),
            cut = cms.double(0.308324)
        ), 
        cms.PSet(
            category = cms.uint32(3),
            cut = cms.double(-0.0370998)
        ), 
        cms.PSet(
            category = cms.uint32(4),
            cut = cms.double(0.864643)
        ), 
        cms.PSet(
            category = cms.uint32(5),
            cut = cms.double(0.0832094)
        ), 
        cms.PSet(
            category = cms.uint32(6),
            cut = cms.double(0.791665)
        ), 
        cms.PSet(
            category = cms.uint32(7),
            cut = cms.double(0.675537)
        ), 
        cms.PSet(
            category = cms.uint32(8),
            cut = cms.double(0.87047)
        ), 
        cms.PSet(
            category = cms.uint32(9),
            cut = cms.double(0.233711)
        )),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection"),
    PFTauProducer = cms.InputTag("hpsPFTauProducer")
)


process.hpsPFTauDiscriminationByMVA2VLooseElectronRejection = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    key = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection","category"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.double(-0.141383)
    ), 
        cms.PSet(
            category = cms.uint32(1),
            cut = cms.double(-0.122568)
        ), 
        cms.PSet(
            category = cms.uint32(2),
            cut = cms.double(-0.138286)
        ), 
        cms.PSet(
            category = cms.uint32(3),
            cut = cms.double(-0.100279)
        ), 
        cms.PSet(
            category = cms.uint32(4),
            cut = cms.double(-0.116113)
        ), 
        cms.PSet(
            category = cms.uint32(5),
            cut = cms.double(-0.191557)
        ), 
        cms.PSet(
            category = cms.uint32(6),
            cut = cms.double(-0.0921955)
        ), 
        cms.PSet(
            category = cms.uint32(7),
            cut = cms.double(-0.0936173)
        ), 
        cms.PSet(
            category = cms.uint32(8),
            cut = cms.double(-0.119732)
        ), 
        cms.PSet(
            category = cms.uint32(9),
            cut = cms.double(-0.1042)
        )),
    toMultiplex = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection"),
    PFTauProducer = cms.InputTag("hpsPFTauProducer")
)


process.hpsPFTauDiscriminationByMVA2rawElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA2",
    minMVA1prongStripsWgsfWOpfEleMvaBL = cms.double(0.0),
    minMVA1prongEC = cms.double(0.0),
    inputFileName1prongNoEleMatchEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_NoEleMatch_Endcap_BDT.weights.xml.gz'),
    inputFileName1prongEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_woG_Endcap_BDT.weights.xml.gz'),
    inputFileName1prongStripsWgsfWOpfEleMvaBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwGSFwoPFMVA_Barrel_BDT.weights.xml.gz'),
    minMVA1prongStripsWgsfWpfEleMvaEC = cms.double(0.0),
    minMVA1prongStripsWOgsfEC = cms.double(0.0),
    returnMVA = cms.bool(True),
    inputFileName1prongStripsWgsfWOpfEleMvaEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwGSFwoPFMVA_Endcap_BDT.weights.xml.gz'),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    minMVA1prongBL = cms.double(0.0),
    inputFileName1prongStripsWgsfWpfEleMvaEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwGSFwPFMVA_Endcap_BDT.weights.xml.gz'),
    method = cms.string('BDT'),
    inputFileName1prongBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_woG_Barrel_BDT.weights.xml.gz'),
    inputFileName1prongStripsWgsfWpfEleMvaBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwGSFwPFMVA_Barrel_BDT.weights.xml.gz'),
    minMVA1prongStripsWgsfWpfEleMvaBL = cms.double(0.0),
    inputFileName1prongNoEleMatchBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_NoEleMatch_Barrel_BDT.weights.xml.gz'),
    inputFileName1prongStripsWOgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwoGSF_Endcap_BDT.weights.xml.gz'),
    minMVA1prongNoEleMatchBL = cms.double(0.0),
    minMVA1prongStripsWOgsfBL = cms.double(0.0),
    minMVA1prongNoEleMatchEC = cms.double(0.0),
    inputFileName1prongStripsWOgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwoGSF_Barrel_BDT.weights.xml.gz'),
    srcGsfElectrons = cms.InputTag("gsfElectrons"),
    minMVA1prongStripsWgsfWOpfEleMvaEC = cms.double(0.0)
)


process.hpsPFTauDiscriminationByMVAElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA",
    minMVA1prongStripsWgsfEC = cms.double(0.053),
    minMVA1prongStripsWOgsfEC = cms.double(0.049),
    minMVA1prongBL = cms.double(0.054),
    minMVA1prongEC = cms.double(0.06),
    returnMVA = cms.bool(False),
    inputFileName1prongStripsWgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_1_1EC_BDT.weights.xml.gz'),
    inputFileName1prongStripsWgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_1_1BL_BDT.weights.xml.gz'),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        electronMedium = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByMediumElectronRejection")
        )
    ),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    inputFileName1prongStripsWOgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_0_1BL_BDT.weights.xml.gz'),
    inputFileName1prongStripsWOgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_0_1EC_BDT.weights.xml.gz'),
    inputFileName1prongEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_X_0EC_BDT.weights.xml.gz'),
    minMVA1prongStripsWgsfBL = cms.double(0.06),
    method = cms.string('BDT'),
    minMVA1prongStripsWOgsfBL = cms.double(0.054),
    inputFileName1prongBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_X_0BL_BDT.weights.xml.gz')
)


process.hpsPFTauDiscriminationByMediumChargedIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    relativeSumPtCut = cms.double(0.0),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    applyDeltaBetaCorrection = cms.bool(True),
    deltaBetaFactor = cms.string('0.4576'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(1.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    maximumOccupancy = cms.uint32(0),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByMediumElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByMediumIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByMediumChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByMediumIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.2739'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(0.8),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByMediumChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    applyDeltaBetaCorrection = cms.bool(True),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    particleFlowSrc = cms.InputTag("particleFlow"),
    rhoUEOffsetCorrection = cms.double(1.0),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByMediumIsolationMVA = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        mva = cms.PSet(
            cut = cms.double(0.884),
            Producer = cms.InputTag("hpsPFTauDiscriminationByIsolationMVAraw")
        ),
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.1, 2.8/pt()),0.05)'),
    matchingCone = cms.double(0.1),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        ))
)


process.hpsPFTauDiscriminationByMediumMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noAllArbitrated'),
    HoPMin = cms.double(0.2)
)


process.hpsPFTauDiscriminationByRawChargedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(3.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    storeRawSumPt = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(3.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    storeRawSumPt = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauDiscriminationByRawGammaIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(3.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    storeRawSumPt = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauDiscriminationByTightChargedIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByMediumChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    relativeSumPtCut = cms.double(0.0),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    applyDeltaBetaCorrection = cms.bool(True),
    deltaBetaFactor = cms.string('0.4576'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(0.8),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    maximumOccupancy = cms.uint32(0),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByTightElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(True),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByTightIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByTightChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByTightIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(0.5),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByTightChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    applyDeltaBetaCorrection = cms.bool(True),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    particleFlowSrc = cms.InputTag("particleFlow"),
    rhoUEOffsetCorrection = cms.double(1.0),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsPFTauDiscriminationByTightIsolationMVA = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        mva = cms.PSet(
            cut = cms.double(0.921),
            Producer = cms.InputTag("hpsPFTauDiscriminationByIsolationMVAraw")
        ),
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.1, 2.8/pt()),0.05)'),
    matchingCone = cms.double(0.1),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        ))
)


process.hpsPFTauDiscriminationByTightMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noAllArbitratedWithHOP'),
    HoPMin = cms.double(0.2)
)


process.hpsPFTauDiscriminationByVLooseChargedIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.3),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    customOuterCone = cms.double(0.3)
)


process.hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(3.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.4576'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauDiscriminationByVLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    isoConeSizeForDeltaBeta = cms.double(0.3),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByVLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    customOuterCone = cms.double(0.3)
)


process.hpsPFTauDiscriminationByVLooseIsolationDBSumPtCorr = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    maximumSumPtCut = cms.double(2.0),
    deltaBetaPUTrackPtCutOverride = cms.double(0.5),
    isoConeSizeForDeltaBeta = cms.double(0.8),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.0729'),
    relativeSumPtCut = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        ),
        preIso = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByVLooseChargedIsolation")
        )
    ),
    applyOccupancyCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(True),
    applyRelativeSumPtCut = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    rhoUEOffsetCorrection = cms.double(1.0),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    applyRhoCorrection = cms.bool(False),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow")
)


process.hpsPFTauProducer = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("hpsPFTauProducerSansRefs")
)


process.hpsPFTauProducerSansRefs = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(charge())-1'),
        selection = cms.string('signalPFChargedHadrCands().size() = 3'),
        name = cms.string('UnitCharge'),
        plugin = cms.string('RecoTauStringCleanerPlugin'),
        selectionFailValue = cms.double(0)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('0'),
            selection = cms.string('deltaR(eta, phi, jetRef().eta, jetRef().phi) < 0.1'),
            name = cms.string('MatchingCone'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        ), 
        cms.PSet(
            src = cms.InputTag("hpsSelectionDiscriminator"),
            name = cms.string('HPS_Select'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum()+isolationPFGammaCandsEtSum()'),
            selection = cms.string('leadPFCand().isNonnull()'),
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        )),
    src = cms.InputTag("combinatoricRecoTaus")
)


process.hpsSelectionDiscriminator = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.1, 2.8/pt()),0.05)'),
    matchingCone = cms.double(0.1),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        ))
)


process.hpsTancTaus = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("hpsTancTausSansRefs")
)


process.hpsTancTausDiscriminationAgainstCaloMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstCaloMuon",
    srcHcalRecHits = cms.InputTag("hbhereco"),
    minLeadTrackPt = cms.double(15.0),
    maxEnToTrackRatio = cms.double(0.25),
    srcVertex = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    srcEcalRecHitsBarrel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRhcal = cms.double(25.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingTrackFinding")
        )
    ),
    maxEnHcal = cms.double(8.0),
    dRecal = cms.double(15.0),
    srcEcalRecHitsEndcap = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    minLeadTrackPtFraction = cms.double(0.8),
    maxEnEcal = cms.double(3.0)
)


process.hpsTancTausDiscriminationByDecayModeSelection = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    src = cms.InputTag("combinatoricRecoTaus"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(5.0),
    coneSizeFormula = cms.string('0.3'),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        )),
    matchingCone = cms.double(0.1)
)


process.hpsTancTausDiscriminationByFlightPath = cms.EDProducer("PFRecoTauDiscriminationByFlight",
    refitPV = cms.bool(True),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    vertexSource = cms.InputTag("offlinePrimaryVertices"),
    beamspot = cms.InputTag("offlineBeamSpot")
)


process.hpsTancTausDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.hpsTancTausDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByLooseElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(0.6),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsTancTausDiscriminationByLooseMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.hpsTancTausDiscriminationByMediumElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByMediumIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsTancTausDiscriminationByTanc = cms.EDProducer("RecoTauMVATransform",
    Prediscriminants = cms.PSet(
        hpsSelect = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        ),
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingPionPtCut")
        )
    ),
    transforms = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508)+cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335)+cms.vdouble(0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 0.9679163435, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(3)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdoublecms.vdouble(0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364)+cms.vdouble(0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdoublecms.vdouble(0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107)+cms.vdouble(0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277)+cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792)+cms.vdouble(0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        )),
    toTransform = cms.InputTag("hpsTancTausDiscriminationByTancRaw"),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancLoose = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.95),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.hpsTancTausDiscriminationByTancMedium = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.97),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancRaw = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(
        BinnedMaskedHcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
        ),
        InvariantOpeningAngle = cms.PSet(
            defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
            plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
            decayModes = cms.VPSet(cms.PSet(
                nPiZeros = cms.uint32(1),
                rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
            ), 
                cms.PSet(
                    nPiZeros = cms.uint32(2),
                    rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                    nCharged = cms.uint32(1),
                    mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
                ), 
                cms.PSet(
                    nPiZeros = cms.uint32(0),
                    rms = cms.string('0.38/max(pt, 1.0)'),
                    nCharged = cms.uint32(3),
                    mean = cms.string('0.87/max(pt, 1.0)')
                )),
            defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
        ),
        BinnedMaskedEcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.88, 2.53),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.65, 0.98, 2.53),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.74, 1.05, 2.54),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.8, 1.11, 2.54),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.86, 1.15, 2.54),
                    nPUVtx = cms.int32(4)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.9, 1.19, 2.55),
                    nPUVtx = cms.int32(5)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.94, 1.22, 2.55),
                    nPUVtx = cms.int32(6)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.97, 1.25, 2.55),
                    nPUVtx = cms.int32(7)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.0, 1.27, 2.56),
                    nPUVtx = cms.int32(8)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.03, 1.3, 2.56),
                    nPUVtx = cms.int32(9)
                )),
            defaultBinning = cms.vdouble(1.03, 1.3, 2.56),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
        ),
        FlightPathSignificance = cms.PSet(
            plugin = cms.string('RecoTauDiscriminantFromDiscriminator'),
            discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
            maxValue = cms.double(25),
            minValue = cms.double(-25)
        ),
        BinnedTrackIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
            plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
        )
    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('1prong0pi0'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('1prong1pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('1prong2pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('3prong0pi0'),
            nCharged = cms.uint32(3)
        )),
    remapOutput = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        hpsSelect = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        ),
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingPionPtCut")
        )
    ),
    dbLabel = cms.string('hpstanc')
)


process.hpsTancTausDiscriminationByTancTight = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.985),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancVLoose = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.9),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTightElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    BremCombined_HOP = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(True),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByTightIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsTancTausDiscriminationByTightMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noAllArbitrated'),
    HoPMin = cms.double(0.2)
)


process.hpsTancTausDiscriminationByVLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumOccupancy = cms.uint32(0),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.3),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    rhoConeSize = cms.double(0.5),
    customOuterCone = cms.double(0.3),
    particleFlowSrc = cms.InputTag("particleFlow"),
    rhoUEOffsetCorrection = cms.double(1.0),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.hpsTancTausSansRefs = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(charge())-1'),
        selection = cms.string('signalPFChargedHadrCands().size() = 3'),
        name = cms.string('UnitCharge'),
        plugin = cms.string('RecoTauStringCleanerPlugin'),
        selectionFailValue = cms.double(0)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('0'),
            selection = cms.string('deltaR(eta, phi, jetRef().eta, jetRef().phi) < 0.1'),
            name = cms.string('MatchingCone'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        ), 
        cms.PSet(
            src = cms.InputTag("combinatoricRecoTausDiscriminationByLeadingPionPtCut"),
            name = cms.string('lead pion'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            src = cms.InputTag("combinatoricRecoTausHPSSelector"),
            name = cms.string('HPS selection'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum()+isolationPFGammaCandsEtSum()'),
            selection = cms.string('leadPFCand().isNonnull()'),
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        )),
    src = cms.InputTag("combinatoricRecoTaus")
)


process.ic5PFJetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("iterativeCone5PFJets")
)


process.impactParameterMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('impactParameterMVAComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.impactParameterTagInfos = cms.EDProducer("TrackIPProducer",
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(8),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetTracks = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    jetDirectionUsingGhostTrack = cms.bool(False),
    minimumNumberOfPixelHits = cms.int32(2),
    jetDirectionUsingTracks = cms.bool(False),
    computeGhostTrack = cms.bool(True),
    useTrackQuality = cms.bool(False),
    maximumChiSquared = cms.double(5.0)
)


process.impactParameterTagInfosCHS = cms.EDProducer("TrackIPProducer",
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(8),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    computeGhostTrack = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetTracks = cms.InputTag("ak5JetTracksAssociatorAtVertexCHS"),
    jetDirectionUsingGhostTrack = cms.bool(False),
    minimumNumberOfPixelHits = cms.int32(2),
    jetDirectionUsingTracks = cms.bool(False),
    computeProbabilities = cms.bool(True),
    useTrackQuality = cms.bool(False),
    maximumChiSquared = cms.double(5.0)
)


process.isoDepElectronWithCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDepElectronWithNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDepElectronWithPhotons = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDeposits = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag(""),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag(""),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoValElectronWithCharged = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepElectronWithCharged"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.isoValElectronWithNeutral = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepElectronWithNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.isoValElectronWithPhotons = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepElectronWithPhotons"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.iterativeCone3HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.3)
)


process.iterativeCone4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.4)
)


process.iterativeCone5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone5GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('IterativeCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.iterativeCone5GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('IterativeCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.iterativeCone5HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone7HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.7)
)


process.jetBProbabilityBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetBProbability'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.jetBProbabilityBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetBProbability'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfosCHS"))
)


process.jetProbabilityBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetProbability'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.jetProbabilityBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetProbability'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfosCHS"))
)


process.kt3HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.3)
)


process.kt4GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt4GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt4GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt4PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    src = cms.InputTag("particleFlow"),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    doAreaDiskApprox = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt6GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(True),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.6)
)


process.kt6PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsCHSForIso = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(2.5),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(2.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("pfNoPileUpIso"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsForIso = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    Ghost_EtaMax = cms.double(2.5),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(2.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsForRhoComputationVoronoi = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    doAreaDiskApprox = cms.bool(False),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(0.9),
    doRhoFastjet = cms.bool(True),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    doOutputJets = cms.bool(True),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.leadingCMGBaseJetSelector = cms.EDProducer("LeadingCMGBaseJetSelector",
    index = cms.int32(2),
    inputCollection = cms.InputTag("cmgPFBaseJetSel")
)


process.leadingCMGPFJetSelector = cms.EDProducer("LeadingCMGPFJetSelector",
    index = cms.int32(2),
    inputCollection = cms.InputTag("cmgPFJetSel")
)


process.metJESCorAK5CaloJet = cms.EDProducer("Type1MET",
    inputUncorJetsLabel = cms.string('ak5CaloJets'),
    jetEMfracLimit = cms.double(0.9),
    metType = cms.string('CaloMET'),
    jetPTthreshold = cms.double(20.0),
    inputUncorMetLabel = cms.string('met'),
    subtractL1Fast = cms.bool(False),
    hasMuonsCorr = cms.bool(False),
    useTypeII = cms.bool(False),
    corrector = cms.string('ak5CaloL2L3'),
    UscaleA = cms.double(2.0),
    UscaleB = cms.double(1.3),
    UscaleC = cms.double(0.1),
    refcorrector = cms.string('ic5CaloL1Fastjet')
)


process.metJESCorAK5CaloJetMuons = cms.EDProducer("MuonMET",
    muonMETDepositValueMapInputTag = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    metTypeInputTag = cms.InputTag("CaloMET"),
    muonsInputTag = cms.InputTag("muons"),
    uncorMETInputTag = cms.InputTag("metJESCorAK5CaloJet")
)


process.metJESCorAK5PFJet = cms.EDProducer("Type1MET",
    inputUncorJetsLabel = cms.string('ak5PFJets'),
    jetEMfracLimit = cms.double(0.9),
    metType = cms.string('PFMET'),
    jetPTthreshold = cms.double(10.0),
    inputUncorMetLabel = cms.string('pfMet'),
    subtractL1Fast = cms.bool(False),
    hasMuonsCorr = cms.bool(False),
    useTypeII = cms.bool(False),
    corrector = cms.string('ak5PFL2L3'),
    UscaleA = cms.double(1.5),
    UscaleB = cms.double(0.0),
    UscaleC = cms.double(0.0),
    refcorrector = cms.string('ak5PFL1Fastjet')
)


process.metJESCorAK7CaloJet = cms.EDProducer("Type1MET",
    inputUncorJetsLabel = cms.string('ak7CaloJets'),
    jetEMfracLimit = cms.double(0.9),
    metType = cms.string('CaloMET'),
    jetPTthreshold = cms.double(20.0),
    inputUncorMetLabel = cms.string('met'),
    subtractL1Fast = cms.bool(False),
    hasMuonsCorr = cms.bool(False),
    useTypeII = cms.bool(False),
    corrector = cms.string('ak7CaloL2L3'),
    UscaleA = cms.double(2.0),
    UscaleB = cms.double(1.3),
    UscaleC = cms.double(0.1),
    refcorrector = cms.string('ic5CaloL1Fastjet')
)


process.metJESCorIC5CaloJet = cms.EDProducer("Type1MET",
    inputUncorJetsLabel = cms.string('iterativeCone5CaloJets'),
    jetEMfracLimit = cms.double(0.9),
    metType = cms.string('CaloMET'),
    jetPTthreshold = cms.double(20.0),
    inputUncorMetLabel = cms.string('met'),
    subtractL1Fast = cms.bool(False),
    hasMuonsCorr = cms.bool(False),
    useTypeII = cms.bool(False),
    corrector = cms.string('ic5CaloL2L3'),
    UscaleA = cms.double(2.0),
    UscaleB = cms.double(1.3),
    UscaleC = cms.double(0.1),
    refcorrector = cms.string('ic5CaloL1Fastjet')
)


process.metJESCorKT4CaloJet = cms.EDProducer("Type1MET",
    inputUncorJetsLabel = cms.string('kt4CaloJets'),
    jetEMfracLimit = cms.double(0.9),
    metType = cms.string('CaloMET'),
    jetPTthreshold = cms.double(20.0),
    inputUncorMetLabel = cms.string('met'),
    subtractL1Fast = cms.bool(False),
    hasMuonsCorr = cms.bool(False),
    useTypeII = cms.bool(False),
    corrector = cms.string('kt4CaloL2L3'),
    UscaleA = cms.double(2.0),
    UscaleB = cms.double(1.3),
    UscaleC = cms.double(0.1),
    refcorrector = cms.string('ic5CaloL1Fastjet')
)


process.metJESCorKT6CaloJet = cms.EDProducer("Type1MET",
    inputUncorJetsLabel = cms.string('kt6CaloJets'),
    jetEMfracLimit = cms.double(0.9),
    metType = cms.string('CaloMET'),
    jetPTthreshold = cms.double(20.0),
    inputUncorMetLabel = cms.string('met'),
    subtractL1Fast = cms.bool(False),
    hasMuonsCorr = cms.bool(False),
    useTypeII = cms.bool(False),
    corrector = cms.string('kt6CaloL2L3'),
    UscaleA = cms.double(2.0),
    UscaleB = cms.double(1.3),
    UscaleC = cms.double(0.1),
    refcorrector = cms.string('ic5CaloL1Fastjet')
)


process.metJESCorSC5CaloJet = cms.EDProducer("Type1MET",
    inputUncorJetsLabel = cms.string('sisCone5CaloJets'),
    jetEMfracLimit = cms.double(0.9),
    metType = cms.string('CaloMET'),
    jetPTthreshold = cms.double(20.0),
    inputUncorMetLabel = cms.string('met'),
    subtractL1Fast = cms.bool(False),
    hasMuonsCorr = cms.bool(False),
    useTypeII = cms.bool(False),
    corrector = cms.string('sisCone5CaloL2L3'),
    UscaleA = cms.double(2.0),
    UscaleB = cms.double(1.3),
    UscaleC = cms.double(0.1),
    refcorrector = cms.string('ic5CaloL1Fastjet')
)


process.metJESCorSC7CaloJet = cms.EDProducer("Type1MET",
    inputUncorJetsLabel = cms.string('sisCone7CaloJets'),
    jetEMfracLimit = cms.double(0.9),
    metType = cms.string('CaloMET'),
    jetPTthreshold = cms.double(20.0),
    inputUncorMetLabel = cms.string('met'),
    subtractL1Fast = cms.bool(False),
    hasMuonsCorr = cms.bool(False),
    useTypeII = cms.bool(False),
    corrector = cms.string('sisCone7CaloL2L3'),
    UscaleA = cms.double(2.0),
    UscaleB = cms.double(1.3),
    UscaleC = cms.double(0.1),
    refcorrector = cms.string('ic5CaloL1Fastjet')
)


process.metSignificance = cms.EDProducer("METSignificanceProducer",
    inputPATMuons = cms.InputTag("patMuonsAK5"),
    inputPFJets = cms.InputTag("pfJetsAK5"),
    resolution = cms.PSet(
        resolutionsEra = cms.string('Spring10'),
        HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
        EE_PhiResPar = cms.vdouble(0.02511),
        jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
            1.981, 1.972, 2.875, 3.923, 7.51),
        jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
            1.805, 2.06, 2.22, 2.268, 2.247),
        jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
            2.05, 2.267, 2.549, 2.785, 2.86),
        jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
            2.612, 2.863, 2.879, 2.925, 2.902),
        jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
            2.219, 2.289, 2.412, 2.695, 2.865),
        jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
            2.005, 2.209, 2.533, 2.812, 3.047),
        jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
            2.289, 2.639, 2.837, 2.946, 2.971),
        jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
            2.295, 2.562, 2.722, 2.943, 3.293),
        jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
            1.841, 2.115, 2.379, 2.508, 2.772),
        jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
            1.807, 2.035, 2.217, 2.378, 2.591),
        HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
        HF_PhiResPar = cms.vdouble(0.05022),
        PF_PhiResType7 = cms.vdouble(0.02511),
        HE_PhiResPar = cms.vdouble(0.02511),
        EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
        PF_PhiResType2 = cms.vdouble(0.002),
        PF_PhiResType3 = cms.vdouble(0.002),
        HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
        resolutionsAlgo = cms.string('AK5PF'),
        PF_PhiResType6 = cms.vdouble(0.02511),
        HB_PhiResPar = cms.vdouble(0.02511),
        PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
        PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
        ptresolthreshold = cms.double(10.0),
        EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
        jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
            0.035, 0.037, 0.032, 0.028, 0.028),
        EB_PhiResPar = cms.vdouble(0.00502),
        jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
            0.045, 0.036, 0.032, 0.034, 0.044),
        PF_PhiResType1 = cms.vdouble(0.002),
        jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
            0.036, 0.036, 0.033, 0.031, 0.031),
        HO_PhiResPar = cms.vdouble(0.02511),
        jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
            0.038, 0.036, 0.035, 0.034, 0.033),
        jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
            0.034, 0.031, 0.03, 0.029, 0.027),
        jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
            0.031, 0.028, 0.027, 0.027, 0.027),
        jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
            0.042, 0.039, 0.039, 0.037, 0.031),
        jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
            0.06, 0.051, 0.049, 0.045, 0.045),
        jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
            0.049, 0.049, 0.043, 0.039, 0.04),
        HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
        jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
            0.039, 0.039, 0.036, 0.034, 0.031),
        PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
        PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
        PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
        PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
        PF_EtResType1 = cms.vdouble(0.05, 0, 0),
        PF_EtResType3 = cms.vdouble(0.05, 0, 0),
        PF_EtResType2 = cms.vdouble(0.05, 0, 0)
    ),
    inputPATElectrons = cms.InputTag("patElectronsAK5"),
    inputPFCandidates = cms.InputTag("pfNoJetAK5")
)


process.metTriggerMatchHLTMET100 = cms.EDProducer("PATTriggerMatcherDRLessByR",
    matchedCuts = cms.string('path( "HLT_MET100_v*" )'),
    src = cms.InputTag("patMETs"),
    maxDPtRel = cms.double(3.0),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.4),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.metTriggerMatchHLTMu20 = cms.EDProducer("PATTriggerMatcherDRLessByR",
    matchedCuts = cms.string('path( "HLT_Mu20_v*" )'),
    src = cms.InputTag("patMETs"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.5),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.muIsoFromDepsTkOptimized = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muons","muIsoDepositTk"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('vetoMuons:0.015', 
            'vetoElectrons7:0.015', 
            'Threshold(1.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("muons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.muPFIsoValueCharged03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositCharged"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.0001', 
            'Threshold(0.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueCharged04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositCharged"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.0001', 
            'Threshold(0.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueChargedAll03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositChargedAll"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.0001', 
            'Threshold(0.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueChargedAll04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositChargedAll"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.0001', 
            'Threshold(0.0)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueGamma03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositGamma"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueGamma04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositGamma"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueNeutral03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositNeutral"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValueNeutral04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValuePU03 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositPU"),
        deltaR = cms.double(0.3),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muPFIsoValuePU04 = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("muPFIsoDepositPU"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('0.01', 
            'Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.muonMETValueMapProducer = cms.EDProducer("MuonMETValueMapProducer",
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    ),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    minPt = cms.double(10.0),
    maxNormChi2 = cms.double(10.0),
    minnValidStaHits = cms.int32(1),
    useHO = cms.bool(False),
    minnHits = cms.int32(11),
    useTrackAssociatorPositions = cms.bool(True),
    useRecHits = cms.bool(False),
    maxEta = cms.double(2.5),
    maxd0 = cms.double(0.2),
    towerEtThreshold = cms.double(0.3),
    isAlsoTkMu = cms.bool(True),
    muonInputTag = cms.InputTag("muons")
)


process.muonMatch = cms.EDProducer("MCMatcher",
    src = cms.InputTag("muons"),
    maxDPtRel = cms.double(0.5),
    mcPdgId = cms.vint32(13),
    mcStatus = cms.vint32(1),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.5),
    checkCharge = cms.bool(True),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("genParticles")
)


process.muonMatchHLTL3 = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltL3MuonCandidates")'),
    src = cms.InputTag("patMuonsWithMVA"),
    maxDPtRel = cms.double(10.0),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.1),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.muonMatchHLTL3T = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string('coll("hltGlbTrkMuonCands")'),
    src = cms.InputTag("patMuonsWithMVA"),
    maxDPtRel = cms.double(10.0),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.1),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.muonTriggerMatchHLT = cms.EDProducer("PATTriggerMatcherDRDPtLessByR",
    matchedCuts = cms.string(''),
    src = cms.InputTag("patMuonsWithMVA"),
    maxDPtRel = cms.double(0.5),
    resolveByMatchQuality = cms.bool(True),
    maxDeltaR = cms.double(0.1),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("patTrigger")
)


process.nopuMet = cms.EDProducer("MetFlavorProducer",
    tmvaVariables = cms.vstring('nvtx', 
        'jetPt', 
        'jetEta', 
        'jetPhi', 
        'dZ', 
        'd0', 
        'beta', 
        'betaStar', 
        'nCharged', 
        'nNeutrals', 
        'dRMean', 
        'frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05'),
    JetPtMin = cms.double(1.0),
    full = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('PuJetIdOptMVA'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
            Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    runMvas = cms.bool(True),
    PhilV1 = cms.PSet(
        tmvaVariables = cms.vstring('nvtx', 
            'jetPt', 
            'jetEta', 
            'jetPhi', 
            'dZ', 
            'd0', 
            'beta', 
            'betaStar', 
            'nCharged', 
            'nNeutrals', 
            'dRMean', 
            'frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05'),
        tmvaMethod = cms.string('JetID'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
        tmvaSpectators = cms.vstring(),
        label = cms.string('philv1'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
            Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
            Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
            Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
            Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
            Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
            Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
            Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
            Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
            Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
            Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
            Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    dZMin = cms.double(0.1),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
    MetFlavor = cms.int32(2),
    impactParTkThreshold = cms.untracked.double(1.0),
    tmvaSpectators = cms.vstring(),
    label = cms.string('PhilV1'),
    JetName = cms.InputTag("ak5PFJets"),
    tmvaMethod = cms.string('JetID'),
    version = cms.int32(-1),
    PFCandidateName = cms.InputTag("particleFlow"),
    CorrJetName = cms.InputTag("patJets"),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
        Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
        Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
        Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
        Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
        Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
        Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
        Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
        Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
        Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
        Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
        Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
    ),
    RhoName = cms.InputTag("kt6PFJets","rho"),
    full_5x = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'dR2Mean', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('BDT_fullPlusRMS'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_fullPlusRMS.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74),
            Pt2030_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt1020_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt2030_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt010_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt010_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt1020_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt3050_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    VertexName = cms.InputTag("offlinePrimaryVertices")
)


process.particleFlow = cms.EDProducer("PFVertexProducer",
    PFCandidate = cms.InputTag("particleFlow"),
    checkClosestZVertex = cms.bool(True),
    Vertices = cms.InputTag("offlinePrimaryVertices")
)


process.patConversions = cms.EDProducer("PATConversionProducer",
    electronSource = cms.InputTag("patElectronsWithTrigger")
)


process.patElectrons = cms.EDProducer("PATElectronProducer",
    embedHighLevelSelection = cms.bool(True),
    embedGsfElectronCore = cms.bool(True),
    electronSource = cms.InputTag("gsfElectrons"),
    resolutions = cms.PSet(

    ),
    pfElectronSource = cms.InputTag("particleFlow"),
    userIsolation = cms.PSet(
        user = cms.VPSet(cms.PSet(
            src = cms.InputTag("eleIsoFromDepsTkOptimized5")
        ), 
            cms.PSet(
                src = cms.InputTag("eleIsoFromDepsTkOptimized7")
            ))
    ),
    embedSuperCluster = cms.bool(True),
    embedPFCandidate = cms.bool(True),
    pfCandidateMap = cms.InputTag("particleFlow","electrons"),
    addElectronID = cms.bool(True),
    efficiencies = cms.PSet(

    ),
    embedGsfTrack = cms.bool(True),
    useParticleFlow = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring()
    ),
    embedTrack = cms.bool(True),
    addEfficiencies = cms.bool(False),
    usePV = cms.bool(True),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    electronIDSources = cms.PSet(
        eidMedium = cms.InputTag("eidMedium"),
        mvaTrigV0 = cms.InputTag("mvaTrigV0"),
        simpleEleId70relIso = cms.InputTag("simpleEleId70relIso"),
        simpleEleId60relIso = cms.InputTag("simpleEleId60relIso"),
        eidVeryLoose = cms.InputTag("eidVeryLoose"),
        simpleEleId80relIso = cms.InputTag("simpleEleId80relIso"),
        simpleEleId85relIso = cms.InputTag("simpleEleId85relIso"),
        simpleEleId95relIso = cms.InputTag("simpleEleId95relIso"),
        eidTight = cms.InputTag("eidTight"),
        eidLoose = cms.InputTag("eidLoose"),
        simpleEleId90relIso = cms.InputTag("simpleEleId90relIso"),
        eidSuperTight = cms.InputTag("eidSuperTight"),
        mvaNonTrigV0 = cms.InputTag("mvaNonTrigV0")
    ),
    genParticleMatch = cms.InputTag("electronMatch"),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    addGenMatch = cms.bool(True),
    addResolutions = cms.bool(False),
    isoDeposits = cms.PSet(
        pfNeutralHadrons = cms.InputTag("elPFIsoDepositNeutral"),
        pfPUChargedHadrons = cms.InputTag("elPFIsoDepositPU"),
        tracker = cms.InputTag("eleIsoDepositTk"),
        pfChargedHadrons = cms.InputTag("elPFIsoDepositCharged"),
        pfPhotons = cms.InputTag("elPFIsoDepositGamma"),
        pfChargedAll = cms.InputTag("elPFIsoDepositChargedAll")
    ),
    embedGenMatch = cms.bool(True),
    isolationValues = cms.PSet(
        pfNeutralHadrons = cms.InputTag("elPFIsoValueNeutral04PFId"),
        pfChargedAll = cms.InputTag("elPFIsoValueChargedAll04PFId"),
        pfPUChargedHadrons = cms.InputTag("elPFIsoValuePU04PFId"),
        pfPhotons = cms.InputTag("elPFIsoValueGamma04PFId"),
        pfChargedHadrons = cms.InputTag("elPFIsoValueCharged04PFId")
    ),
    isolationValuesNoPFId = cms.PSet(
        pfNeutralHadrons = cms.InputTag("elPFIsoValueNeutral04NoPFId"),
        pfChargedAll = cms.InputTag("elPFIsoValueChargedAll04NoPFId"),
        pfPUChargedHadrons = cms.InputTag("elPFIsoValuePU04NoPFId"),
        pfPhotons = cms.InputTag("elPFIsoValueGamma04NoPFId"),
        pfChargedHadrons = cms.InputTag("elPFIsoValueCharged04NoPFId")
    )
)


process.patElectronsWithMVA = cms.EDProducer("PATElectronIsoMVAEmbedder",
    srcPF = cms.InputTag("particleFlow"),
    src = cms.InputTag("selectedPatElectrons"),
    srcSelectedElectrons = cms.InputTag("selectedPatElectrons"),
    srcVertices = cms.InputTag("offlinePrimaryVertices"),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    srcSelectedMuons = cms.InputTag("muons")
)


process.patElectronsWithTrigger = cms.EDProducer("PATTriggerMatchElectronEmbedder",
    matches = cms.VInputTag(cms.InputTag("eleTriggerMatchHLT1"), cms.InputTag("eleTriggerMatchHLT2"), cms.InputTag("eleTriggerMatchHLT3"), cms.InputTag("eleTriggerMatchHLT4"), cms.InputTag("eleTriggerMatchHLT5"), 
        cms.InputTag("eleTriggerMatchHLT6"), cms.InputTag("eleTriggerMatchHLT7"), cms.InputTag("eleTriggerMatchHLT8"), cms.InputTag("eleTriggerMatchHLT9"), cms.InputTag("eleTriggerMatchHLT10")),
    src = cms.InputTag("patElectronsWithMVA")
)


process.patJetCharge = cms.EDProducer("JetChargeProducer",
    var = cms.string('Pt'),
    src = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    exp = cms.double(1.0)
)


process.patJetCorrFactors = cms.EDProducer("JetCorrFactorsProducer",
    src = cms.InputTag("ak5PFJetsSel"),
    emf = cms.bool(False),
    primaryVertices = cms.InputTag("offlinePrimaryVertices"),
    levels = cms.vstring('L1FastJet', 
        'L2Relative', 
        'L3Absolute'),
    useNPV = cms.bool(True),
    rho = cms.InputTag("kt6PFJets","rho"),
    useRho = cms.bool(True),
    payload = cms.string('AK5PF'),
    flavorType = cms.string('J')
)


process.patJetCorrFactorsCHS = cms.EDProducer("JetCorrFactorsProducer",
    src = cms.InputTag("ak5PFJetsSelCHS"),
    emf = cms.bool(False),
    primaryVertices = cms.InputTag("offlinePrimaryVertices"),
    levels = cms.vstring('L1FastJet', 
        'L2Relative', 
        'L3Absolute'),
    useNPV = cms.bool(True),
    rho = cms.InputTag("kt6PFJets","rho"),
    useRho = cms.bool(True),
    payload = cms.string('AK5PFchs'),
    flavorType = cms.string('J')
)


process.patJetFlavourAssociation = cms.EDProducer("JetFlavourIdentifier",
    srcByReference = cms.InputTag("patJetPartonAssociation"),
    physicsDefinition = cms.bool(False)
)


process.patJetFlavourAssociationCHS = cms.EDProducer("JetFlavourIdentifier",
    srcByReference = cms.InputTag("patJetPartonAssociationCHS"),
    physicsDefinition = cms.bool(False)
)


process.patJetGenJetMatch = cms.EDProducer("GenJetMatcher",
    src = cms.InputTag("ak5PFJetsSel"),
    maxDPtRel = cms.double(3.0),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.4),
    checkCharge = cms.bool(False),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("ak5GenJetsNoNu")
)


process.patJetGenJetMatchCHS = cms.EDProducer("GenJetMatcher",
    src = cms.InputTag("ak5PFJetsSelCHS"),
    maxDPtRel = cms.double(3.0),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.4),
    checkCharge = cms.bool(False),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("ak5GenJetsNoNu")
)


process.patJetPartonAssociation = cms.EDProducer("JetPartonMatcher",
    jets = cms.InputTag("ak5PFJetsSel"),
    coneSizeToAssociate = cms.double(0.3),
    partons = cms.InputTag("patJetPartons")
)


process.patJetPartonAssociationCHS = cms.EDProducer("JetPartonMatcher",
    jets = cms.InputTag("ak5PFJetsSelCHS"),
    coneSizeToAssociate = cms.double(0.3),
    partons = cms.InputTag("patJetPartonsCHS")
)


process.patJetPartonMatch = cms.EDProducer("MCMatcher",
    src = cms.InputTag("ak5PFJetsSel"),
    maxDPtRel = cms.double(3.0),
    mcPdgId = cms.vint32(1, 2, 3, 4, 5, 
        21),
    mcStatus = cms.vint32(3),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.4),
    checkCharge = cms.bool(False),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("genParticles")
)


process.patJetPartonMatchCHS = cms.EDProducer("MCMatcher",
    src = cms.InputTag("ak5PFJetsSelCHS"),
    maxDPtRel = cms.double(3.0),
    mcPdgId = cms.vint32(1, 2, 3, 4, 5, 
        21),
    mcStatus = cms.vint32(3),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.4),
    checkCharge = cms.bool(False),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("genParticles")
)


process.patJetPartons = cms.EDProducer("PartonSelector",
    src = cms.InputTag("genParticles"),
    withLeptons = cms.bool(False)
)


process.patJetPartonsCHS = cms.EDProducer("PartonSelector",
    src = cms.InputTag("genParticles"),
    withLeptons = cms.bool(False)
)


process.patJets = cms.EDProducer("PATJetProducer",
    addJetCharge = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    embedPFCandidates = cms.bool(False),
    embedGenJetMatch = cms.bool(True),
    addAssociatedTracks = cms.bool(False),
    partonJetSource = cms.InputTag("NOT_IMPLEMENTED"),
    addGenPartonMatch = cms.bool(True),
    JetPartonMapSource = cms.InputTag("patJetFlavourAssociation"),
    resolutions = cms.PSet(

    ),
    genPartonMatch = cms.InputTag("patJetPartonMatch"),
    addTagInfos = cms.bool(True),
    addPartonJetMatch = cms.bool(False),
    embedGenPartonMatch = cms.bool(True),
    efficiencies = cms.PSet(

    ),
    genJetMatch = cms.InputTag("patJetGenJetMatch"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring('secvtxMass', 
            'Lxy', 
            'LxyErr'),
        userFunctions = cms.vstring("? hasTagInfo(\'secondaryVertex\') && tagInfoSecondaryVertex(\'secondaryVertex\').nVertices() > 0 ? tagInfoSecondaryVertex(\'secondaryVertex\').secondaryVertex(0).p4().mass() : 0", 
            "? hasTagInfo(\'secondaryVertex\') && tagInfoSecondaryVertex(\'secondaryVertex\').nVertices() > 0 ? tagInfoSecondaryVertex(\'secondaryVertex\').flightDistance(0).value() : 0", 
            "? hasTagInfo(\'secondaryVertex\') && tagInfoSecondaryVertex(\'secondaryVertex\').nVertices() > 0 ? tagInfoSecondaryVertex(\'secondaryVertex\').flightDistance(0).error() : 0")
    ),
    jetSource = cms.InputTag("ak5PFJetsSel"),
    addEfficiencies = cms.bool(False),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactors")),
    trackAssociationSource = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    tagInfoSources = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos")),
    discriminatorSources = cms.VInputTag(cms.InputTag("combinedSecondaryVertexBJetTags"), cms.InputTag("combinedSecondaryVertexMVABJetTags"), cms.InputTag("jetBProbabilityBJetTags"), cms.InputTag("jetProbabilityBJetTags"), cms.InputTag("simpleSecondaryVertexHighEffBJetTags"), 
        cms.InputTag("simpleSecondaryVertexHighPurBJetTags"), cms.InputTag("softElectronByPtBJetTags"), cms.InputTag("softElectronByIP3dBJetTags"), cms.InputTag("softMuonBJetTags"), cms.InputTag("softMuonByPtBJetTags"), 
        cms.InputTag("softMuonByIP3dBJetTags"), cms.InputTag("trackCountingHighEffBJetTags"), cms.InputTag("trackCountingHighPurBJetTags")),
    addBTagInfo = cms.bool(True),
    embedCaloTowers = cms.bool(False),
    addResolutions = cms.bool(False),
    getJetMCFlavour = cms.bool(True),
    addDiscriminators = cms.bool(True),
    jetChargeSource = cms.InputTag("patJetCharge"),
    addJetCorrFactors = cms.bool(True),
    jetIDMap = cms.InputTag("ak5JetID"),
    addJetID = cms.bool(True)
)


process.patJetsCHS = cms.EDProducer("PATJetProducer",
    addJetCharge = cms.bool(False),
    addGenJetMatch = cms.bool(True),
    embedGenJetMatch = cms.bool(True),
    addAssociatedTracks = cms.bool(False),
    addBTagInfo = cms.bool(True),
    partonJetSource = cms.InputTag("NOT_IMPLEMENTED"),
    addGenPartonMatch = cms.bool(True),
    JetPartonMapSource = cms.InputTag("patJetFlavourAssociationCHS"),
    resolutions = cms.PSet(

    ),
    genPartonMatch = cms.InputTag("patJetPartonMatchCHS"),
    addTagInfos = cms.bool(True),
    addPartonJetMatch = cms.bool(False),
    embedGenPartonMatch = cms.bool(True),
    efficiencies = cms.PSet(

    ),
    genJetMatch = cms.InputTag("patJetGenJetMatchCHS"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring('secvtxMass', 
            'Lxy', 
            'LxyErr'),
        userFunctions = cms.vstring("? hasTagInfo(\'secondaryVertex\') && tagInfoSecondaryVertex(\'secondaryVertex\').nVertices() > 0 ? tagInfoSecondaryVertex(\'secondaryVertex\').secondaryVertex(0).p4().mass() : 0", 
            "? hasTagInfo(\'secondaryVertex\') && tagInfoSecondaryVertex(\'secondaryVertex\').nVertices() > 0 ? tagInfoSecondaryVertex(\'secondaryVertex\').flightDistance(0).value() : 0", 
            "? hasTagInfo(\'secondaryVertex\') && tagInfoSecondaryVertex(\'secondaryVertex\').nVertices() > 0 ? tagInfoSecondaryVertex(\'secondaryVertex\').flightDistance(0).error() : 0")
    ),
    jetSource = cms.InputTag("ak5PFJetsSelCHS"),
    addEfficiencies = cms.bool(False),
    discriminatorSources = cms.VInputTag(cms.InputTag("combinedSecondaryVertexBJetTagsCHS"), cms.InputTag("combinedSecondaryVertexMVABJetTagsCHS"), cms.InputTag("jetBProbabilityBJetTagsCHS"), cms.InputTag("jetProbabilityBJetTagsCHS"), cms.InputTag("simpleSecondaryVertexHighEffBJetTagsCHS"), 
        cms.InputTag("simpleSecondaryVertexHighPurBJetTagsCHS"), cms.InputTag("softElectronByPtBJetTagsCHS"), cms.InputTag("softElectronByIP3dBJetTagsCHS"), cms.InputTag("softMuonBJetTagsCHS"), cms.InputTag("softMuonByPtBJetTagsCHS"), 
        cms.InputTag("softMuonByIP3dBJetTagsCHS"), cms.InputTag("trackCountingHighEffBJetTagsCHS"), cms.InputTag("trackCountingHighPurBJetTagsCHS")),
    trackAssociationSource = cms.InputTag("ak5JetTracksAssociatorAtVertexCHS"),
    tagInfoSources = cms.VInputTag(cms.InputTag("secondaryVertexTagInfosCHS")),
    jetCorrFactorsSource = cms.VInputTag(cms.InputTag("patJetCorrFactorsCHS")),
    embedPFCandidates = cms.bool(False),
    addJetCorrFactors = cms.bool(True),
    addResolutions = cms.bool(False),
    getJetMCFlavour = cms.bool(True),
    addDiscriminators = cms.bool(True),
    jetChargeSource = cms.InputTag("patJetCharge"),
    embedCaloTowers = cms.bool(False),
    jetIDMap = cms.InputTag("ak5JetID"),
    addJetID = cms.bool(True)
)


process.patMETs = cms.EDProducer("PATMETProducer",
    metSource = cms.InputTag("metJESCorAK5PFJet"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring()
    ),
    addResolutions = cms.bool(False),
    addEfficiencies = cms.bool(False),
    genMETSource = cms.InputTag("genMetTrue"),
    efficiencies = cms.PSet(

    ),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    muonSource = cms.InputTag("muons"),
    resolutions = cms.PSet(

    )
)


process.patMETsRaw = cms.EDProducer("PATMETProducer",
    metSource = cms.InputTag("pfMet"),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring()
    ),
    addResolutions = cms.bool(False),
    muonSource = cms.InputTag("muons"),
    addEfficiencies = cms.bool(False),
    genMETSource = cms.InputTag("genMetTrue"),
    efficiencies = cms.PSet(

    ),
    addGenMET = cms.bool(True),
    addMuonCorrections = cms.bool(False),
    resolutions = cms.PSet(

    )
)


process.patMETsTriggerMatch = cms.EDProducer("PATTriggerMatchMETEmbedder",
    matches = cms.VInputTag("metTriggerMatchHLTMET100"),
    src = cms.InputTag("patMETs")
)


process.patMuons = cms.EDProducer("PATMuonProducer",
    embedTpfmsMuon = cms.bool(True),
    embedHighLevelSelection = cms.bool(True),
    embedCaloMETMuonCorrs = cms.bool(False),
    caloMETMuonCorrs = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    resolutions = cms.PSet(

    ),
    embedDytMuon = cms.bool(True),
    userIsolation = cms.PSet(

    ),
    embedPFCandidate = cms.bool(True),
    pfMuonSource = cms.InputTag("particleFlow"),
    efficiencies = cms.PSet(

    ),
    embedStandAloneMuon = cms.bool(True),
    useParticleFlow = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring()
    ),
    embedTrack = cms.bool(True),
    addEfficiencies = cms.bool(False),
    usePV = cms.bool(True),
    embedTcMETMuonCorrs = cms.bool(False),
    pvSrc = cms.InputTag("offlinePrimaryVertices"),
    muonSource = cms.InputTag("muons"),
    embedCombinedMuon = cms.bool(True),
    genParticleMatch = cms.InputTag("muonMatch"),
    beamLineSrc = cms.InputTag("offlineBeamSpot"),
    addGenMatch = cms.bool(True),
    addResolutions = cms.bool(False),
    isoDeposits = cms.PSet(
        pfNeutralHadrons = cms.InputTag("muPFIsoDepositNeutral"),
        pfPUChargedHadrons = cms.InputTag("muPFIsoDepositPU"),
        tracker = cms.InputTag("muons","muIsoDepositTk"),
        pfChargedHadrons = cms.InputTag("muPFIsoDepositCharged"),
        pfPhotons = cms.InputTag("muPFIsoDepositGamma"),
        pfChargedAll = cms.InputTag("muPFIsoDepositChargedAll")
    ),
    embedGenMatch = cms.bool(True),
    tcMETMuonCorrs = cms.InputTag("muonTCMETValueMapProducer","muCorrData"),
    embedPickyMuon = cms.bool(True),
    isolationValues = cms.PSet(
        pfNeutralHadrons = cms.InputTag("muPFIsoValueNeutral04"),
        user = cms.VInputTag(cms.InputTag("muIsoFromDepsTkOptimized")),
        pfPUChargedHadrons = cms.InputTag("muPFIsoValuePU04"),
        pfChargedHadrons = cms.InputTag("muPFIsoValueCharged04"),
        pfPhotons = cms.InputTag("muPFIsoValueGamma04"),
        pfChargedAll = cms.InputTag("muPFIsoValueChargedAll04")
    )
)


process.patMuonsWithMVA = cms.EDProducer("PATMuonIsoMVAEmbedder",
    srcPF = cms.InputTag("particleFlow"),
    src = cms.InputTag("patMuonsWithPF"),
    srcSelectedElectrons = cms.InputTag("gsfElectrons"),
    srcVertices = cms.InputTag("offlinePrimaryVertices"),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    srcSelectedMuons = cms.InputTag("muons")
)


process.patMuonsWithPF = cms.EDProducer("PATPFMuonEmbedder",
    srcPF = cms.InputTag("particleFlow"),
    src = cms.InputTag("selectedPatMuons")
)


process.patMuonsWithTrigger = cms.EDProducer("PATTriggerMatchMuonEmbedder",
    matches = cms.VInputTag(cms.InputTag("muonMatchHLTL3"), cms.InputTag("muonMatchHLTL3T")),
    src = cms.InputTag("patMuonsWithMVA")
)


process.patTaus = cms.EDProducer("PATTauProducer",
    tauIDSources = cms.PSet(
        byLooseCombinedIsolationDeltaBetaCorr = cms.InputTag("hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr"),
        againstElectronLooseMVA2 = cms.InputTag("hpsPFTauDiscriminationByMVA2LooseElectronRejection"),
        againstMuonMedium = cms.InputTag("hpsPFTauDiscriminationByMediumMuonRejection"),
        againstElectronVLooseMVA2 = cms.InputTag("hpsPFTauDiscriminationByMVA2VLooseElectronRejection"),
        byVLooseCombinedIsolationDeltaBetaCorr = cms.InputTag("hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr"),
        byMediumIsoMVA = cms.InputTag("hpsPFTauDiscriminationByMediumIsolationMVA"),
        decayModeFinding = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding"),
        byRawIsoMVA = cms.InputTag("hpsPFTauDiscriminationByIsolationMVAraw"),
        againstElectronTightMVA2 = cms.InputTag("hpsPFTauDiscriminationByMVA2TightElectronRejection"),
        againstMuonLoose = cms.InputTag("hpsPFTauDiscriminationByLooseMuonRejection"),
        againstElectronMVA = cms.InputTag("hpsPFTauDiscriminationByMVAElectronRejection"),
        againstElectronMediumMVA2 = cms.InputTag("hpsPFTauDiscriminationByMVA2MediumElectronRejection"),
        byMediumCombinedIsolationDeltaBetaCorr = cms.InputTag("hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr"),
        againstMuonTight = cms.InputTag("hpsPFTauDiscriminationByTightMuonRejection"),
        againstElectronMedium = cms.InputTag("hpsPFTauDiscriminationByMediumElectronRejection"),
        byTightIsoMVA = cms.InputTag("hpsPFTauDiscriminationByTightIsolationMVA"),
        byTightCombinedIsolationDeltaBetaCorr = cms.InputTag("hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr"),
        againstElectronTight = cms.InputTag("hpsPFTauDiscriminationByTightElectronRejection"),
        againstElectronLoose = cms.InputTag("hpsPFTauDiscriminationByLooseElectronRejection"),
        byLooseIsoMVA = cms.InputTag("hpsPFTauDiscriminationByLooseIsolationMVA"),
        againstElectronMVA2raw = cms.InputTag("hpsPFTauDiscriminationByMVA2rawElectronRejection")
    ),
    addGenJetMatch = cms.bool(True),
    embedGenJetMatch = cms.bool(True),
    embedLeadTrack = cms.bool(True),
    embedLeadPFCand = cms.bool(False),
    embedSignalPFChargedHadrCands = cms.bool(False),
    addTauJetCorrFactors = cms.bool(False),
    resolutions = cms.PSet(

    ),
    userIsolation = cms.PSet(
        pfAllParticles = cms.PSet(
            threshold = cms.double(0.0),
            src = cms.InputTag("tauIsoDepositPFCandidates"),
            deltaR = cms.double(0.5)
        ),
        pfNeutralHadron = cms.PSet(
            threshold = cms.double(0.0),
            src = cms.InputTag("tauIsoDepositPFNeutralHadrons"),
            deltaR = cms.double(0.5)
        ),
        pfChargedHadron = cms.PSet(
            threshold = cms.double(0.0),
            src = cms.InputTag("tauIsoDepositPFChargedHadrons"),
            deltaR = cms.double(0.5)
        ),
        pfGamma = cms.PSet(
            threshold = cms.double(0.0),
            src = cms.InputTag("tauIsoDepositPFGammas"),
            deltaR = cms.double(0.5)
        )
    ),
    embedIsolationPFGammaCands = cms.bool(False),
    embedSignalPFGammaCands = cms.bool(False),
    efficiencies = cms.PSet(

    ),
    genJetMatch = cms.InputTag("tauGenJetMatch"),
    embedIsolationPFCands = cms.bool(False),
    userData = cms.PSet(
        userCands = cms.PSet(
            src = cms.VInputTag("")
        ),
        userInts = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFloats = cms.PSet(
            src = cms.VInputTag("")
        ),
        userClasses = cms.PSet(
            src = cms.VInputTag("")
        ),
        userFunctionLabels = cms.vstring(),
        userFunctions = cms.vstring()
    ),
    embedSignalPFCands = cms.bool(False),
    addEfficiencies = cms.bool(False),
    embedSignalTracks = cms.bool(True),
    tauSource = cms.InputTag("hpsPFTauProducer"),
    tauJetCorrFactorsSource = cms.VInputTag(cms.InputTag("patTauJetCorrFactors")),
    embedIsolationPFNeutralHadrCands = cms.bool(False),
    addTauID = cms.bool(True),
    genParticleMatch = cms.InputTag("tauMatch"),
    addGenMatch = cms.bool(True),
    addResolutions = cms.bool(False),
    embedIsolationPFChargedHadrCands = cms.bool(False),
    embedIsolationTracks = cms.bool(True),
    embedSignalPFNeutralHadrCands = cms.bool(False),
    isoDeposits = cms.PSet(
        pfAllParticles = cms.InputTag("tauIsoDepositPFCandidates"),
        pfNeutralHadron = cms.InputTag("tauIsoDepositPFNeutralHadrons"),
        pfChargedHadron = cms.InputTag("tauIsoDepositPFChargedHadrons"),
        pfGamma = cms.InputTag("tauIsoDepositPFGammas")
    ),
    embedLeadPFChargedHadrCand = cms.bool(False),
    embedGenMatch = cms.bool(True),
    embedLeadPFNeutralCand = cms.bool(False)
)


process.patTrigger = cms.EDProducer("PATTriggerProducer",
    processName = cms.string('*'),
    onlyStandAlone = cms.bool(False)
)


process.patTriggerEvent = cms.EDProducer("PATTriggerEventProducer",
    patTriggerMatches = cms.VInputTag(),
    processName = cms.string('HLT')
)


process.pcMet = cms.EDProducer("MetFlavorProducer",
    tmvaVariables = cms.vstring('nvtx', 
        'jetPt', 
        'jetEta', 
        'jetPhi', 
        'dZ', 
        'd0', 
        'beta', 
        'betaStar', 
        'nCharged', 
        'nNeutrals', 
        'dRMean', 
        'frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05'),
    JetPtMin = cms.double(1.0),
    full = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('PuJetIdOptMVA'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
            Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    runMvas = cms.bool(True),
    PhilV1 = cms.PSet(
        tmvaVariables = cms.vstring('nvtx', 
            'jetPt', 
            'jetEta', 
            'jetPhi', 
            'dZ', 
            'd0', 
            'beta', 
            'betaStar', 
            'nCharged', 
            'nNeutrals', 
            'dRMean', 
            'frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05'),
        tmvaMethod = cms.string('JetID'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
        tmvaSpectators = cms.vstring(),
        label = cms.string('philv1'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
            Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
            Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
            Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
            Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
            Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
            Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
            Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
            Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
            Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
            Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
            Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    dZMin = cms.double(0.1),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
    MetFlavor = cms.int32(4),
    impactParTkThreshold = cms.untracked.double(1.0),
    tmvaSpectators = cms.vstring(),
    label = cms.string('PhilV1'),
    JetName = cms.InputTag("ak5PFJets"),
    tmvaMethod = cms.string('JetID'),
    version = cms.int32(-1),
    PFCandidateName = cms.InputTag("particleFlow"),
    CorrJetName = cms.InputTag("patJets"),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
        Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
        Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
        Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
        Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
        Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
        Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
        Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
        Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
        Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
        Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
        Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
    ),
    RhoName = cms.InputTag("kt6PFJets","rho"),
    full_5x = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'dR2Mean', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('BDT_fullPlusRMS'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_fullPlusRMS.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74),
            Pt2030_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt1020_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt2030_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt010_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt010_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt1020_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt3050_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    VertexName = cms.InputTag("offlinePrimaryVertices")
)


process.pfMetForRegression = cms.EDProducer("MetFlavorProducer",
    tmvaVariables = cms.vstring('nvtx', 
        'jetPt', 
        'jetEta', 
        'jetPhi', 
        'dZ', 
        'd0', 
        'beta', 
        'betaStar', 
        'nCharged', 
        'nNeutrals', 
        'dRMean', 
        'frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05'),
    full = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('PuJetIdOptMVA'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
            Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    MetFlavor = cms.int32(0),
    runMvas = cms.bool(True),
    PhilV1 = cms.PSet(
        tmvaVariables = cms.vstring('nvtx', 
            'jetPt', 
            'jetEta', 
            'jetPhi', 
            'dZ', 
            'd0', 
            'beta', 
            'betaStar', 
            'nCharged', 
            'nNeutrals', 
            'dRMean', 
            'frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05'),
        tmvaMethod = cms.string('JetID'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
        tmvaSpectators = cms.vstring(),
        label = cms.string('philv1'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
            Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
            Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
            Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
            Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
            Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
            Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
            Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
            Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
            Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
            Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
            Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    dZMin = cms.double(0.1),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
    JetPtMin = cms.double(1.0),
    tmvaSpectators = cms.vstring(),
    label = cms.string('PhilV1'),
    JetName = cms.InputTag("ak5PFJets"),
    tmvaMethod = cms.string('JetID'),
    version = cms.int32(-1),
    CorrJetName = cms.InputTag("patJets"),
    PFCandidateName = cms.InputTag("particleFlow"),
    RhoName = cms.InputTag("kt6PFJets","rho"),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
        Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
        Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
        Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
        Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
        Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
        Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
        Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
        Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
        Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
        Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
        Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
    ),
    impactParTkThreshold = cms.untracked.double(1.0),
    full_5x = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'dR2Mean', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('BDT_fullPlusRMS'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_fullPlusRMS.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74),
            Pt2030_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt1020_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt2030_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt010_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt010_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt1020_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt3050_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    VertexName = cms.InputTag("offlinePrimaryVertices")
)


process.pfMetSignificance = cms.EDProducer("METSignificanceProducer",
    inputPATMuons = cms.InputTag(""),
    inputPATElectrons = cms.InputTag(""),
    resolution = cms.PSet(
        resolutionsEra = cms.string('Spring10'),
        HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
        EE_PhiResPar = cms.vdouble(0.02511),
        jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
            1.981, 1.972, 2.875, 3.923, 7.51),
        jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
            1.805, 2.06, 2.22, 2.268, 2.247),
        jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
            2.05, 2.267, 2.549, 2.785, 2.86),
        jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
            2.612, 2.863, 2.879, 2.925, 2.902),
        jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
            2.219, 2.289, 2.412, 2.695, 2.865),
        jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
            2.005, 2.209, 2.533, 2.812, 3.047),
        jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
            2.289, 2.639, 2.837, 2.946, 2.971),
        jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
            2.295, 2.562, 2.722, 2.943, 3.293),
        jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
            1.841, 2.115, 2.379, 2.508, 2.772),
        jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
            1.807, 2.035, 2.217, 2.378, 2.591),
        HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
        HF_PhiResPar = cms.vdouble(0.05022),
        PF_PhiResType7 = cms.vdouble(0.02511),
        HE_PhiResPar = cms.vdouble(0.02511),
        EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
        PF_PhiResType2 = cms.vdouble(0.002),
        PF_PhiResType3 = cms.vdouble(0.002),
        HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
        resolutionsAlgo = cms.string('AK5PF'),
        PF_PhiResType6 = cms.vdouble(0.02511),
        HB_PhiResPar = cms.vdouble(0.02511),
        PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
        PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
        ptresolthreshold = cms.double(10.0),
        EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
        jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
            0.035, 0.037, 0.032, 0.028, 0.028),
        EB_PhiResPar = cms.vdouble(0.00502),
        jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
            0.045, 0.036, 0.032, 0.034, 0.044),
        PF_PhiResType1 = cms.vdouble(0.002),
        jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
            0.036, 0.036, 0.033, 0.031, 0.031),
        HO_PhiResPar = cms.vdouble(0.02511),
        jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
            0.038, 0.036, 0.035, 0.034, 0.033),
        jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
            0.034, 0.031, 0.03, 0.029, 0.027),
        jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
            0.031, 0.028, 0.027, 0.027, 0.027),
        jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
            0.042, 0.039, 0.039, 0.037, 0.031),
        jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
            0.06, 0.051, 0.049, 0.045, 0.045),
        jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
            0.049, 0.049, 0.043, 0.039, 0.04),
        HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
        jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
            0.039, 0.039, 0.036, 0.034, 0.031),
        PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
        PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
        PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
        PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
        PF_EtResType1 = cms.vdouble(0.05, 0, 0),
        PF_EtResType3 = cms.vdouble(0.05, 0, 0),
        PF_EtResType2 = cms.vdouble(0.05, 0, 0)
    ),
    inputPFCandidates = cms.InputTag("pfNoJet"),
    inputPFJets = cms.InputTag("ak5PFJets")
)


process.pfNoJet = cms.EDProducer("TPPFJetsOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlow"),
    enable = cms.bool(True),
    topCollection = cms.InputTag("ak5PFJets"),
    name = cms.untracked.string('noJet'),
    verbose = cms.untracked.bool(False)
)


process.pfNoPileUp = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlow"),
    enable = cms.bool(True),
    topCollection = cms.InputTag("pfPileUp"),
    name = cms.untracked.string('pileUpOnPFCandidates'),
    verbose = cms.untracked.bool(False)
)


process.pfNoPileUpIso = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlow"),
    enable = cms.bool(True),
    topCollection = cms.InputTag("pfPileUpIso"),
    name = cms.untracked.string('pileUpOnPFCandidates'),
    verbose = cms.untracked.bool(False)
)


process.pfPileUp = cms.EDProducer("PFPileUp",
    PFCandidates = cms.InputTag("particleFlow"),
    Enable = cms.bool(True),
    checkClosestZVertex = cms.bool(False),
    verbose = cms.untracked.bool(False),
    Vertices = cms.InputTag("goodOfflinePrimaryVertices")
)


process.pfPileUpIso = cms.EDProducer("PFPileUp",
    checkClosestZVertex = cms.bool(True),
    Enable = cms.bool(True),
    PFCandidates = cms.InputTag("particleFlow"),
    verbose = cms.untracked.bool(False),
    Vertices = cms.InputTag("offlinePrimaryVertices")
)


process.pfRecoTauDiscriminationAgainstCaloMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstCaloMuon",
    srcHcalRecHits = cms.InputTag("hbhereco"),
    minLeadTrackPt = cms.double(15.0),
    maxEnToTrackRatio = cms.double(0.25),
    srcVertex = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    srcEcalRecHitsBarrel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRhcal = cms.double(25.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    maxEnEcal = cms.double(3.0),
    maxEnHcal = cms.double(8.0),
    dRecal = cms.double(15.0),
    srcEcalRecHitsEndcap = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    minLeadTrackPtFraction = cms.double(0.8)
)


process.pfRecoTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.pfRecoTauDiscriminationAgainstElectronMVA = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA",
    minMVA1prongStripsWgsfEC = cms.double(0.053),
    minMVA1prongEC = cms.double(0.06),
    minMVA1prongStripsWOgsfEC = cms.double(0.049),
    returnMVA = cms.bool(False),
    inputFileName1prongStripsWgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_1_1EC_BDT.weights.xml.gz'),
    inputFileName1prongEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_X_0EC_BDT.weights.xml.gz'),
    inputFileName1prongStripsWgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_1_1BL_BDT.weights.xml.gz'),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    inputFileName1prongStripsWOgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_0_1BL_BDT.weights.xml.gz'),
    inputFileName1prongStripsWOgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_0_1EC_BDT.weights.xml.gz'),
    minMVA1prongBL = cms.double(0.054),
    inputFileName1prongBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v2_X_0BL_BDT.weights.xml.gz'),
    method = cms.string('BDT'),
    minMVA1prongStripsWOgsfBL = cms.double(0.054),
    minMVA1prongStripsWgsfBL = cms.double(0.06)
)


process.pfRecoTauDiscriminationAgainstElectronMVA2 = cms.EDProducer("PFRecoTauDiscriminationAgainstElectronMVA2",
    minMVA1prongStripsWgsfWOpfEleMvaBL = cms.double(0.0),
    minMVA1prongEC = cms.double(0.0),
    inputFileName1prongNoEleMatchEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_NoEleMatch_Endcap_BDT.weights.xml.gz'),
    minMVA1prongStripsWgsfWOpfEleMvaEC = cms.double(0.0),
    inputFileName1prongStripsWgsfWOpfEleMvaBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwGSFwoPFMVA_Barrel_BDT.weights.xml.gz'),
    minMVA1prongStripsWgsfWpfEleMvaEC = cms.double(0.0),
    minMVA1prongStripsWOgsfEC = cms.double(0.0),
    returnMVA = cms.bool(True),
    inputFileName1prongStripsWgsfWOpfEleMvaEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwGSFwoPFMVA_Endcap_BDT.weights.xml.gz'),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    PFTauProducer = cms.InputTag("pfTauProducer"),
    minMVA1prongBL = cms.double(0.0),
    inputFileName1prongStripsWgsfWpfEleMvaEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwGSFwPFMVA_Endcap_BDT.weights.xml.gz'),
    method = cms.string('BDT'),
    inputFileName1prongBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_woG_Barrel_BDT.weights.xml.gz'),
    inputFileName1prongStripsWgsfWpfEleMvaBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwGSFwPFMVA_Barrel_BDT.weights.xml.gz'),
    minMVA1prongStripsWgsfWpfEleMvaBL = cms.double(0.0),
    inputFileName1prongNoEleMatchBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_NoEleMatch_Barrel_BDT.weights.xml.gz'),
    inputFileName1prongStripsWOgsfEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwoGSF_Endcap_BDT.weights.xml.gz'),
    minMVA1prongNoEleMatchBL = cms.double(0.0),
    minMVA1prongStripsWOgsfBL = cms.double(0.0),
    minMVA1prongNoEleMatchEC = cms.double(0.0),
    inputFileName1prongStripsWOgsfBL = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_wGwoGSF_Barrel_BDT.weights.xml.gz'),
    srcGsfElectrons = cms.InputTag("gsfElectrons"),
    inputFileName1prongEC = cms.FileInPath('RecoTauTag/RecoTau/data/TMVAClassification_v4_woG_Endcap_BDT.weights.xml.gz')
)


process.pfRecoTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.pfRecoTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.pfRecoTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.pfRecoTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.pfRecoTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.pfRecoTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.pfRecoTauDiscriminationByMVAIsolation = cms.EDProducer("PFRecoTauDiscriminationByMVAIsolation",
    mvaMin = cms.double(0.863),
    gbrfFilePath = cms.FileInPath('RecoTauTag/RecoTau/data/gbrfTauIso.root'),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    rhoProducer = cms.InputTag("kt6PFJetsForRhoComputationVoronoi","rho"),
    returnMVA = cms.bool(True),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    )
)


process.pfRecoTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauTagInfoProducer = cms.EDProducer("PFRecoTauTagInfoProducer",
    tkminTrackerHitsn = cms.int32(3),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    tkmaxChi2 = cms.double(100.0),
    ChargedHadrCand_AssociationCone = cms.double(0.8),
    ChargedHadrCand_tkminTrackerHitsn = cms.int32(3),
    ChargedHadrCand_tkmaxChi2 = cms.double(100.0),
    tkPVmaxDZ = cms.double(0.2),
    GammaCand_EcalclusMinEt = cms.double(0.5),
    tkminPixelHitsn = cms.int32(0),
    tkminPt = cms.double(0.5),
    PFCandidateProducer = cms.InputTag("particleFlow"),
    ChargedHadrCand_tkminPt = cms.double(0.5),
    ChargedHadrCand_tkmaxipt = cms.double(0.03),
    ChargedHadrCand_tkminPixelHitsn = cms.int32(0),
    UsePVconstraint = cms.bool(True),
    NeutrHadrCand_HcalclusMinEt = cms.double(1.0),
    PFJetTracksAssociatorProducer = cms.InputTag("ak5PFJetTracksAssociatorAtVertex"),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaX = cms.double(0.0015),
    smearedPVsigmaZ = cms.double(0.005),
    ChargedHadrCand_tkPVmaxDZ = cms.double(0.2),
    tkmaxipt = cms.double(0.03)
)


process.pfTauDecayMode = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducer")
)


process.pfTauDecayModeHighEfficiency = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducerHighEfficiency")
)


process.pfTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("pfRecoTauDecayModeProducer")
)


process.pfTauDecayModeInsideOut = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducerInsideOut")
)


process.phPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        SCMatch_Veto = cms.bool(True),
        ComponentName = cms.string('PFCandWithSuperClusterExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        MissHitSCMatch_Veto = cms.bool(False),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.phPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.postPathCounter = cms.EDProducer("EventCountProducer")


process.prePathCounter = cms.EDProducer("EventCountProducer")


process.puJetId = cms.EDProducer("PileupJetIdProducer",
    residualsTxt = cms.FileInPath('CMGTools/External/data/dummy.txt'),
    runMvas = cms.bool(False),
    inputIsCorrected = cms.bool(True),
    vertexes = cms.InputTag("offlinePrimaryVertices"),
    produceJetIds = cms.bool(True),
    jec = cms.string('AK5PF'),
    residualsFromTxt = cms.bool(False),
    applyJec = cms.bool(False),
    jetids = cms.InputTag(""),
    rho = cms.InputTag("kt6PFJets","rho"),
    jets = cms.InputTag("selectedPatJets"),
    algos = cms.VPSet(cms.PSet(
        cutBased = cms.bool(True),
        JetIdParams = cms.PSet(
            Pt010_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
            Pt3050_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
            Pt3050_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt010_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt1020_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
            Pt010_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
            Pt1020_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
            Pt1020_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt2030_RMSTight = cms.vdouble(0.05, 0.07, 0.03, 0.045),
            Pt3050_RMSTight = cms.vdouble(0.05, 0.06, 0.03, 0.04),
            Pt1020_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05),
            Pt3050_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
            Pt3050_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
            Pt2030_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
            Pt010_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
            Pt2030_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt1020_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
            Pt2030_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt2030_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
            Pt2030_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
            Pt010_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt3050_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt1020_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt010_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05)
        ),
        impactParTkThreshold = cms.double(1.0),
        label = cms.string('cutbased')
    ))
)


process.puJetIdCHS = cms.EDProducer("PileupJetIdProducer",
    produceJetIds = cms.bool(True),
    runMvas = cms.bool(False),
    inputIsCorrected = cms.bool(True),
    vertexes = cms.InputTag("offlinePrimaryVertices"),
    residualsTxt = cms.FileInPath('CMGTools/External/data/dummy.txt'),
    jec = cms.string('AK5PF'),
    residualsFromTxt = cms.bool(False),
    applyJec = cms.bool(False),
    jetids = cms.InputTag(""),
    rho = cms.InputTag("kt6PFJets","rho"),
    jets = cms.InputTag("selectedPatJetsCHS"),
    algos = cms.VPSet(cms.PSet(
        cutBased = cms.bool(True),
        JetIdParams = cms.PSet(
            Pt010_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
            Pt3050_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
            Pt3050_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt010_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt1020_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
            Pt010_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
            Pt1020_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
            Pt1020_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt2030_RMSTight = cms.vdouble(0.05, 0.07, 0.03, 0.045),
            Pt3050_RMSTight = cms.vdouble(0.05, 0.06, 0.03, 0.04),
            Pt1020_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05),
            Pt3050_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
            Pt3050_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
            Pt2030_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
            Pt010_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
            Pt2030_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt1020_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
            Pt2030_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt2030_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
            Pt2030_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
            Pt010_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt3050_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt1020_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
            Pt010_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05)
        ),
        impactParTkThreshold = cms.double(1.0),
        label = cms.string('cutbased')
    ))
)


process.puJetMva = cms.EDProducer("PileupJetIdProducer",
    residualsTxt = cms.FileInPath('CMGTools/External/data/dummy.txt'),
    runMvas = cms.bool(True),
    inputIsCorrected = cms.bool(True),
    vertexes = cms.InputTag("offlinePrimaryVertices"),
    produceJetIds = cms.bool(False),
    jec = cms.string('AK5PF'),
    residualsFromTxt = cms.bool(False),
    applyJec = cms.bool(False),
    jetids = cms.InputTag("puJetId"),
    rho = cms.InputTag("kt6PFJets","rho"),
    jets = cms.InputTag("selectedPatJets"),
    algos = cms.VPSet(cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'beta', 
            'betaStar'),
        tmvaMethod = cms.string('PuJetIdMinMVA'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdMinMVA.weights.xml'),
        tmvaSpectators = cms.vstring('nvtx', 
            'jetPt', 
            'jetEta'),
        label = cms.string('simple'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
            Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
            Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
            Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
            Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
            Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
        ),
        impactParTkThreshold = cms.double(1.0)
    ), 
        cms.PSet(
            tmvaVariables = cms.vstring('frac01', 
                'frac02', 
                'frac03', 
                'frac04', 
                'frac05', 
                'nvtx', 
                'nNeutrals', 
                'beta', 
                'betaStar', 
                'dZ', 
                'nCharged'),
            tmvaMethod = cms.string('PuJetIdOptMVA'),
            cutBased = cms.bool(False),
            tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
            tmvaSpectators = cms.vstring('jetPt', 
                'jetEta'),
            label = cms.string('full'),
            version = cms.int32(-1),
            JetIdParams = cms.PSet(
                Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
                Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
                Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
                Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
                Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
                Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
                Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
                Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
                Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
                Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
                Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
                Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
            ),
            impactParTkThreshold = cms.double(1.0)
        ), 
        cms.PSet(
            cutBased = cms.bool(True),
            JetIdParams = cms.PSet(
                Pt010_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
                Pt3050_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt3050_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt010_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt010_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt1020_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
                Pt1020_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt2030_RMSTight = cms.vdouble(0.05, 0.07, 0.03, 0.045),
                Pt3050_RMSTight = cms.vdouble(0.05, 0.06, 0.03, 0.04),
                Pt1020_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05),
                Pt3050_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt3050_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
                Pt2030_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
                Pt010_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt2030_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt2030_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt2030_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
                Pt2030_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
                Pt010_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt3050_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt1020_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
                Pt010_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05)
            ),
            impactParTkThreshold = cms.double(1.0),
            label = cms.string('cutbased')
        ), 
        cms.PSet(
            tmvaVariables = cms.vstring('nvtx', 
                'jetPt', 
                'jetEta', 
                'jetPhi', 
                'dZ', 
                'd0', 
                'beta', 
                'betaStar', 
                'nCharged', 
                'nNeutrals', 
                'dRMean', 
                'frac01', 
                'frac02', 
                'frac03', 
                'frac04', 
                'frac05'),
            tmvaMethod = cms.string('JetID'),
            cutBased = cms.bool(False),
            tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
            tmvaSpectators = cms.vstring(),
            label = cms.string('philv1'),
            version = cms.int32(-1),
            JetIdParams = cms.PSet(
                Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
                Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
                Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
                Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
                Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
                Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
                Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
                Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
                Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
                Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
                Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
                Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
            ),
            impactParTkThreshold = cms.double(1.0)
        ))
)


process.puMet = cms.EDProducer("MetFlavorProducer",
    tmvaVariables = cms.vstring('nvtx', 
        'jetPt', 
        'jetEta', 
        'jetPhi', 
        'dZ', 
        'd0', 
        'beta', 
        'betaStar', 
        'nCharged', 
        'nNeutrals', 
        'dRMean', 
        'frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05'),
    JetPtMin = cms.double(1.0),
    full = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('PuJetIdOptMVA'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
            Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    runMvas = cms.bool(True),
    PhilV1 = cms.PSet(
        tmvaVariables = cms.vstring('nvtx', 
            'jetPt', 
            'jetEta', 
            'jetPhi', 
            'dZ', 
            'd0', 
            'beta', 
            'betaStar', 
            'nCharged', 
            'nNeutrals', 
            'dRMean', 
            'frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05'),
        tmvaMethod = cms.string('JetID'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
        tmvaSpectators = cms.vstring(),
        label = cms.string('philv1'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
            Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
            Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
            Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
            Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
            Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
            Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
            Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
            Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
            Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
            Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
            Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    dZMin = cms.double(0.2),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
    MetFlavor = cms.int32(3),
    impactParTkThreshold = cms.untracked.double(1.0),
    tmvaSpectators = cms.vstring(),
    label = cms.string('PhilV1'),
    JetName = cms.InputTag("ak5PFJets"),
    tmvaMethod = cms.string('JetID'),
    version = cms.int32(-1),
    PFCandidateName = cms.InputTag("particleFlow"),
    CorrJetName = cms.InputTag("patJets"),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
        Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
        Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
        Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
        Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
        Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
        Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
        Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
        Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
        Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
        Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
        Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
    ),
    RhoName = cms.InputTag("kt6PFJets","rho"),
    full_5x = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'dR2Mean', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('BDT_fullPlusRMS'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_fullPlusRMS.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74),
            Pt2030_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt1020_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt2030_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt010_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt010_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt1020_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt3050_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    VertexName = cms.InputTag("offlinePrimaryVertices")
)


process.recoTauAK5PFJets08Region = cms.EDProducer("RecoTauJetRegionProducer",
    src = cms.InputTag("pfJetsForHPSTau"),
    deltaR = cms.double(0.8),
    pfSrc = cms.InputTag("particleFlow")
)


process.recoTauDiscriminantCutMultiplexer = cms.EDProducer("RecoTauDiscriminantCutMultiplexer",
    toMultiplex = cms.InputTag("fixme"),
    mapping = cms.VPSet(cms.PSet(
        category = cms.uint32(0),
        cut = cms.double(0.5)
    ), 
        cms.PSet(
            category = cms.uint32(1),
            cut = cms.double(0.2)
        )),
    key = cms.InputTag("fixme"),
    PFTauProducer = cms.InputTag("fixme")
)


process.secondaryVertexNegativeTagInfos = cms.EDProducer("SecondaryVertexProducer",
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(-0.01),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(-0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(-99999.9),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(-3.0),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(-2.5),
        distSig3dMin = cms.double(-99999.9)
    ),
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    ),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSort = cms.string('sip3dSig')
)


process.secondaryVertexTagInfos = cms.EDProducer("SecondaryVertexProducer",
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    ),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSort = cms.string('sip3dSig')
)


process.secondaryVertexTagInfosCHS = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    constraint = cms.string('BeamSpot'),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfosCHS"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip3dSig')
)


process.shrinkingConePFTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("shrinkingConePFTauDecayModeProducer")
)


process.shrinkingConePFTauDecayModeProducer = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.shrinkingConePFTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch'),
    HoPMin = cms.double(0.2)
)


process.shrinkingConePFTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.shrinkingConePFTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumOccupancy = cms.uint32(0),
    rhoProducer = cms.InputTag("kt6PFJets","rho"),
    deltaBetaFactor = cms.string('0.38'),
    applyRhoCorrection = cms.bool(False),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    isoConeSizeForDeltaBeta = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    vertexSrc = cms.InputTag("offlinePrimaryVertices"),
    applySumPtCut = cms.bool(False),
    applyDeltaBetaCorrection = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    rhoConeSize = cms.double(0.5),
    rhoUEOffsetCorrection = cms.double(1.0),
    particleFlowSrc = cms.InputTag("particleFlow"),
    applyRelativeSumPtCut = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    )
)


process.shrinkingConePFTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.shrinkingConePFTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.shrinkingConePFTauDiscriminationByTaNC = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(

    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('OneProngNoPiZero'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('OneProngOnePiZero'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('OneProngTwoPiZero'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('ThreeProngNoPiZero'),
            nCharged = cms.uint32(3)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('ThreeProngOnePiZero'),
            nCharged = cms.uint32(3)
        )),
    remapOutput = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    prefailValue = cms.double(-2.0),
    dbLabel = cms.string('')
)


process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.9087875)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.8707145)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.921793)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9451915)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9488565)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.7649845)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.699697)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.772231)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.905071)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9238995)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.9539685)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.940843)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.9645195)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.960407)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.994065)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.959384)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.991353)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.9712775)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9875015)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(1.0234655)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackVertexWeight = cms.double(-1),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauProducer = cms.EDProducer("RecoTauPiZeroUnembedder",
    src = cms.InputTag("shrinkingConePFTauProducerSansRefs"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.15'),
        name = cms.string('shrinkingCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('min(max(5.0/et(), 0.07), 0.15)'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        signalConePiZeros = cms.string('0.15'),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    ), 
        cms.PSet(
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            name = cms.string('TTIworkaround'),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )),
    piZeroSrc = cms.InputTag("ak5PFJetsLegacyTaNCPiZeros")
)


process.shrinkingConePFTauProducerSansRefs = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsRecoTauPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    ), 
        cms.PSet(
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            name = cms.string('TTIworkaround'),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.15'),
        name = cms.string('shrinkingCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('min(max(5.0/et(), 0.07), 0.15)'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            isolationQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(8),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(1.0),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(1.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
            signalQualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackVertexWeight = cms.double(-1),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            )
        ),
        signalConePiZeros = cms.string('0.15'),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.simpleCutBasedElectronID = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('test'),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId60cIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('60cIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId60relIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('60relIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId70cIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('70cIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId70relIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('70relIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId80cIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('80cIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId80relIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('80relIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId85cIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('85cIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId85relIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('85relIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId90cIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('90cIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId90relIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('90relIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId95cIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('95cIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleEleId95relIso = cms.EDProducer("EleIdCutBasedExtProducer",
    robust60relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.04, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.02, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust80cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    algorithm = cms.string('eIDCB'),
    verticesCollection = cms.InputTag("offlineBeamSpot"),
    robust95relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.15, 2.0, 0.12, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.08, 0.06, 0.05, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    ),
    robust70relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.025, 0.025, 0.02, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    robust70cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.03, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.04, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust85cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.09, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.06, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust80relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.07, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.03, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.04, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    robust90cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.07, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust85relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.04, 0.01, 0.06, 0.006, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.09, 0.08, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.04, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.05, 0.025, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    electronQuality = cms.string('95relIso'),
    electronIDType = cms.string('robust'),
    electronVersion = cms.string('V04'),
    src = cms.InputTag("gsfElectrons"),
    robust90relIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.12, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.12, 0.09, 0.1, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.05, 0.03, 0.7, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 0.05, 0.06, 0.03, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.02, 
            0.02)
    ),
    robust60cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.025, 0.01, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.03, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02),
        endcap = cms.vdouble(0.025, 0.03, 0.02, 0.005, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.02, 0.0, -9999.0, 
            9999.0, 9999.0, 0, -1, 0.02, 
            0.02)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    robust95cIsoEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.15, 0.01, 0.8, 0.007, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.15, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0),
        endcap = cms.vdouble(0.07, 0.03, 0.7, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 0.1, 0.0, -9999.0, 
            9999.0, 9999.0, 1, -1, 0.0, 
            0.0)
    )
)


process.simpleSecondaryVertexBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexHighEffBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfosCHS"))
)


process.simpleSecondaryVertexHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex3Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexHighPurBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex3Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfosCHS"))
)


process.simpleSecondaryVertexNegativeBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexNegativeTagInfos"))
)


process.sisCone5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    radiusPU = cms.double(0.5),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('SISCone'),
    rParam = cms.double(0.5)
)


process.sisCone5GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone5GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone7GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone7GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone7GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    minSeed = cms.uint32(14327),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.softElectronBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softElectron'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronByIP3dBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByIP3d'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronByIP3dBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByIP3d'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfosCHS"))
)


process.softElectronByPtBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByPt'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronByPtBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByPt'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfosCHS"))
)


process.softElectronCands = cms.EDProducer("SoftElectronCandProducer",
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.017),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.39),
    BarrelMVACuts = cms.vdouble(-0.1, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0),
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(-0.24, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 7.01),
    electrons = cms.InputTag("gsfElectrons")
)


process.softElectronCandsCHS = cms.EDProducer("SoftElectronCandProducer",
    ForwardInverseFBremCuts = cms.vdouble(1.0, 7.01),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(-0.24, 1.0),
    electrons = cms.InputTag("gsfElectrons"),
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.017),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.39),
    BarrelMVACuts = cms.vdouble(-0.1, 1.0)
)


process.softElectronSelector = cms.EDProducer("BtagGsfElectronSelector",
    input = cms.InputTag("gsfElectrons"),
    selection = cms.InputTag("eidLoose"),
    cut = cms.double(0.5)
)


process.softElectronTagInfos = cms.EDProducer("SoftLepton",
    muonSelection = cms.uint32(0),
    leptons = cms.InputTag("gsfElectrons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    leptonCands = cms.InputTag("softElectronCands"),
    leptonId = cms.InputTag(""),
    refineJetAxis = cms.uint32(0),
    jets = cms.InputTag("ak5PFJetsSel"),
    leptonDeltaRCut = cms.double(0.4),
    leptonChi2Cut = cms.double(10.0)
)


process.softElectronTagInfosCHS = cms.EDProducer("SoftLepton",
    muonSelection = cms.uint32(0),
    leptons = cms.InputTag("gsfElectrons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    leptonCands = cms.InputTag("softElectronCandsCHS"),
    leptonId = cms.InputTag(""),
    refineJetAxis = cms.uint32(0),
    jets = cms.InputTag("ak5PFJetsSelCHS"),
    leptonDeltaRCut = cms.double(0.4),
    leptonChi2Cut = cms.double(10.0)
)


process.softMuonBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softMuon'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softMuon'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfosCHS"))
)


process.softMuonByIP3dBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByIP3d'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonByIP3dBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByIP3d'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfosCHS"))
)


process.softMuonByPtBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByPt'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonByPtBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByPt'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfosCHS"))
)


process.softMuonNoIPBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softMuonNoIP'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonTagInfos = cms.EDProducer("SoftLepton",
    muonSelection = cms.uint32(1),
    leptons = cms.InputTag("muons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    leptonCands = cms.InputTag(""),
    leptonId = cms.InputTag(""),
    refineJetAxis = cms.uint32(0),
    jets = cms.InputTag("ak5PFJetsSel"),
    leptonDeltaRCut = cms.double(0.4),
    leptonChi2Cut = cms.double(9999.0)
)


process.softMuonTagInfosCHS = cms.EDProducer("SoftLepton",
    muonSelection = cms.uint32(1),
    leptons = cms.InputTag("muons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    leptonCands = cms.InputTag(""),
    leptonId = cms.InputTag(""),
    refineJetAxis = cms.uint32(0),
    jets = cms.InputTag("ak5PFJetsSelCHS"),
    leptonDeltaRCut = cms.double(0.4),
    leptonChi2Cut = cms.double(9999.0)
)


process.tauGenJetMatch = cms.EDProducer("GenJetMatcher",
    src = cms.InputTag("hpsPFTauProducer"),
    maxDPtRel = cms.double(3.0),
    mcPdgId = cms.vint32(),
    mcStatus = cms.vint32(),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(0.1),
    checkCharge = cms.bool(False),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("tauGenJetsSelectorAllHadrons")
)


process.tauGenJets = cms.EDProducer("TauGenJetProducer",
    includeNeutrinos = cms.bool(False),
    GenParticles = cms.InputTag("genParticles"),
    verbose = cms.untracked.bool(False)
)


process.tauIsoDepositPFCandidates = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("hpsPFTauProducer"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(10000.0),
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(10000.0),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducer"),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        candidateSource = cms.InputTag("particleFlow"),
        dRmatchPFTau = cms.double(0.1)
    )
)


process.tauIsoDepositPFChargedHadrons = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("hpsPFTauProducer"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducer"),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        candidateSource = cms.InputTag("pfAllChargedHadrons"),
        dRmatchPFTau = cms.double(0.1)
    )
)


process.tauIsoDepositPFGammas = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("hpsPFTauProducer"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(10000.0),
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(10000.0),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducer"),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        candidateSource = cms.InputTag("pfAllPhotons"),
        dRmatchPFTau = cms.double(0.1)
    )
)


process.tauIsoDepositPFNeutralHadrons = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("hpsPFTauProducer"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(10000.0),
        ComponentName = cms.string('PFTauExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(10000.0),
        dRvetoPFTauSignalConeConstituents = cms.double(0.01),
        tauSource = cms.InputTag("hpsPFTauProducer"),
        DR_Veto = cms.double(0.0),
        DepositLabel = cms.untracked.string(''),
        candidateSource = cms.InputTag("pfAllNeutralHadrons"),
        dRmatchPFTau = cms.double(0.1)
    )
)


process.tauMatch = cms.EDProducer("MCMatcher",
    src = cms.InputTag("hpsPFTauProducer"),
    maxDPtRel = cms.double(999.9),
    mcPdgId = cms.vint32(15),
    mcStatus = cms.vint32(2),
    resolveByMatchQuality = cms.bool(False),
    maxDeltaR = cms.double(999.9),
    checkCharge = cms.bool(True),
    resolveAmbiguities = cms.bool(True),
    matched = cms.InputTag("genParticles")
)


process.tkMet = cms.EDProducer("MetFlavorProducer",
    tmvaVariables = cms.vstring('nvtx', 
        'jetPt', 
        'jetEta', 
        'jetPhi', 
        'dZ', 
        'd0', 
        'beta', 
        'betaStar', 
        'nCharged', 
        'nNeutrals', 
        'dRMean', 
        'frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05'),
    JetPtMin = cms.double(1.0),
    full = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('PuJetIdOptMVA'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
            Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
            Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
            Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
            Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
            Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
            Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    runMvas = cms.bool(True),
    PhilV1 = cms.PSet(
        tmvaVariables = cms.vstring('nvtx', 
            'jetPt', 
            'jetEta', 
            'jetPhi', 
            'dZ', 
            'd0', 
            'beta', 
            'betaStar', 
            'nCharged', 
            'nNeutrals', 
            'dRMean', 
            'frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05'),
        tmvaMethod = cms.string('JetID'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
        tmvaSpectators = cms.vstring(),
        label = cms.string('philv1'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
            Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
            Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
            Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
            Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
            Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
            Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
            Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
            Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
            Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
            Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
            Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    dZMin = cms.double(0.1),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
    MetFlavor = cms.int32(1),
    impactParTkThreshold = cms.untracked.double(1.0),
    tmvaSpectators = cms.vstring(),
    label = cms.string('PhilV1'),
    JetName = cms.InputTag("ak5PFJets"),
    tmvaMethod = cms.string('JetID'),
    version = cms.int32(-1),
    PFCandidateName = cms.InputTag("particleFlow"),
    CorrJetName = cms.InputTag("patJets"),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
        Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
        Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
        Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
        Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
        Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
        Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
        Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
        Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
        Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
        Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
        Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
    ),
    RhoName = cms.InputTag("kt6PFJets","rho"),
    full_5x = cms.PSet(
        tmvaVariables = cms.vstring('frac01', 
            'frac02', 
            'frac03', 
            'frac04', 
            'frac05', 
            'dR2Mean', 
            'nvtx', 
            'nNeutrals', 
            'beta', 
            'betaStar', 
            'dZ', 
            'nCharged'),
        tmvaMethod = cms.string('BDT_fullPlusRMS'),
        cutBased = cms.bool(False),
        tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_fullPlusRMS.weights.xml'),
        tmvaSpectators = cms.vstring('jetPt', 
            'jetEta'),
        label = cms.string('full'),
        version = cms.int32(-1),
        JetIdParams = cms.PSet(
            Pt2030_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74),
            Pt2030_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt1020_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt2030_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
            Pt010_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
            Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt010_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt1020_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
            Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
            Pt3050_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
            Pt3050_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74)
        ),
        impactParTkThreshold = cms.double(1.0)
    ),
    VertexName = cms.InputTag("offlinePrimaryVertices")
)


process.trackCountingHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D2nd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.trackCountingHighEffBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D2nd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfosCHS"))
)


process.trackCountingHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D3rd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.trackCountingHighPurBJetTagsCHS = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D3rd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfosCHS"))
)


process.vertexWeight05AugReReco = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_170249-172619_7TeV_ReReco5Aug_Collisions11_JSON_v2.pileup_v2.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeight2011AB = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_160404-180252_4.6invfb.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeight2011B = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_2011B.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeight2invfb = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_160404-173692_2.1invfb.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeight3D05AugReReco = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_170249-172619_7TeV_ReReco5Aug_Collisions11_JSON_v2.pileupTruth_v2_finebin.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Summer11MC.root')
)


process.vertexWeight3D2011AB = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_160404-180252_4.6invfb.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Summer11MC.root')
)


process.vertexWeight3D2011B = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_2011B.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Summer11MC.root')
)


process.vertexWeight3D2invfb = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_160404-173692_2.1invfb.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Summer11MC.root')
)


process.vertexWeight3DFall1105AugReReco = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_170249-172619_7TeV_ReReco5Aug_Collisions11_JSON_v2.pileupTruth_v2_finebin.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Fall11MC.root')
)


process.vertexWeight3DFall112011AB = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_160404-180252_4.6invfb.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Fall11MC.root')
)


process.vertexWeight3DFall112011B = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_2011B.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Fall11MC.root')
)


process.vertexWeight3DFall112invfb = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_160404-173692_2.1invfb.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Fall11MC.root')
)


process.vertexWeight3DFall11May10ReReco = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_160404-163869_7TeV_May10ReReco_Collisions11_JSON_v3.pileupTruth_v2_finebin.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Fall11MC.root')
)


process.vertexWeight3DFall11PromptRecov4 = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_165088-167913_7TeV_PromptReco_JSON.pileupTruth_v2_finebin.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Fall11MC.root')
)


process.vertexWeight3DFall11PromptRecov6 = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_172620-173692_PromptReco_JSON.pileupTruth_v2_finebin.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Fall11MC.root')
)


process.vertexWeight3DMay10ReReco = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_160404-163869_7TeV_May10ReReco_Collisions11_JSON_v3.pileupTruth_v2_finebin.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Summer11MC.root')
)


process.vertexWeight3DPromptRecov4 = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_165088-167913_7TeV_PromptReco_JSON.pileupTruth_v2_finebin.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Summer11MC.root')
)


process.vertexWeight3DPromptRecov6 = cms.EDProducer("PileUpWeight3DProducer",
    verbose = cms.untracked.bool(False),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_172620-173692_PromptReco_JSON.pileupTruth_v2_finebin.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup3D_Summer11MC.root')
)


process.vertexWeightEPSJul8 = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Pileup_2011_EPS_8_jul.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeightFall1105AugReReco = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_170249-172619_7TeV_ReReco5Aug_Collisions11_JSON_v2.pileup_v2.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightFall112011AB = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_160404-180252_4.6invfb.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightFall112011B = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_2011B.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightFall112invfb = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_160404-173692_2.1invfb.pileup.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightFall11EPSJul8 = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Pileup_2011_EPS_8_jul.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightFall11LeptonPhoton = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Pileup_2011_to_172802_LP_LumiScale.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightFall11May10ReReco = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_160404-163869_7TeV_May10ReReco_Collisions11_JSON_v3.pileup_v2.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightFall11PromptRecov4 = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_165088-167913_7TeV_PromptReco_JSON.pileup_v2.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightFall11PromptRecov6 = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_172620-173692_PromptReco_JSON.pileup_v2.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Fall11MC.root')
)


process.vertexWeightLeptonPhoton = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Pileup_2011_to_172802_LP_LumiScale.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeightMay10ReReco = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_160404-163869_7TeV_May10ReReco_Collisions11_JSON_v3.pileup_v2.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeightPromptRecov4 = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_165088-167913_7TeV_PromptReco_JSON.pileup_v2.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeightPromptRecov6 = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(1),
    inputHistData = cms.string('/afs/cern.ch/cms/CAF/CMSCOMM/COMM_DQM/certification/Collisions11/7TeV/PileUp/Cert_172620-173692_PromptReco_JSON.pileup_v2.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer11MC.root')
)


process.vertexWeightSummer12MCICHEPData = cms.EDProducer("PileUpWeightProducer",
    src = cms.InputTag("addPileupInfo"),
    verbose = cms.untracked.bool(False),
    type = cms.int32(2),
    inputHistData = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_2012ICHEP_start_196509.true.root'),
    inputHistMC = cms.string('/afs/cern.ch/work/c/cmgtools/ProductionSoftware/V5_6_0_B_44X/CMGTools/CMSSW_4_4_4/src/CMGTools/RootTools/data/vertexWeight/Pileup_Summer12MC52X.true.root')
)


process.CSCTightHaloFilter = cms.EDFilter("CSCHaloFilter",
    ExpectedBX = cms.int32(3),
    MinOuterMomentumTheta = cms.double(0.1),
    MaxDROverDz = cms.double(0.13),
    CollisionMuonLabel = cms.InputTag("muons"),
    MatchingDPhiThreshold = cms.double(0.18),
    MinNumberOfOutOfTimeDigis = cms.untracked.int32(1),
    MaxOuterMomentumTheta = cms.double(3.0),
    OuterRMax = cms.double(99999.0),
    ALCTDigiLabel = cms.InputTag("muonCSCDigis","MuonCSCALCTDigi"),
    SACosmicMuonLabel = cms.InputTag("cosmicMuons"),
    NormChi2 = cms.double(8.0),
    FilterDigiLevel = cms.bool(True),
    FilterTriggerLevel = cms.bool(True),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    Deta = cms.double(0.1),
    FilterRecoLevel = cms.bool(True),
    CSCSegmentLabel = cms.InputTag("cscSegments"),
    InnerRMax = cms.double(99999.0),
    FilterCSCTight = cms.bool(True),
    L1MuGMTReadoutLabel = cms.InputTag("gtDigis"),
    MinNumberOfHaloTracks = cms.untracked.int32(1),
    OuterRMin = cms.double(0.0),
    InnerRMin = cms.double(0.0),
    FilterCSCLoose = cms.bool(False),
    BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
    MatchingDEtaThreshold = cms.double(0.4),
    MatchingDWireThreshold = cms.int32(5),
    MinNumberOfHaloTriggers = cms.untracked.int32(1),
    Dphi = cms.double(1.0),
    CSCRecHitLabel = cms.InputTag("csc2DRecHits"),
    CSCHaloDataLabel = cms.InputTag("CSCHaloData")
)


process.EcalDeadCellTriggerPrimitiveFilter = cms.EDFilter("EcalDeadCellTriggerPrimitiveFilter",
    maskedEcalChannelStatusThreshold = cms.int32(1),
    ebReducedRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    etValToBeFlagged = cms.double(63.75),
    eeReducedRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    profileRootName = cms.untracked.string('deadCellFilterProfile.root'),
    doEEfilter = cms.untracked.bool(True),
    makeProfileRoot = cms.untracked.bool(False),
    taggingMode = cms.bool(False),
    debug = cms.bool(False),
    tpDigiCollection = cms.InputTag("ecalTPSkimNA"),
    verbose = cms.int32(1)
)


process.HBHENoiseFilter = cms.EDFilter("HBHENoiseFilter",
    minRBXHits = cms.int32(999),
    minIsolatedNoiseSumE = cms.double(50.0),
    minHighEHitTime = cms.double(-9999.0),
    minHPDNoOtherHits = cms.int32(10),
    useTS4TS5 = cms.bool(True),
    noiselabel = cms.InputTag("hcalnoise"),
    minZeros = cms.int32(10),
    minNumIsolatedNoiseChannels = cms.int32(10),
    maxRatio = cms.double(999.0),
    maxHighEHitTime = cms.double(9999.0),
    maxRBXEMF = cms.double(-999.0),
    minHPDHits = cms.int32(17),
    minIsolatedNoiseSumEt = cms.double(25.0),
    minRatio = cms.double(-999.0)
)


process.ak5PFJetsSel = cms.EDFilter("GenericPFJetSelector",
    src = cms.InputTag("ak5PFJets"),
    cut = cms.string('pt()>0')
)


process.ak5PFJetsSelCHS = cms.EDFilter("GenericPFJetSelector",
    src = cms.InputTag("ak5PFJetsCHS"),
    cut = cms.string('pt()>0')
)


process.candidateSize = cms.EDFilter("CandidateSizeProducer",
    src = cms.InputTag("")
)


process.cmgBaseCandMET = cms.EDFilter("BaseMETPOProducer",
    cfg = cms.PSet(
        ptThreshold = cms.double(0.0),
        inputCollection = cms.InputTag("selectedPatJetsAK5")
    ),
    cuts = cms.PSet(

    )
)


process.cmgBaseJet = cms.EDFilter("BaseJetPOProducer",
    cfg = cms.PSet(
        jecPath = cms.string('CMGTools/Common/data/GR_P_V41_AN1_Uncertainty_AK5PF.txt'),
        fillJec = cms.bool(True),
        btagType = cms.vstring('trackCountingHighEffBJetTags', 
            'trackCountingHighPurBJetTags', 
            'jetProbabilityBJetTags', 
            'jetBProbabilityBJetTags', 
            'simpleSecondaryVertexHighEffBJetTags', 
            'simpleSecondaryVertexHighPurBJetTags', 
            'combinedSecondaryVertexBJetTags', 
            'combinedSecondaryVertexMVABJetTags'),
        fillJecUncertainty = cms.bool(True),
        inputCollection = cms.InputTag("selectedPatJets")
    ),
    cuts = cms.PSet(
        csv = cms.PSet(
            tight = cms.string('btag(6) >= 0.898'),
            medium = cms.string('btag(6) >= 0.679'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(6) >= 0.244')
        ),
        jp = cms.PSet(
            tight = cms.string('btag(2) >= 0.790'),
            medium = cms.string('btag(2) >= 0.545'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(2) >= 0.275')
        ),
        tche = cms.PSet(
            tight = cms.string('btag(0) >= 10.2'),
            medium = cms.string('btag(0) >= 3.3'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(0) >= 1.7')
        )
    )
)


process.cmgBaseJetSel = cms.EDFilter("CmgBaseJetSelector",
    src = cms.InputTag(""),
    cut = cms.string('pt()>0')
)


process.cmgBaseMET = cms.EDFilter("PATMETPOProducer",
    cfg = cms.PSet(
        ptThreshold = cms.double(-1.0),
        inputCollection = cms.InputTag("patMETsAK5")
    ),
    cuts = cms.PSet(

    )
)


process.cmgCaloBaseJet = cms.EDFilter("BaseJetPOProducer",
    cfg = cms.PSet(
        jecPath = cms.string('CMGTools/Common/data/GR_P_V41_AN1_Uncertainty_AK5PF.txt'),
        fillJec = cms.bool(True),
        btagType = cms.vstring('trackCountingHighEffBJetTags', 
            'trackCountingHighPurBJetTags', 
            'jetProbabilityBJetTags', 
            'jetBProbabilityBJetTags', 
            'simpleSecondaryVertexHighEffBJetTags', 
            'simpleSecondaryVertexHighPurBJetTags', 
            'combinedSecondaryVertexBJetTags', 
            'combinedSecondaryVertexMVABJetTags'),
        fillJecUncertainty = cms.bool(True),
        inputCollection = cms.InputTag("selectedPatJetsAK5")
    ),
    cuts = cms.PSet(
        csv = cms.PSet(
            tight = cms.string('btag(6) >= 0.898'),
            medium = cms.string('btag(6) >= 0.679'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(6) >= 0.244')
        ),
        jp = cms.PSet(
            tight = cms.string('btag(2) >= 0.790'),
            medium = cms.string('btag(2) >= 0.545'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(2) >= 0.275')
        ),
        tche = cms.PSet(
            tight = cms.string('btag(0) >= 10.2'),
            medium = cms.string('btag(0) >= 3.3'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(0) >= 1.7')
        )
    )
)


process.cmgCaloBaseJetSel = cms.EDFilter("CmgBaseJetSelector",
    src = cms.InputTag("cmgCaloBaseJet"),
    cut = cms.string('pt()>10')
)


process.cmgCaloMET = cms.EDFilter("PATMETPOProducer",
    cfg = cms.PSet(
        ptThreshold = cms.double(-1.0),
        inputCollection = cms.InputTag("patMETs")
    ),
    cuts = cms.PSet(

    )
)


process.cmgCandSel = cms.EDFilter("CandViewSelector",
    src = cms.InputTag(""),
    cut = cms.string('pt()>0')
)


process.cmgDiElectron = cms.EDFilter("DiElectronPOProducer",
    cfg = cms.PSet(
        leg2Collection = cms.InputTag("cmgElectronSel"),
        leg1Collection = cms.InputTag("cmgElectronSel"),
        metCollection = cms.InputTag("")
    ),
    cuts = cms.PSet(
        zee = cms.PSet(
            leg2_quality = cms.string(''),
            leg1_kinematics = cms.PSet(
                phi = cms.string('abs(leg1().phi()) < 10'),
                eta = cms.string('abs(leg1().eta()) < 3'),
                pt = cms.string('leg1().pt() > 15')
            ),
            leg2_kinematics = cms.PSet(
                phi = cms.string('abs(leg2().phi()) < 10'),
                eta = cms.string('abs(leg2().eta()) < 3'),
                pt = cms.string('leg2().pt() > 10')
            ),
            mass = cms.string('mass() >= 50 && mass() < 120'),
            leg1_quality = cms.string('')
        )
    )
)


process.cmgDiElectronCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgDiElectronSel"),
    minNumber = cms.uint32(0)
)


process.cmgDiElectronSel = cms.EDFilter("CmgDiElectronSelector",
    src = cms.InputTag("cmgDiElectron"),
    cut = cms.string('pt()>0')
)


process.cmgDiMuon = cms.EDFilter("DiMuonPOProducer",
    cfg = cms.PSet(
        leg2Collection = cms.InputTag("cmgMuonSel"),
        leg1Collection = cms.InputTag("cmgMuonSel"),
        metCollection = cms.InputTag("")
    ),
    cuts = cms.PSet(

    )
)


process.cmgDiMuonCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgDiMuonSel"),
    minNumber = cms.uint32(0)
)


process.cmgDiMuonSel = cms.EDFilter("CmgDiMuonSelector",
    src = cms.InputTag("cmgDiMuon"),
    cut = cms.string('pt()>0')
)


process.cmgDiTauCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgDiTauSel"),
    minNumber = cms.uint32(0)
)


process.cmgElectron = cms.EDFilter("ElectronPOProducer",
    cfg = cms.PSet(
        leptonFactory = cms.PSet(
            vertexType = cms.int32(0),
            photonsIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet(cms.PSet(
                    dEta = cms.double(0.1),
                    dPhi = cms.double(0.2),
                    type = cms.string('RectangularEtaPhiVeto')
                ))
            ),
            useIsoDeposits = cms.bool(False),
            useParticleFlowIso = cms.bool(True),
            puChargedHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            chargedAllIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            vertexCollection = cms.InputTag("offlinePrimaryVertices"),
            neutralHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            chargedHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            )
        ),
        primaryVertexCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
        electronMVAFile = cms.FileInPath('CMGTools/Common/data/TMVA_BDTSimpleCat.weights.xml'),
        inputCollection = cms.InputTag("patElectronsWithTrigger")
    ),
    cuts = cms.PSet(
        vetoNoVtx = cms.PSet(
            sigmaIetaIeta = cms.string('(sourcePtr().isEB() && sourcePtr().sigmaIetaIeta() < 0.010 ) || ( sourcePtr().isEE() && sourcePtr().sigmaIetaIeta() < 0.030 )'),
            ooemoop = cms.string('( 1.0/sourcePtr().ecalEnergy() - sourcePtr().eSuperClusterOverP()/sourcePtr().ecalEnergy() ) < 999.9'),
            passConversionVeto = cms.string('sourcePtr().passConversionVeto() == 1 || sourcePtr().passConversionVeto() != 1'),
            hadronicOverEm = cms.string('(sourcePtr().isEB() && sourcePtr().hadronicOverEm() < 0.150 ) || ( sourcePtr().isEE() && sourcePtr().hadronicOverEm() < 999.9)'),
            deltaPhiSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.800 ) || ( sourcePtr().isEE() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.700 )'),
            deltaEtaSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.007 ) || ( sourcePtr().isEE() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.010 )'),
            mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() <= 999')
        ),
        looseNoVtx = cms.PSet(
            sigmaIetaIeta = cms.string('(sourcePtr().isEB() && sourcePtr().sigmaIetaIeta() < 0.010 ) || ( sourcePtr().isEE() && sourcePtr().sigmaIetaIeta() < 0.030 )'),
            ooemoop = cms.string('( 1.0/sourcePtr().ecalEnergy() - sourcePtr().eSuperClusterOverP()/sourcePtr().ecalEnergy() ) < 0.050'),
            passConversionVeto = cms.string('sourcePtr().passConversionVeto() == 1'),
            hadronicOverEm = cms.string('(sourcePtr().isEB() && sourcePtr().hadronicOverEm() < 0.120 ) || ( sourcePtr().isEE() && sourcePtr().hadronicOverEm() < 0.100)'),
            deltaPhiSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.150 ) || ( sourcePtr().isEE() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.100 )'),
            deltaEtaSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.007 ) || ( sourcePtr().isEE() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.009 )'),
            mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() <= 1')
        ),
        premvaTrig = cms.PSet(
            sigmaIetaIeta = cms.string('( sourcePtr().superCluster().get().eta() < 1.479 && sourcePtr().sigmaIetaIeta() < 0.014 ) || ( sourcePtr().superCluster().get().eta() >= 1.479 && sourcePtr().sigmaIetaIeta() < 0.035 )'),
            dr03Hcal = cms.string('sourcePtr().dr03HcalTowerSumEt()/pt() < 0.2'),
            dr03Trk = cms.string('sourcePtr().dr03TkSumPt()/pt() < 0.2'),
            dr03Ecal = cms.string('sourcePtr().dr03EcalRecHitSumEt()/pt() < 0.2'),
            hadronicOverEm = cms.string('( sourcePtr().superCluster().get().eta() < 1.479 && sourcePtr().hadronicOverEm() < 0.15 ) || ( sourcePtr().superCluster().get().eta() >= 1.479 && sourcePtr().hadronicOverEm() < 0.10 )'),
            mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() == 0')
        ),
        ecalDriven = cms.string('ecalDriven() == 1'),
        isEB = cms.string('sourcePtr().isEB()'),
        mediumNoVtx = cms.PSet(
            sigmaIetaIeta = cms.string('(sourcePtr().isEB() && sourcePtr().sigmaIetaIeta() < 0.010 ) || ( sourcePtr().isEE() && sourcePtr().sigmaIetaIeta() < 0.030 )'),
            ooemoop = cms.string('( 1.0/sourcePtr().ecalEnergy() - sourcePtr().eSuperClusterOverP()/sourcePtr().ecalEnergy() ) < 0.050'),
            passConversionVeto = cms.string('sourcePtr().passConversionVeto() == 1'),
            hadronicOverEm = cms.string('(sourcePtr().isEB() && sourcePtr().hadronicOverEm() < 0.120 ) || ( sourcePtr().isEE() && sourcePtr().hadronicOverEm() < 0.100)'),
            deltaPhiSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.060 ) || ( sourcePtr().isEE() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.030 )'),
            deltaEtaSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.004 ) || ( sourcePtr().isEE() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.007 )'),
            mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() <= 1')
        ),
        isEE = cms.string('sourcePtr().isEE()'),
        tightNoVtx = cms.PSet(
            sigmaIetaIeta = cms.string('(sourcePtr().isEB() && sourcePtr().sigmaIetaIeta() < 0.010 ) || ( sourcePtr().isEE() && sourcePtr().sigmaIetaIeta() < 0.030 )'),
            ooemoop = cms.string('( 1.0/sourcePtr().ecalEnergy() - sourcePtr().eSuperClusterOverP()/sourcePtr().ecalEnergy() ) < 0.050'),
            passConversionVeto = cms.string('sourcePtr().passConversionVeto() == 1'),
            hadronicOverEm = cms.string('(sourcePtr().isEB() && sourcePtr().hadronicOverEm() < 0.120 ) || ( sourcePtr().isEE() && sourcePtr().hadronicOverEm() < 0.100)'),
            deltaPhiSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.030 ) || ( sourcePtr().isEE() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.020 )'),
            deltaEtaSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.004 ) || ( sourcePtr().isEE() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.005 )'),
            mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() <= 0')
        )
    )
)


process.cmgElectronCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgElectronSel"),
    minNumber = cms.uint32(0)
)


process.cmgElectronSel = cms.EDFilter("CmgElectronSelector",
    src = cms.InputTag("cmgElectron"),
    cut = cms.string('pt()>0')
)


process.cmgMHTCaloJet30 = cms.EDFilter("BaseMETPOProducer",
    cfg = cms.PSet(
        ptThreshold = cms.double(30.0),
        inputCollection = cms.InputTag("cmgCaloBaseJet")
    ),
    cuts = cms.PSet(

    )
)


process.cmgMHTPFJet30 = cms.EDFilter("BaseMETPOProducer",
    cfg = cms.PSet(
        ptThreshold = cms.double(30.0),
        inputCollection = cms.InputTag("cmgPFBaseJet")
    ),
    cuts = cms.PSet(

    )
)


process.cmgMHTPFJet30Sel = cms.EDFilter("CandViewSelector",
    src = cms.InputTag("cmgMHTPFJet30"),
    cut = cms.string('pt()>0')
)


process.cmgMuon = cms.EDFilter("MuonPOProducer",
    cfg = cms.PSet(
        leptonFactory = cms.PSet(
            vertexType = cms.int32(0),
            photonsIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet(cms.PSet(
                    dEta = cms.double(0.1),
                    dPhi = cms.double(0.2),
                    type = cms.string('RectangularEtaPhiVeto')
                ))
            ),
            useIsoDeposits = cms.bool(False),
            useParticleFlowIso = cms.bool(True),
            puChargedHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            chargedAllIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            vertexCollection = cms.InputTag("offlinePrimaryVertices"),
            neutralHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            chargedHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            )
        ),
        muonIDType = cms.string('TMLastStationLoose'),
        trackType = cms.int32(0),
        inputCollection = cms.InputTag("patMuonsWithTrigger")
    ),
    cuts = cms.PSet(
        highptmuonNoVtx = cms.PSet(
            numberOfMatchedStations = cms.string('numberOfMatchedStations() > 1'),
            numberOfValidMuonHits = cms.string('numberOfValidMuonHits() > 0'),
            numberOfValidPixelHits = cms.string('numberOfValidPixelHits() > 0'),
            trackerLayersWithMeasurement = cms.string('trackerLayersWithMeasurement() > 8'),
            isGlobal = cms.string('isGlobal()')
        ),
        loosemuon = cms.PSet(
            isPF = cms.string('isPF()'),
            isNotSTA = cms.string('isGlobal()||isTracker()')
        ),
        softmuonNoVtx = cms.PSet(
            tkNormalizedChi2 = cms.string('tkNormalizedChi2 < 1.8'),
            pixelLayersWithMeasurement = cms.string('pixelLayersWithMeasurement() > 1'),
            trackerLayersWithMeasurement = cms.string('trackerLayersWithMeasurement() > 5'),
            isTMOST = cms.string('isTMOST()')
        ),
        tightmuonNoVtx = cms.PSet(
            normalizedChi2 = cms.string('normalizedChi2() < 10'),
            numberOfMatchedStations = cms.string('numberOfMatchedStations() > 1'),
            numberOfValidMuonHits = cms.string('numberOfValidMuonHits() > 0'),
            isGlobal = cms.string('isGlobal()'),
            numberOfValidPixelHits = cms.string('numberOfValidPixelHits() > 0'),
            isPF = cms.string('isPF()'),
            trackerLayersWithMeasurement = cms.string('trackerLayersWithMeasurement() > 5')
        ),
        vbtfmuon = cms.PSet(
            normalizedChi2 = cms.string('normalizedChi2() < 10'),
            numberOfMatches = cms.string('numberOfMatches() > 1'),
            dxy = cms.string('abs(dxy()) < 0.2'),
            numberOfValidMuonHits = cms.string('numberOfValidMuonHits() > 0'),
            isGlobal = cms.string('isGlobal()'),
            isTracker = cms.string('isTracker()'),
            numberOfValidPixelHits = cms.string('numberOfValidPixelHits() > 0'),
            trackerLayersWithMeasurement = cms.string('trackerLayersWithMeasurement() > 8')
        )
    )
)


process.cmgMuonCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgMuonSel"),
    minNumber = cms.uint32(0)
)


process.cmgMuonSel = cms.EDFilter("CmgMuonSelector",
    src = cms.InputTag("cmgMuon"),
    cut = cms.string('pt()>0')
)


process.cmgPFBaseJetAll = cms.EDFilter("BaseJetPOProducer",
    cfg = cms.PSet(
        jecPath = cms.string('CMGTools/Common/data/GR_P_V41_AN1_Uncertainty_AK5PF.txt'),
        fillJec = cms.bool(True),
        btagType = cms.vstring('trackCountingHighEffBJetTags', 
            'trackCountingHighPurBJetTags', 
            'jetProbabilityBJetTags', 
            'jetBProbabilityBJetTags', 
            'simpleSecondaryVertexHighEffBJetTags', 
            'simpleSecondaryVertexHighPurBJetTags', 
            'combinedSecondaryVertexBJetTags', 
            'combinedSecondaryVertexMVABJetTags'),
        fillJecUncertainty = cms.bool(True),
        inputCollection = cms.InputTag("patJets")
    ),
    cuts = cms.PSet(
        csv = cms.PSet(
            tight = cms.string('btag(6) >= 0.898'),
            medium = cms.string('btag(6) >= 0.679'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(6) >= 0.244')
        ),
        jp = cms.PSet(
            tight = cms.string('btag(2) >= 0.790'),
            medium = cms.string('btag(2) >= 0.545'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(2) >= 0.275')
        ),
        tche = cms.PSet(
            tight = cms.string('btag(0) >= 10.2'),
            medium = cms.string('btag(0) >= 3.3'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(0) >= 1.7')
        )
    )
)


process.cmgPFBaseJetAllCHS = cms.EDFilter("BaseJetPOProducer",
    cfg = cms.PSet(
        jecPath = cms.string('CMGTools/Common/data/GR_P_V41_AN1_Uncertainty_AK5PF.txt'),
        fillJec = cms.bool(True),
        btagType = cms.vstring('trackCountingHighEffBJetTags', 
            'trackCountingHighPurBJetTags', 
            'jetProbabilityBJetTags', 
            'jetBProbabilityBJetTags', 
            'simpleSecondaryVertexHighEffBJetTags', 
            'simpleSecondaryVertexHighPurBJetTags', 
            'combinedSecondaryVertexBJetTags', 
            'combinedSecondaryVertexMVABJetTags'),
        fillJecUncertainty = cms.bool(True),
        inputCollection = cms.InputTag("patJetsCHS")
    ),
    cuts = cms.PSet(
        csv = cms.PSet(
            tight = cms.string('btag(6) >= 0.898'),
            medium = cms.string('btag(6) >= 0.679'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(6) >= 0.244')
        ),
        jp = cms.PSet(
            tight = cms.string('btag(2) >= 0.790'),
            medium = cms.string('btag(2) >= 0.545'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(2) >= 0.275')
        ),
        tche = cms.PSet(
            tight = cms.string('btag(0) >= 10.2'),
            medium = cms.string('btag(0) >= 3.3'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(0) >= 1.7')
        )
    )
)


process.cmgPFJet = cms.EDFilter("PFJetPOProducer",
    cfg = cms.PSet(
        puMvas = cms.VInputTag(cms.InputTag("cmgPUJetMva","simpleDiscriminant"), cms.InputTag("cmgPUJetMva","fullDiscriminant"), cms.InputTag("cmgPUJetMva","cutbasedDiscriminant"), cms.InputTag("cmgPUJetMva","philv1Discriminant")),
        baseJetFactory = cms.PSet(
            jecPath = cms.string('CMGTools/Common/data/GR_P_V41_AN1_Uncertainty_AK5PF.txt'),
            fillJec = cms.bool(True),
            btagType = cms.vstring('trackCountingHighEffBJetTags', 
                'trackCountingHighPurBJetTags', 
                'jetProbabilityBJetTags', 
                'jetBProbabilityBJetTags', 
                'simpleSecondaryVertexHighEffBJetTags', 
                'simpleSecondaryVertexHighPurBJetTags', 
                'combinedSecondaryVertexBJetTags', 
                'combinedSecondaryVertexMVABJetTags'),
            fillJecUncertainty = cms.bool(True),
            inputCollection = cms.InputTag("selectedPatJets")
        ),
        puVariables = cms.InputTag("puJetId"),
        useConstituents = cms.bool(True),
        puIds = cms.VInputTag(cms.InputTag("cmgPUJetMva","simpleId"), cms.InputTag("cmgPUJetMva","fullId"), cms.InputTag("cmgPUJetMva","cutbasedId"), cms.InputTag("cmgPUJetMva","philv1Id")),
        inputCollection = cms.InputTag("selectedPatJets")
    ),
    verbose = cms.untracked.bool(False),
    cuts = cms.PSet(
        veryLooseJetId99 = cms.PSet(
            gammaFraction = cms.string('component(4).fraction() < 0.99'),
            h0Fraction = cms.string('component(5).fraction() < 0.99')
        ),
        looseJetId = cms.PSet(
            chargedMultiplicity = cms.string('( component(1).number() + component(2).number() + component(3).number() ) > 0 || abs(eta()) > 2.4 '),
            gammaFraction = cms.string('component(4).fraction() < 0.99'),
            eFraction = cms.string('component(2).fraction() < 0.99 || abs(eta()) > 2.4 '),
            h0Fraction = cms.string('component(5).fraction() < 0.99'),
            nConstituents = cms.string('nConstituents() > 1'),
            hFraction = cms.string('component(1).fraction() > 0 || abs(eta()) > 2.4 ')
        ),
        mediumJetId = cms.PSet(
            chargedMultiplicity = cms.string('( component(1).number() + component(2).number() + component(3).number() ) > 0 || abs(eta()) > 2.4 '),
            gammaFraction = cms.string('component(4).fraction() < 0.95'),
            eFraction = cms.string('component(2).fraction() < 0.99 || abs(eta()) > 2.4 '),
            h0Fraction = cms.string('component(5).fraction() < 0.95'),
            nConstituents = cms.string('nConstituents() > 1'),
            hFraction = cms.string('component(1).fraction() > 0 || abs(eta()) > 2.4 ')
        ),
        tchp = cms.PSet(
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            tight = cms.string('btag(1) >= 3.41'),
            medium = cms.string('btag(1) >= 1.93'),
            loose = cms.string('btag(1) >= 1.19')
        ),
        jp = cms.PSet(
            tight = cms.string('btag(2) >= 0.790'),
            medium = cms.string('btag(2) >= 0.545'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(2) >= 0.275')
        ),
        veryLooseJetId95 = cms.PSet(
            gammaFraction = cms.string('component(4).fraction() < 0.95'),
            h0Fraction = cms.string('component(5).fraction() < 0.95')
        ),
        tightJetId = cms.PSet(
            chargedMultiplicity = cms.string('( component(1).number() + component(2).number() + component(3).number() ) > 0 || abs(eta()) > 2.4 '),
            gammaFraction = cms.string('component(4).fraction() < 0.90'),
            eFraction = cms.string('component(2).fraction() < 0.99 || abs(eta()) > 2.4 '),
            h0Fraction = cms.string('component(5).fraction() < 0.90'),
            nConstituents = cms.string('nConstituents() > 1'),
            hFraction = cms.string('component(1).fraction() > 0 || abs(eta()) > 2.4 ')
        ),
        veryLooseJetId95h0 = cms.PSet(
            h0Fraction = cms.string('component(5).fraction() < 0.95')
        ),
        veryLooseJetId95gamma = cms.PSet(
            gammaFraction = cms.string('component(4).fraction() < 0.95')
        ),
        csv = cms.PSet(
            tight = cms.string('btag(6) >= 0.898'),
            medium = cms.string('btag(6) >= 0.679'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(6) >= 0.244')
        ),
        tche = cms.PSet(
            tight = cms.string('btag(0) >= 10.2'),
            medium = cms.string('btag(0) >= 3.3'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(0) >= 1.7')
        )
    )
)


process.cmgPFJetCHS = cms.EDFilter("PFJetPOProducer",
    cfg = cms.PSet(
        puMvas = cms.VInputTag(cms.InputTag("cmgPUJetMvaCHS","simpleDiscriminant"), cms.InputTag("cmgPUJetMvaCHS","fullDiscriminant"), cms.InputTag("cmgPUJetMvaCHS","cutbasedDiscriminant"), cms.InputTag("cmgPUJetMvaCHS","philv1Discriminant")),
        baseJetFactory = cms.PSet(
            jecPath = cms.string('CMGTools/Common/data/GR_P_V41_AN1_Uncertainty_AK5PF.txt'),
            fillJec = cms.bool(True),
            btagType = cms.vstring('trackCountingHighEffBJetTags', 
                'trackCountingHighPurBJetTags', 
                'jetProbabilityBJetTags', 
                'jetBProbabilityBJetTags', 
                'simpleSecondaryVertexHighEffBJetTags', 
                'simpleSecondaryVertexHighPurBJetTags', 
                'combinedSecondaryVertexBJetTags', 
                'combinedSecondaryVertexMVABJetTags'),
            fillJecUncertainty = cms.bool(True),
            inputCollection = cms.InputTag("selectedPatJetsCHS")
        ),
        puVariables = cms.InputTag("puJetIdCHS"),
        useConstituents = cms.bool(True),
        puIds = cms.VInputTag(cms.InputTag("cmgPUJetMvaCHS","simpleId"), cms.InputTag("cmgPUJetMvaCHS","fullId"), cms.InputTag("cmgPUJetMvaCHS","cutbasedId"), cms.InputTag("cmgPUJetMvaCHS","philv1Id")),
        inputCollection = cms.InputTag("selectedPatJetsCHS")
    ),
    verbose = cms.untracked.bool(False),
    cuts = cms.PSet(
        veryLooseJetId99 = cms.PSet(
            gammaFraction = cms.string('component(4).fraction() < 0.99'),
            h0Fraction = cms.string('component(5).fraction() < 0.99')
        ),
        looseJetId = cms.PSet(
            chargedMultiplicity = cms.string('( component(1).number() + component(2).number() + component(3).number() ) > 0 || abs(eta()) > 2.4 '),
            gammaFraction = cms.string('component(4).fraction() < 0.99'),
            eFraction = cms.string('component(2).fraction() < 0.99 || abs(eta()) > 2.4 '),
            h0Fraction = cms.string('component(5).fraction() < 0.99'),
            nConstituents = cms.string('nConstituents() > 1'),
            hFraction = cms.string('component(1).fraction() > 0 || abs(eta()) > 2.4 ')
        ),
        mediumJetId = cms.PSet(
            chargedMultiplicity = cms.string('( component(1).number() + component(2).number() + component(3).number() ) > 0 || abs(eta()) > 2.4 '),
            gammaFraction = cms.string('component(4).fraction() < 0.95'),
            eFraction = cms.string('component(2).fraction() < 0.99 || abs(eta()) > 2.4 '),
            h0Fraction = cms.string('component(5).fraction() < 0.95'),
            nConstituents = cms.string('nConstituents() > 1'),
            hFraction = cms.string('component(1).fraction() > 0 || abs(eta()) > 2.4 ')
        ),
        tchp = cms.PSet(
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            tight = cms.string('btag(1) >= 3.41'),
            medium = cms.string('btag(1) >= 1.93'),
            loose = cms.string('btag(1) >= 1.19')
        ),
        jp = cms.PSet(
            tight = cms.string('btag(2) >= 0.790'),
            medium = cms.string('btag(2) >= 0.545'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(2) >= 0.275')
        ),
        veryLooseJetId95 = cms.PSet(
            gammaFraction = cms.string('component(4).fraction() < 0.95'),
            h0Fraction = cms.string('component(5).fraction() < 0.95')
        ),
        tightJetId = cms.PSet(
            chargedMultiplicity = cms.string('( component(1).number() + component(2).number() + component(3).number() ) > 0 || abs(eta()) > 2.4 '),
            gammaFraction = cms.string('component(4).fraction() < 0.90'),
            eFraction = cms.string('component(2).fraction() < 0.99 || abs(eta()) > 2.4 '),
            h0Fraction = cms.string('component(5).fraction() < 0.90'),
            nConstituents = cms.string('nConstituents() > 1'),
            hFraction = cms.string('component(1).fraction() > 0 || abs(eta()) > 2.4 ')
        ),
        veryLooseJetId95h0 = cms.PSet(
            h0Fraction = cms.string('component(5).fraction() < 0.95')
        ),
        veryLooseJetId95gamma = cms.PSet(
            gammaFraction = cms.string('component(4).fraction() < 0.95')
        ),
        csv = cms.PSet(
            tight = cms.string('btag(6) >= 0.898'),
            medium = cms.string('btag(6) >= 0.679'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(6) >= 0.244')
        ),
        tche = cms.PSet(
            tight = cms.string('btag(0) >= 10.2'),
            medium = cms.string('btag(0) >= 3.3'),
            mcbparton = cms.string('abs(sourcePtr().partonFlavour()) == 5'),
            loose = cms.string('btag(0) >= 1.7')
        )
    )
)


process.cmgPFJetCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgPFJetSel"),
    minNumber = cms.uint32(0)
)


process.cmgPFJetLooseJetIdFailed = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSel"),
    cut = cms.string('!getSelection("cuts_looseJetId")')
)


process.cmgPFJetLooseJetIdFailedCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSelCHS"),
    cut = cms.string('!getSelection("cuts_looseJetId")')
)


process.cmgPFJetMediumJetIdFailed = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSel"),
    cut = cms.string('!getSelection("cuts_mediumJetId")')
)


process.cmgPFJetMediumJetIdFailedCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSelCHS"),
    cut = cms.string('!getSelection("cuts_mediumJetId")')
)


process.cmgPFJetSel = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJet"),
    cut = cms.string('pt()>10')
)


process.cmgPFJetSelCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetCHS"),
    cut = cms.string('pt()>10')
)


process.cmgPFJetTightJetIdFailed = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSel"),
    cut = cms.string('!getSelection("cuts_tightJetId")')
)


process.cmgPFJetTightJetIdFailedCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSelCHS"),
    cut = cms.string('!getSelection("cuts_tightJetId")')
)


process.cmgPFJetType1MET = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJet"),
    cut = cms.string('pt() >= 10 && abs(eta()) < 4.7')
)


process.cmgPFJetType1METCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetCHS"),
    cut = cms.string('pt() >= 10 && abs(eta()) < 4.7')
)


process.cmgPFJetVeryLooseJetId95Failed = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSel"),
    cut = cms.string('!getSelection("cuts_veryLooseJetId95")')
)


process.cmgPFJetVeryLooseJetId95FailedCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSelCHS"),
    cut = cms.string('!getSelection("cuts_veryLooseJetId95")')
)


process.cmgPFJetVeryLooseJetId95gammaFailed = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSel"),
    cut = cms.string('!getSelection("cuts_veryLooseJetId95gamma")')
)


process.cmgPFJetVeryLooseJetId95gammaFailedCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSelCHS"),
    cut = cms.string('!getSelection("cuts_veryLooseJetId95gamma")')
)


process.cmgPFJetVeryLooseJetId95h0Failed = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSel"),
    cut = cms.string('!getSelection("cuts_veryLooseJetId95h0")')
)


process.cmgPFJetVeryLooseJetId95h0FailedCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSelCHS"),
    cut = cms.string('!getSelection("cuts_veryLooseJetId95h0")')
)


process.cmgPFJetVeryLooseJetId99Failed = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSel"),
    cut = cms.string('!getSelection("cuts_veryLooseJetId99")')
)


process.cmgPFJetVeryLooseJetId99FailedCHS = cms.EDFilter("CmgPFJetSelector",
    src = cms.InputTag("cmgPFJetSelCHS"),
    cut = cms.string('!getSelection("cuts_veryLooseJetId99")')
)


process.cmgPFMET = cms.EDFilter("PATMETPOProducer",
    cfg = cms.PSet(
        ptThreshold = cms.double(-1.0),
        inputCollection = cms.InputTag("patMETs")
    ),
    cuts = cms.PSet(

    )
)


process.cmgPFMETCount = cms.EDFilter("CandCountFilter",
    src = cms.InputTag("cmgPFMETSel"),
    minNumber = cms.uint32(1)
)


process.cmgPFMETRaw = cms.EDFilter("PATMETPOProducer",
    cfg = cms.PSet(
        ptThreshold = cms.double(-1.0),
        inputCollection = cms.InputTag("patMETsRaw")
    ),
    cuts = cms.PSet(

    )
)


process.cmgPFMETSel = cms.EDFilter("CandViewSelector",
    src = cms.InputTag("cmgPFMET"),
    cut = cms.string('pt()>0')
)


process.cmgPFMETType1Corrected = cms.EDFilter("METPOScaler",
    cfg = cms.PSet(
        doType1Correction = cms.bool(True),
        jecUncDirection = cms.double(0.0),
        metLabel = cms.InputTag("cmgPFMET"),
        jetLabel = cms.InputTag("cmgPFJetType1MET")
    ),
    cuts = cms.PSet(

    )
)


process.cmgPOSel = cms.EDFilter("CmgGenJetPOSelector",
    src = cms.InputTag(""),
    cut = cms.string('pt()>0')
)


process.cmgPhoton = cms.EDFilter("PhotonPOProducer",
    cfg = cms.PSet(
        photonsIsoPar = cms.PSet(
            coneSize = cms.double(0.3),
            vetoes = cms.VPSet(cms.PSet(
                threshold = cms.double(0.5),
                type = cms.string('ThresholdVeto')
            ))
        ),
        chargedHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.3),
            vetoes = cms.VPSet(cms.PSet(
                threshold = cms.double(0.2),
                type = cms.string('ThresholdVeto')
            ))
        ),
        isoDepWithCharged = cms.InputTag("phPFIsoDepositCharged"),
        puIsoPar = cms.PSet(
            coneSize = cms.double(0.3),
            vetoes = cms.VPSet(cms.PSet(
                threshold = cms.double(0.2),
                type = cms.string('ThresholdVeto')
            ))
        ),
        neutralHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.3),
            vetoes = cms.VPSet(cms.PSet(
                threshold = cms.double(0.5),
                type = cms.string('ThresholdVeto')
            ))
        ),
        isoDepWithNeutral = cms.InputTag("phPFIsoDepositNeutral"),
        inputCollection = cms.InputTag("pfSelectedPhotons"),
        pfCollection = cms.InputTag("particleFlow"),
        muonCollection = cms.InputTag("patMuonsWithTrigger"),
        isoDepWithPhotons = cms.InputTag("phPFIsoDepositGamma"),
        isoDepWithPU = cms.InputTag("phPFIsoDepositPU")
    ),
    cuts = cms.PSet(
        kinematics = cms.PSet(
            phi = cms.string('abs(phi()) < 3.2'),
            eta = cms.string('abs(eta()) < 2.5'),
            pt = cms.string('pt() > 2')
        )
    )
)


process.cmgPhotonSel = cms.EDFilter("CmgPhotonSelector",
    src = cms.InputTag("cmgPhoton"),
    cut = cms.string('pt()>2')
)


process.cmgTau = cms.EDFilter("TauPOProducer",
    cfg = cms.PSet(
        leptonFactory = cms.PSet(
            vertexType = cms.int32(0),
            photonsIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet(cms.PSet(
                    dEta = cms.double(0.1),
                    dPhi = cms.double(0.2),
                    type = cms.string('RectangularEtaPhiVeto')
                ))
            ),
            useIsoDeposits = cms.bool(False),
            useParticleFlowIso = cms.bool(True),
            puChargedHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            chargedAllIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            vertexCollection = cms.InputTag("offlinePrimaryVertices"),
            neutralHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            ),
            chargedHadronIsoPar = cms.PSet(
                coneSize = cms.double(0.4),
                vetoes = cms.VPSet()
            )
        ),
        inputCollection = cms.InputTag("selectedPatTaus")
    ),
    cuts = cms.PSet(
        pt_default = cms.string('pt() > 0.0 ')
    )
)


process.cmgTauCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgTauSel"),
    minNumber = cms.uint32(0)
)


process.cmgTauSel = cms.EDFilter("CmgTauSelector",
    src = cms.InputTag("cmgTau"),
    cut = cms.string('pt() > 15.0')
)


process.cmgTriggerObject = cms.EDFilter("TriggerObjectPOProducer",
    cfg = cms.PSet(
        useTriggerObjects = cms.untracked.bool(False),
        processName = cms.untracked.string('*'),
        triggerResults = cms.InputTag("TriggerResults"),
        triggerObjects = cms.InputTag("patTrigger")
    ),
    cuts = cms.PSet(

    )
)


process.cmgTriggerObjectCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgTriggerObjectSel"),
    minNumber = cms.uint32(0)
)


process.cmgTriggerObjectList = cms.EDFilter("TriggerObjectPOProducer",
    cfg = cms.PSet(
        useTriggerObjects = cms.untracked.bool(True),
        processName = cms.untracked.string('*'),
        saveAllHLTPathsInObjs = cms.untracked.bool(False),
        triggerResults = cms.InputTag("TriggerResults"),
        triggerObjects = cms.InputTag("patTrigger")
    ),
    cuts = cms.PSet(

    )
)


process.cmgTriggerObjectListCount = cms.EDFilter("CandViewCountFilter",
    src = cms.InputTag("cmgTriggerObjectListSel"),
    minNumber = cms.uint32(0)
)


process.cmgTriggerObjectListSel = cms.EDFilter("CmgTriggerObjectSelector",
    src = cms.InputTag("cmgTriggerObjectList"),
    cut = cms.string('')
)


process.cmgTriggerObjectSel = cms.EDFilter("CmgTriggerObjectSelector",
    src = cms.InputTag("cmgTriggerObject"),
    cut = cms.string('')
)


process.electronSelSize = cms.EDFilter("CandidateSizeProducer",
    src = cms.InputTag("cmgElectronSel")
)


process.genJet = cms.EDFilter("GenJetPOProducer",
    cfg = cms.PSet(
        inputCollection = cms.InputTag("ak5GenJetsNoNu")
    ),
    verbose = cms.untracked.bool(False),
    cuts = cms.PSet(

    )
)


process.genJetSel = cms.EDFilter("CmgGenJetPOSelector",
    src = cms.InputTag("genJet"),
    cut = cms.string('pt()>10')
)


process.goodOfflinePrimaryVertices = cms.EDFilter("PrimaryVertexObjectFilter",
    src = cms.InputTag("offlinePrimaryVertices"),
    filterParams = cms.PSet(
        maxZ = cms.double(24.0),
        minNdof = cms.double(4.0),
        maxRho = cms.double(2.0),
        pvSrc = cms.InputTag("offlinePrimaryVertices")
    )
)


process.goodVertices = cms.EDFilter("VertexSelector",
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices"),
    cut = cms.string('!isFake && ndof > 4 && abs(z) <= 24 && position.rho < 2')
)


process.hcalLaserEventFilter = cms.EDFilter("HcalLaserEventFilter",
    vetoByHBHEOccupancy = cms.untracked.bool(False),
    hbheInputLabel = cms.untracked.InputTag("hbhereco"),
    minOccupiedHBHE = cms.untracked.uint32(5000),
    taggingMode = cms.bool(False),
    debug = cms.untracked.bool(False),
    vetoByRunEventNumber = cms.untracked.bool(True),
    BadRunEventNumbers = (cms.untracked.vuint32(160957, 146483131, 160957, 146483132, 160957, 367078426, 163289, 120704451, 163289, 120704452, 163332, 300924904, 163587, 5705088, 163588, 86700074, 163659, 269761831, 163659, 379050220, 165415, 696548170, 165415, 696548171, 165617, 295894671, 165617, 295894672, 165993, 120876169, 165993, 120876170, 166011, 58123616, 166011, 58123617, 166380, 833988349, 166380, 833988350, 166380, 874735805, 166380, 874735806, 166380, 915050480, 166380, 1037024294, 166512, 1222721981, 166512, 1222721982, 166563, 299342294, 166563, 299431306, 166563, 299431307, 166563, 299645965, 166699, 908134746, 166699, 908134747, 167281, 115904577, 167282, 286707493, 167282, 286707494, 167282, 286766119, 167282, 286766120, 167284, 44118160, 167284, 44118161, 167551, 365086623, 167551, 365086624, 167674, 59067344, 167674, 59067345, 167675, 227610655, 167675, 227610656, 167754, 73011356, 167754, 73011357, 167807, 1202030368, 167807, 1202030369, 167898, 568063754, 167898, 568063755, 167898, 718530727, 167969, 3462839, 167969, 3462840, 167969, 9442755, 167969, 9442756, 167969, 11435992, 167969, 11435993, 170255, 83361834, 170255, 83361835, 170304, 57541359, 170304, 57541360, 170854, 291050200, 170854, 291050201, 170854, 329611102, 170854, 329611103, 170899, 39787119, 170899, 39787120, 171091, 9021397, 171091, 9021398, 171091, 97261559, 171091, 97261560, 171156, 369378017, 171156, 369378018, 171897, 353709470, 172033, 412685841, 172033, 412685842, 172033, 885328695, 172033, 982705197, 172033, 982705198, 172163, 530358965, 172389, 45660388, 172389, 45660389, 172411, 173742880, 172411, 173742881, 172478, 53762243, 172478, 53762244, 172478, 54053290, 172478, 54092625, 172478, 54092626, 172478, 54092948, 172478, 98093904, 172478, 98093905, 172485, 424192588, 172485, 424192589, 172791, 966404647, 172802, 464891113, 172802, 464891114, 172802, 464892883, 172802, 464892884, 172819, 81201593, 172822, 1074244840, 172822, 2836941609, 172868, 393947631, 172868, 393947632, 172868, 1421063049, 172868, 1421063050, 172868, 1421076216, 172868, 1421076217, 172868, 2012432054, 172868, 2012432055, 172868, 2137890207, 172868, 2137890208, 173198, 741435194, 173198, 741435195, 173198, 1009198868, 173198, 1009198869, 173226, 781573, 173226, 781574, 173241, 746837625, 173241, 746837626, 173380, 21324672, 173380, 21324673, 173659, 128113809, 173659, 128113810, 173662, 10511470, 173662, 10511471, 173692)+cms.untracked.vuint32(755803939, 173692, 2597438478, 173692, 2597438479, 174809, 777532, 174809, 777533, 175560, 2368923, 175560, 2368924, 175560, 7580776, 175834, 105072341, 175834, 105072342, 175866, 343429213, 175866, 343429214, 175875, 182390835, 175875, 182390836, 175888, 49192628, 175888, 49192629, 175888, 128999776, 175888, 128999777, 175973, 122366434, 175973, 122366435, 175976, 80421989, 175976, 80421990, 175990, 6376426, 175990, 6376427, 175990, 75007084, 175990, 75007085, 175990, 146437701, 175990, 146437702, 176161, 15560079, 176161, 15560080, 176202, 119772380, 176202, 119772381, 176202, 324604001, 176202, 324604002, 176309, 233512658, 176309, 233512659, 176309, 935495115, 176309, 935495116, 176309, 1331935829, 176309, 1331935830, 176309, 2496631352, 176697, 403510, 176697, 403511, 176701, 73573187, 176701, 73573188, 176702, 11693970, 176702, 11693971, 176702, 67569367, 176702, 67569368, 176801, 410530622, 176929, 460082240, 176929, 460082241, 176954, 138469, 176954, 138470, 177053, 327815438, 177053, 327815439, 177074, 154911610, 177074, 154911611, 177140, 785923000, 177317, 72936561, 177317, 72936562, 177317, 73219012, 177317, 73219013, 177449, 275466422, 177449, 275466423, 177452, 226991391, 177452, 226991392, 177509, 99081581, 177509, 99081582, 177509, 314204437, 177509, 314204438, 177509, 314319381, 177509, 314319382, 177515, 291757022, 177515, 291757023, 177515, 1103056195, 177515, 1103056196, 177515, 1534353246, 177515, 1534353247, 177718, 890704274, 177718, 890704275, 177719, 294071879, 177719, 294071880, 177730, 1850737398, 177730, 1850737399, 177730, 2007600403, 177730, 2007600404, 177730, 2563818242, 177730, 2563818243, 177790, 507968788, 177790, 507968789, 177790, 772640382, 177790, 772640383, 177791, 89470582, 177791, 89470583, 177875, 647616276, 177875, 647616277, 178041, 783372, 178041, 783394, 178041, 783395, 178041, 784044, 178041, 784045, 178041, 784499, 178041, 784500, 178041, 784551, 178041, 784552, 178041, 786438, 178041, 786439, 178041, 786770, 178041, 786771, 178041, 787142, 178041, 787143, 178041, 787202, 178100, 898633273, 178100, 1566052885, 178100, 1566052886, 178116, 453801141, 178116, 453801142, 178424, 630485076, 178424, 630485077, 178667, 494184, 178667, 494185, 178667, 51504048, 178667, 51504049, 178825, 149780, 178825, 149781, 178866, 410333501, 178866, 410333502)+cms.untracked.vuint32(178866, 651783943, 178866, 651783944, 178871, 236100751, 178970, 660540406, 178970, 660540407, 178985, 85355292, 178985, 85355293, 179547, 21999275, 179547, 21999276, 179563, 143108913, 179563, 143108914, 179563, 391201547, 179563, 391201548, 180163, 7578238, 180163, 7578239, 180222, 6076323, 180222, 24642472, 180241, 500046589, 180241, 500562971, 180241, 500562972, 180250, 371542986, 180250, 371542987, 180275, 10578469, 180275, 10578470, 180275, 10583104, 180275, 10583105)),
    reverseFilter = cms.untracked.bool(False)
)


process.jetsPtGt1 = cms.EDFilter("CandViewSelector",
    src = cms.InputTag("patJets"),
    cut = cms.string('(neutralHadronEnergy())/(correctedJet(0).pt()/pt()*energy())  < 0.99 && (neutralEmEnergy()/(correctedJet(0).pt()/pt()*energy())) < 0.99 && (nConstituents()) > 1    && ((abs(eta())  < 2.4  && chargedHadronEnergy()/(correctedJet(0).pt()/pt()*energy()) > 0 && chargedEmEnergy()      /(correctedJet(0).pt()/pt()*energy()) < 0.99 && chargedMultiplicity() > 0)   ||  abs(eta())  > 2.4)  && pt()>1')
)


process.jetsPtGt1CHS = cms.EDFilter("CandViewSelector",
    src = cms.InputTag("patJetsCHS"),
    cut = cms.string('(neutralHadronEnergy())/(correctedJet(0).pt()/pt()*energy())  < 0.99 && (neutralEmEnergy()/(correctedJet(0).pt()/pt()*energy())) < 0.99 && (nConstituents()) > 1    && ((abs(eta())  < 2.4  && chargedHadronEnergy()/(correctedJet(0).pt()/pt()*energy()) > 0 && chargedEmEnergy()      /(correctedJet(0).pt()/pt()*energy()) < 0.99 && chargedMultiplicity() > 0)   ||  abs(eta())  > 2.4)  && pt()>1')
)


process.muonSelSize = cms.EDFilter("CandidateSizeProducer",
    src = cms.InputTag("cmgMuonSel")
)


process.mvaNonTrigV0 = cms.EDFilter("ElectronIdMVAProducer",
    electronTag = cms.InputTag("gsfElectrons"),
    mvaWeightFile = cms.vstring('EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat1.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat2.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat3.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat4.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat5.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_NonTrigV0_Cat6.weights.xml'),
    Trig = cms.bool(False),
    reducedEBRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    vertexTag = cms.InputTag("offlinePrimaryVertices"),
    reducedEERecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    method = cms.string('BDT'),
    verbose = cms.untracked.bool(False)
)


process.mvaTrigV0 = cms.EDFilter("ElectronIdMVAProducer",
    electronTag = cms.InputTag("gsfElectrons"),
    mvaWeightFile = cms.vstring('EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat1.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat2.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat3.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat4.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat5.weights.xml', 
        'EGamma/EGammaAnalysisTools/data/Electrons_BDTG_TrigV0_Cat6.weights.xml'),
    Trig = cms.bool(True),
    reducedEBRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    vertexTag = cms.InputTag("offlinePrimaryVertices"),
    reducedEERecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    method = cms.string('BDT'),
    verbose = cms.untracked.bool(False)
)


process.nJetsPtGt1 = cms.EDFilter("CandidateSizeProducer",
    src = cms.InputTag("jetsPtGt1")
)


process.nJetsPtGt1CHS = cms.EDFilter("CandidateSizeProducer",
    src = cms.InputTag("jetsPtGt1CHS")
)


process.noscraping = cms.EDFilter("FilterOutScraping",
    debugOn = cms.untracked.bool(False),
    thresh = cms.untracked.double(0.25),
    numtrack = cms.untracked.uint32(10),
    applyfilter = cms.untracked.bool(True)
)


process.pfAllChargedHadrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(211, -211, 321, -321, 999211, 
        2212, -2212),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllChargedParticles = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(211, -211, 321, -321, 999211, 
        2212, -2212, 11, -11, 13, 
        -13),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllElectrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(11, -11),
    src = cms.InputTag("pfNoMuon")
)


process.pfAllMuons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(-13, 13),
    src = cms.InputTag("pfNoPileUp")
)


process.pfAllNeutralHadrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllNeutralHadronsAndPhotons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(22, 111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllPhotons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(22),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfJetSelSize = cms.EDFilter("CandidateSizeProducer",
    src = cms.InputTag("cmgPFJetSel")
)


process.pfJetsForHPSTau = cms.EDFilter("GenericPFJetSelector",
    src = cms.InputTag("ak5PFJets"),
    cut = cms.string('pt()>15.0 && abs(eta())<3.0')
)


process.pfPileUpAllChargedParticles = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(211, -211, 321, -321, 999211, 
        2212, -2212, 11, -11, 13, 
        -13),
    src = cms.InputTag("pfPileUpIso")
)


process.pfSelectedPhotons = cms.EDFilter("GenericPFCandidateSelector",
    src = cms.InputTag("pfAllPhotons"),
    cut = cms.string('pt>2&&abs(eta)<2.5')
)


process.primaryVertexFilter = cms.EDFilter("VertexSelector",
    filter = cms.bool(True),
    src = cms.InputTag("offlinePrimaryVertices"),
    cut = cms.string('!isFake && ndof > 4 && abs(z) <= 24 && position.Rho <= 2')
)


process.recoTauPileUpVertices = cms.EDFilter("RecoTauPileUpVertexSelector",
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices"),
    minTrackSumPt = cms.double(5)
)


process.selectedPatElectrons = cms.EDFilter("PATElectronSelector",
    src = cms.InputTag("patElectrons"),
    cut = cms.string('pt()>5')
)


process.selectedPatJets = cms.EDFilter("PATJetSelector",
    src = cms.InputTag("patJets"),
    cut = cms.string('pt()>10')
)


process.selectedPatJetsCHS = cms.EDFilter("PATJetSelector",
    src = cms.InputTag("patJetsCHS"),
    cut = cms.string('pt()>10')
)


process.selectedPatMuons = cms.EDFilter("PATMuonSelector",
    src = cms.InputTag("patMuons"),
    cut = cms.string('pt()>3')
)


process.selectedPatTaus = cms.EDFilter("PATTauSelector",
    src = cms.InputTag("patTaus"),
    cut = cms.string('pt()>15 && tauID("decayModeFinding")')
)


process.selectedPfJets = cms.EDFilter("GenericPFJetSelector",
    src = cms.InputTag("pfJets"),
    cut = cms.string('')
)


process.tauGenJetsSelectorAllHadrons = cms.EDFilter("TauGenJetDecayModeSelector",
    filter = cms.bool(False),
    src = cms.InputTag("tauGenJets"),
    select = cms.vstring('oneProng0Pi0', 
        'oneProng1Pi0', 
        'oneProng2Pi0', 
        'oneProngOther', 
        'threeProng0Pi0', 
        'threeProng1Pi0', 
        'threeProngOther', 
        'rare')
)


process.tauSelSize = cms.EDFilter("CandidateSizeProducer",
    src = cms.InputTag("cmgTauSel")
)


process.totalKinematicsFilter = cms.EDFilter("TotalKinematicsFilter",
    src = cms.InputTag("genParticles"),
    tolerance = cms.double(0.5),
    verbose = cms.untracked.bool(False)
)


process.trackingFailureFilter = cms.EDFilter("TrackingFailureFilter",
    JetSource = cms.InputTag("ak5PFJets"),
    MinSumPtOverHT = cms.double(0.1),
    TrackSource = cms.InputTag("generalTracks"),
    DxyTrVtxMax = cms.double(0.2),
    taggingMode = cms.bool(False),
    debug = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    VertexSource = cms.InputTag("goodVertices")
)


process.vertexSize = cms.EDFilter("VertexSizeProducer",
    src = cms.InputTag("offlinePrimaryVertices")
)


process.vetoElectrons5 = cms.EDFilter("GsfElectronRefSelector",
    src = cms.InputTag("gsfElectrons"),
    cut = cms.string('pt>5')
)


process.vetoElectrons7 = cms.EDFilter("GsfElectronRefSelector",
    src = cms.InputTag("gsfElectrons"),
    cut = cms.string('pt>7')
)


process.vetoMuons = cms.EDFilter("MuonRefSelector",
    src = cms.InputTag("muons"),
    cut = cms.string('isGlobalMuon &&pt>5')
)


process.MHTPFJet30Histograms = cms.EDAnalyzer("GenericBaseMETHistograms",
    histograms = cms.untracked.PSet(
        met = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1000),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        )),
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        sumEt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2000),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('sumEt()')
        ))
    ),
    inputCollection = cms.InputTag("cmgMHTPFJet30")
)


process.baseMETHistograms = cms.EDAnalyzer("GenericBaseMETHistograms",
    histograms = cms.untracked.PSet(
        met = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1000),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        )),
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        sumEt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2000),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('sumEt()')
        ))
    ),
    inputCollection = cms.InputTag("cmgMETPFCandidates")
)


process.cmgDiElectronHistograms = cms.EDAnalyzer("CmgDiElectronHistograms",
    histograms = cms.untracked.PSet(
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.0),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(-3.0),
            var = cms.untracked.string('eta()')
        )),
        mass = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('mass()')
        )),
        pt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ))
    ),
    inputCollection = cms.InputTag("cmgDiElectronSel")
)


process.cmgDiMuonHistograms = cms.EDAnalyzer("CmgDiMuonHistograms",
    histograms = cms.untracked.PSet(
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.0),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(-3.0),
            var = cms.untracked.string('eta()')
        )),
        mass = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('mass()')
        )),
        pt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ))
    ),
    inputCollection = cms.InputTag("cmgDiMuonSel")
)


process.cmgElectronHistograms = cms.EDAnalyzer("CmgElectronHistograms",
    histograms = cms.untracked.PSet(
        mva = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2.0),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(-1.0),
            var = cms.untracked.string('mva()')
        )),
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.0),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(-3.0),
            var = cms.untracked.string('eta()')
        )),
        pt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ))
    ),
    inputCollection = cms.InputTag("cmgElectronSel")
)


process.cmgGenericPOHistograms = cms.EDAnalyzer("GenericPOHistograms",
    histograms = cms.untracked.PSet(
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#phi'),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        pt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(500),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('p_{T}'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        )),
        pt_eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ), 
            cms.untracked.PSet(
                high = cms.untracked.double(2.5),
                nbins = cms.untracked.int32(10),
                low = cms.untracked.double(0),
                var = cms.untracked.string('abs(eta())')
            )),
        energy = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1000),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('E'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('energy()')
        )),
        charge = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2.5),
            nbins = cms.untracked.int32(5),
            title = cms.untracked.string('charge'),
            low = cms.untracked.double(-2.5),
            var = cms.untracked.string('charge()')
        )),
        eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(5),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#eta'),
            low = cms.untracked.double(-5),
            var = cms.untracked.string('eta()')
        )),
        mass = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(150),
            nbins = cms.untracked.int32(150),
            title = cms.untracked.string('M'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('mass()')
        ))
    ),
    inputCollection = cms.InputTag("cmgPFJetSel")
)


process.cmgMuonHistograms = cms.EDAnalyzer("CmgMuonHistograms",
    histograms = cms.untracked.PSet(
        absIso = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(50),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('absIso()')
        )),
        numberOfMatches = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(10),
            nbins = cms.untracked.int32(10),
            low = cms.untracked.double(0),
            var = cms.untracked.string('numberOfMatches()')
        )),
        dxy = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('abs(dxy())')
        )),
        normalizedChi2 = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(15),
            nbins = cms.untracked.int32(15),
            title = cms.untracked.string('Normalized #chi^{2}'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('normalizedChi2()')
        )),
        numberOfValidTrackerHits = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(50),
            nbins = cms.untracked.int32(25),
            low = cms.untracked.double(0),
            var = cms.untracked.string('numberOfValidTrackerHits()')
        )),
        numberOfValidMuonHits = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(50),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(0),
            var = cms.untracked.string('numberOfValidMuonHits()')
        )),
        dz = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('abs(dz())')
        )),
        numberOfValidPixelHits = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(15),
            nbins = cms.untracked.int32(15),
            low = cms.untracked.double(0),
            var = cms.untracked.string('numberOfValidPixelHits()')
        )),
        relIso = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('relIso()')
        ))
    ),
    inputCollection = cms.InputTag("cmgMuonSel")
)


process.cmgPhotonHistograms = cms.EDAnalyzer("CmgPhotonHistograms",
    histograms = cms.untracked.PSet(
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#phi'),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.0),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#eta'),
            low = cms.untracked.double(-3.0),
            var = cms.untracked.string('eta()')
        )),
        pt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('p_{T}'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        )),
        pt_eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('p_{T}'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ), 
            cms.untracked.PSet(
                high = cms.untracked.double(2.5),
                nbins = cms.untracked.int32(10),
                title = cms.untracked.string('|#eta|'),
                low = cms.untracked.double(0),
                var = cms.untracked.string('abs(eta())')
            ))
    ),
    inputCollection = cms.InputTag("cmgPhoton")
)


process.cmgTauHistograms = cms.EDAnalyzer("CmgTauHistograms",
    histograms = cms.untracked.PSet(
        pt_eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ), 
            cms.untracked.PSet(
                high = cms.untracked.double(2.5),
                nbins = cms.untracked.int32(10),
                low = cms.untracked.double(0),
                var = cms.untracked.string('abs(eta())')
            ))
    ),
    inputCollection = cms.InputTag("cmgTauSel")
)


process.cutSummaryElectron = cms.EDAnalyzer("CutSummaryAnalyzer",
    inputCollection = cms.InputTag("cmgElectronSel")
)


process.cutSummaryMuon = cms.EDAnalyzer("CutSummaryAnalyzer",
    inputCollection = cms.InputTag("cmgMuonSel")
)


process.cutSummaryPFJet = cms.EDAnalyzer("CutSummaryAnalyzer",
    inputCollection = cms.InputTag("cmgPFJetSel")
)


process.cutSummaryTau = cms.EDAnalyzer("CutSummaryAnalyzer",
    inputCollection = cms.InputTag("cmgTauSel")
)


process.dump = cms.EDAnalyzer("EventContentAnalyzer")


process.listParticles = cms.EDAnalyzer("ParticleListDrawer",
    printVertex = cms.untracked.bool(False),
    src = cms.InputTag("genParticlesPruned"),
    maxEventsToPrint = cms.untracked.int32(1)
)


process.muonLorentzVector = cms.EDAnalyzer("GenericPOHistograms",
    histograms = cms.untracked.PSet(
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#phi'),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        pt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(500),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('p_{T}'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        )),
        pt_eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ), 
            cms.untracked.PSet(
                high = cms.untracked.double(2.5),
                nbins = cms.untracked.int32(10),
                low = cms.untracked.double(0),
                var = cms.untracked.string('abs(eta())')
            )),
        energy = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1000),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('E'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('energy()')
        )),
        charge = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2.5),
            nbins = cms.untracked.int32(5),
            title = cms.untracked.string('charge'),
            low = cms.untracked.double(-2.5),
            var = cms.untracked.string('charge()')
        )),
        eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(5),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#eta'),
            low = cms.untracked.double(-5),
            var = cms.untracked.string('eta()')
        )),
        mass = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(150),
            nbins = cms.untracked.int32(150),
            title = cms.untracked.string('M'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('mass()')
        ))
    ),
    inputCollection = cms.InputTag("cmgMuonSel")
)


process.patMETHistograms = cms.EDAnalyzer("GenericPatMETHistograms",
    histograms = cms.untracked.PSet(
        met = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1000),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        )),
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        sumEt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2000),
            nbins = cms.untracked.int32(100),
            low = cms.untracked.double(0),
            var = cms.untracked.string('sumEt()')
        ))
    ),
    inputCollection = cms.InputTag("patMETsAK5")
)


process.pfJetHistograms = cms.EDAnalyzer("PFJetHistogramsAnalyzer",
    inputCollection = cms.InputTag("cmgPFJetSel")
)


process.pfJetLorentzVector = cms.EDAnalyzer("GenericPOHistograms",
    histograms = cms.untracked.PSet(
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#phi'),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        pt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(500),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('p_{T}'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        )),
        pt_eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ), 
            cms.untracked.PSet(
                high = cms.untracked.double(2.5),
                nbins = cms.untracked.int32(10),
                low = cms.untracked.double(0),
                var = cms.untracked.string('abs(eta())')
            )),
        energy = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1000),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('E'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('energy()')
        )),
        charge = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2.5),
            nbins = cms.untracked.int32(5),
            title = cms.untracked.string('charge'),
            low = cms.untracked.double(-2.5),
            var = cms.untracked.string('charge()')
        )),
        eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(5),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#eta'),
            low = cms.untracked.double(-5),
            var = cms.untracked.string('eta()')
        )),
        mass = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(150),
            nbins = cms.untracked.int32(150),
            title = cms.untracked.string('M'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('mass()')
        ))
    ),
    inputCollection = cms.InputTag("cmgPFJetSel")
)


process.tauLorentzVector = cms.EDAnalyzer("GenericPOHistograms",
    histograms = cms.untracked.PSet(
        phi = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(3.15),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#phi'),
            low = cms.untracked.double(-3.15),
            var = cms.untracked.string('phi()')
        )),
        pt = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(500),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('p_{T}'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        )),
        pt_eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(200),
            nbins = cms.untracked.int32(50),
            low = cms.untracked.double(0),
            var = cms.untracked.string('pt()')
        ), 
            cms.untracked.PSet(
                high = cms.untracked.double(2.5),
                nbins = cms.untracked.int32(10),
                low = cms.untracked.double(0),
                var = cms.untracked.string('abs(eta())')
            )),
        energy = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(1000),
            nbins = cms.untracked.int32(100),
            title = cms.untracked.string('E'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('energy()')
        )),
        charge = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(2.5),
            nbins = cms.untracked.int32(5),
            title = cms.untracked.string('charge'),
            low = cms.untracked.double(-2.5),
            var = cms.untracked.string('charge()')
        )),
        eta = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(5),
            nbins = cms.untracked.int32(50),
            title = cms.untracked.string('#eta'),
            low = cms.untracked.double(-5),
            var = cms.untracked.string('eta()')
        )),
        mass = cms.untracked.VPSet(cms.untracked.PSet(
            high = cms.untracked.double(150),
            nbins = cms.untracked.int32(150),
            title = cms.untracked.string('M'),
            low = cms.untracked.double(0),
            var = cms.untracked.string('mass()')
        ))
    ),
    inputCollection = cms.InputTag("cmgTauSel")
)


process.out = cms.OutputModule("PoolOutputModule",
    fileName = cms.untracked.string('patTuple.root'),
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('p')
    ),
    outputCommands = cms.untracked.vstring('keep *_selectedPatPhotons*_*_*', 
        'keep *_selectedPatElectrons*_*_*', 
        'keep *_selectedPatMuons*_*_*', 
        'keep *_selectedPatTaus*_*_*', 
        'keep *_selectedPatJets*_*_*', 
        'drop *_selectedPatJets_pfCandidates_*', 
        'drop *_*PF_caloTowers_*', 
        'drop *_*JPT_pfCandidates_*', 
        'drop *_*Calo_pfCandidates_*', 
        'keep *_patMETs*_*_*', 
        'keep *_selectedPatPFParticles*_*_*', 
        'keep *_selectedPatTrackCands*_*_*', 
        'keep patTriggerAlgorithms_patTrigger_*_*', 
        'keep patTriggerConditions_patTrigger_*_*', 
        'keep patTriggerObjects_patTrigger_*_*', 
        'keep patTriggerFilters_patTrigger_*_*', 
        'keep patTriggerPaths_patTrigger_*_*', 
        'keep *_patTriggerEvent_*_*', 
        'keep patTriggerObjectStandAlones_patTrigger_*_*', 
        'keep patTriggerObjectStandAlonesedmAssociation_*_*_*', 
        'keep *_allConversions_*_*', 
        'keep patConversions_patConversions_*_*', 
        'drop patTriggerObjectStandAlonesedmAssociation_*_*_*', 
        'keep *_selectedPatTaus_*_*', 
        'keep *_selectedPatTausAK5*_*_*', 
        'drop *_selectedPatMuonsAK5NoPUSub_*_*', 
        'drop *_selectedPatElectronsAK5NoPUSub_*_*', 
        'drop CaloTowers_*_*_*', 
        'drop patPFParticles_*_*_*', 
        'keep recoVertexs_*_*_*', 
        'keep recoPFCandidates_*_*_RECO', 
        'drop recoPFCandidates_*_*_PAT', 
        'keep recoPFCandidates_pfNoPileUp_*_*', 
        'keep recoGenParticles_*_*_*', 
        'keep recoBeamSpot_*_*_*', 
        'keep L1GlobalTriggerObjectMapRecord_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep *_hltTriggerSummaryAOD_*_*', 
        'drop recoVertexs_goodOfflinePrimaryVerticesLC_*_*', 
        'keep *_PFMETSignificance*_*_*', 
        'keep recoPFMETs_pfMetForRegression__*', 
        'keep recoPFMETs_nopuMet__*', 
        'keep recoPFMETs_puMet__*', 
        'keep recoPFMETs_pcMet__*', 
        'keep recoPFMETs_tkMet__*', 
        'keep double_*_rho_*', 
        'drop recoGenJets_*Pat*_genJets_PAT', 
        'keep recoGenJets_ak5GenJetsNoNu_*_*', 
        'keep recoPFJets_ak5PFJetsCHSpruned_SubJets_*', 
        'keep patJets_selectedPatJetsCHSpruned_*_*', 
        'keep *_puJetId_*_*', 
        'keep *_puJetIdCHS_*_*', 
        'keep *_phPFIsoDepositCharged_*_*', 
        'keep *_phPFIsoDepositChargedAll_*_*', 
        'keep *_phPFIsoDepositNeutral_*_*', 
        'keep *_phPFIsoDepositGamma_*_*', 
        'keep *_phPFIsoDepositPU_*_*', 
        'keep *_pfSelectedPhotons_*_*', 
        'keep *_particleFlow_*_PAT', 
        'keep *_cmgPFJetSel*_*_*', 
        'keep *_cmgPFJetLead*_*_*', 
        'keep *_cmgPFBaseJetLead*_*_*', 
        'keep cmgAbstractPhysicsObjects_*PF*Jet*_*_*', 
        'keep *_cmgPFJet*JetId*Failed_*_*', 
        'keep *_cmgStructuredPFJetSel*_*_*', 
        'keep  *_cmgPFMET*_*_*', 
        'drop *_cmgPFMETSel*_*_*', 
        'keep *_cmgMuonSel*_*_*', 
        'keep *_cmgDiMuonSel*_*_*', 
        'drop *_cmg*Muon*AK5NoPUSub*_*_*', 
        'keep *_cmgTauSel*_*_*', 
        'keep *_cmgDiTauSel*_*_*', 
        'keep *_cmgElectronSel*_*_*', 
        'keep *_cmgDiElectronSel*_*_*', 
        'drop *_cmg*Electron*AK5NoPUSub*_*_*', 
        'keep *_cmgPhotonSel*_*_*', 
        'keep *_cmgDiPhotonSel*_*_*', 
        'keep *_cmgWENuSel*_*_*', 
        'keep *_cmgWMuNuSel*_*_*', 
        'keep *_cmgWTauNu_*_*', 
        'keep *_vbfEventJetJetPF_*_*', 
        'keep *_cmgHemi_*_*', 
        'keep *_cmgDiHemi_*_*', 
        'keep *_deltaPhiJetMET_*_*', 
        'keep *_pfMetSignificance*_*_*', 
        'keep double_kt6PFJets*_rho_*', 
        'keep int_*Size_*_*', 
        'keep double_vertexWeight*_*_*', 
        'keep double_generator_weight_EmbeddedRECO', 
        'keep cmgBaseJets_*Calo*JetSel*_*_*', 
        'keep  *_cmgCaloMET*_*_*', 
        'keep *_vbfEventJetJetCalo*_*_*', 
        'drop patTaus_selectedPat*_*_*', 
        'drop patElectrons_*_*_*', 
        'keep patElectrons_patElectronsWithTrigger_*_*', 
        'drop patMuons_*_*_*', 
        'keep patMuons_patMuonsWithTrigger_*_*', 
        'drop patElectrons_*AK5NoPUSub_*_*', 
        'drop patMuons_*AK5NoPUSub_*_*', 
        'keep edmMergeableCounter_*_*_*', 
        'keep cmgPhotons_selectedPat*_*_*', 
        'keep recoVertexs_offlinePrimaryVertices_*_*', 
        'keep recoPFMETs_pfMetForRegression__*', 
        'keep double_*_rho_*', 
        'keep *_nJetsPtGt1_*_*', 
        'keep recoPFMETs_nopuMet__*', 
        'keep recoPFMETs_puMet__*', 
        'keep recoPFMETs_pcMet__*', 
        'keep recoPFMETs_tkMet__*', 
        'keep GenRunInfoProduct_*_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'drop cmgTriggerObjects_*_*_*', 
        'keep cmgTriggerObjects_cmgTriggerObjectSel_*_*', 
        'keep cmgTriggerObjects_cmgTriggerObjectListSel_*_*', 
        'keep *_TriggerResults_*_ANA', 
        'keep *_TriggerResults_*_PAT', 
        'keep recoGenParticles_genParticlesPruned_*_*', 
        'keep recoGenJetedmPtrcmgPhysicsObjectWithPtrs_genJetSel_*_*', 
        'keep recoGenJets_tauGenJetsSelectorAllHadrons*_*_PAT', 
        'keep *_addPileupInfo_*_*', 
        'keep GenEventInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep *_inconsistentMuons*_*_*', 
        'keep *_greedyMuons*_*_*', 
        'keep *_pfEventFilter*_*_*', 
        'drop recoPFCandidates_pfEventFilter*_AfterMuonCleaning_*', 
        'keep edmTriggerResults_TriggerResults_*_*', 
        'keep patTaus_selectedPatTaus_*_*')
)


process.outcmg = cms.OutputModule("PoolOutputModule",
    fileName = cms.untracked.string('cmgTuple.root'),
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('p')
    ),
    dropMetaData = cms.untracked.string('PRIOR'),
    outputCommands = cms.untracked.vstring('keep *_cmgPFJetSel*_*_*', 
        'keep *_cmgPFJetLead*_*_*', 
        'keep *_cmgPFBaseJetLead*_*_*', 
        'keep cmgAbstractPhysicsObjects_*PF*Jet*_*_*', 
        'keep *_cmgPFJet*JetId*Failed_*_*', 
        'keep *_cmgStructuredPFJetSel*_*_*', 
        'keep  *_cmgPFMET*_*_*', 
        'drop *_cmgPFMETSel*_*_*', 
        'keep *_cmgMuonSel*_*_*', 
        'keep *_cmgDiMuonSel*_*_*', 
        'drop *_cmg*Muon*AK5NoPUSub*_*_*', 
        'keep *_cmgTauSel*_*_*', 
        'keep *_cmgDiTauSel*_*_*', 
        'keep *_cmgElectronSel*_*_*', 
        'keep *_cmgDiElectronSel*_*_*', 
        'drop *_cmg*Electron*AK5NoPUSub*_*_*', 
        'keep *_cmgPhotonSel*_*_*', 
        'keep *_cmgDiPhotonSel*_*_*', 
        'keep *_cmgWENuSel*_*_*', 
        'keep *_cmgWMuNuSel*_*_*', 
        'keep *_cmgWTauNu_*_*', 
        'keep *_vbfEventJetJetPF_*_*', 
        'keep *_cmgHemi_*_*', 
        'keep *_cmgDiHemi_*_*', 
        'keep *_deltaPhiJetMET_*_*', 
        'keep *_pfMetSignificance*_*_*', 
        'keep double_kt6PFJets*_rho_*', 
        'keep int_*Size_*_*', 
        'keep double_vertexWeight*_*_*', 
        'keep double_generator_weight_EmbeddedRECO', 
        'keep cmgBaseJets_*Calo*JetSel*_*_*', 
        'keep  *_cmgCaloMET*_*_*', 
        'keep *_vbfEventJetJetCalo*_*_*', 
        'drop patTaus_selectedPat*_*_*', 
        'drop patElectrons_*_*_*', 
        'keep patElectrons_patElectronsWithTrigger_*_*', 
        'drop patMuons_*_*_*', 
        'keep patMuons_patMuonsWithTrigger_*_*', 
        'drop patElectrons_*AK5NoPUSub_*_*', 
        'drop patMuons_*AK5NoPUSub_*_*', 
        'keep edmMergeableCounter_*_*_*', 
        'keep cmgPhotons_selectedPat*_*_*', 
        'keep recoVertexs_offlinePrimaryVertices_*_*', 
        'keep recoPFMETs_pfMetForRegression__*', 
        'keep double_*_rho_*', 
        'keep *_nJetsPtGt1_*_*', 
        'keep recoPFMETs_nopuMet__*', 
        'keep recoPFMETs_puMet__*', 
        'keep recoPFMETs_pcMet__*', 
        'keep recoPFMETs_tkMet__*', 
        'keep GenRunInfoProduct_*_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'drop cmgTriggerObjects_*_*_*', 
        'keep cmgTriggerObjects_cmgTriggerObjectSel_*_*', 
        'keep cmgTriggerObjects_cmgTriggerObjectListSel_*_*', 
        'keep *_TriggerResults_*_ANA', 
        'keep *_TriggerResults_*_PAT', 
        'keep recoGenParticles_genParticlesPruned_*_*', 
        'keep recoGenJetedmPtrcmgPhysicsObjectWithPtrs_genJetSel_*_*', 
        'keep recoGenJets_tauGenJetsSelectorAllHadrons*_*_PAT', 
        'keep *_addPileupInfo_*_*', 
        'keep GenEventInfoProduct_*_*_*', 
        'keep LHEEventProduct_*_*_*', 
        'keep *_inconsistentMuons*_*_*', 
        'keep *_greedyMuons*_*_*', 
        'keep *_pfEventFilter*_*_*', 
        'drop recoPFCandidates_pfEventFilter*_AfterMuonCleaning_*', 
        'keep edmTriggerResults_TriggerResults_*_*')
)


process.patElectronTrackIsolation = cms.Sequence(process.eleIsoDepositTk+process.eleIsoFromDepsTk)


process.recoJetId = cms.Sequence(process.ak5JetID)


process.metSkimSequence = cms.Sequence(process.cmgPFMETCount)


process.patJetFlavourId = cms.Sequence(process.patJetPartons+process.patJetPartonAssociation+process.patJetFlavourAssociation)


process.hpsTancTauDiscriminantSequence = cms.Sequence(process.hpsTancTausDiscriminationByTancRaw+process.hpsTancTausDiscriminationByTanc+process.hpsTancTausDiscriminationByTancVLoose+process.hpsTancTausDiscriminationByTancLoose+process.hpsTancTausDiscriminationByTancMedium+process.hpsTancTausDiscriminationByTancTight+process.hpsTancTausDiscriminationByVLooseIsolation+process.hpsTancTausDiscriminationByLooseIsolation+process.hpsTancTausDiscriminationByMediumIsolation+process.hpsTancTausDiscriminationByTightIsolation+process.hpsTancTausDiscriminationByLooseElectronRejection+process.hpsTancTausDiscriminationByMediumElectronRejection+process.hpsTancTausDiscriminationByTightElectronRejection+process.hpsTancTausDiscriminationByLooseMuonRejection+process.hpsTancTausDiscriminationByTightMuonRejection)


process.btagging = cms.Sequence(process.impactParameterTagInfos+process.trackCountingHighEffBJetTags+process.trackCountingHighPurBJetTags+process.jetProbabilityBJetTags+process.jetBProbabilityBJetTags+process.secondaryVertexTagInfos+process.simpleSecondaryVertexHighEffBJetTags+process.simpleSecondaryVertexHighPurBJetTags+process.combinedSecondaryVertexBJetTags+process.combinedSecondaryVertexMVABJetTags+process.ghostTrackVertexTagInfos+process.ghostTrackBJetTags+process.softElectronCands+process.softElectronTagInfos+process.softElectronByIP3dBJetTags+process.softElectronByPtBJetTags+process.softMuonTagInfos+process.softMuonBJetTags+process.softMuonByIP3dBJetTags+process.softMuonByPtBJetTags)


process.jetIdSequence = cms.Sequence(process.cmgPFJetVeryLooseJetId99Failed+process.cmgPFJetVeryLooseJetId95Failed+process.cmgPFJetVeryLooseJetId95h0Failed+process.cmgPFJetVeryLooseJetId95gammaFailed+process.cmgPFJetLooseJetIdFailed+process.cmgPFJetMediumJetIdFailed+process.cmgPFJetTightJetIdFailed)


process.vertexWeightSequence = cms.Sequence(process.vertexWeightEPSJul8+process.vertexWeightLeptonPhoton+process.vertexWeightMay10ReReco+process.vertexWeightPromptRecov4+process.vertexWeight05AugReReco+process.vertexWeightPromptRecov6+process.vertexWeight2invfb+process.vertexWeight2011B+process.vertexWeight2011AB+process.vertexWeightFall11EPSJul8+process.vertexWeightFall11LeptonPhoton+process.vertexWeightFall11May10ReReco+process.vertexWeightFall11PromptRecov4+process.vertexWeightFall1105AugReReco+process.vertexWeightFall11PromptRecov6+process.vertexWeightFall112invfb+process.vertexWeightFall112011B+process.vertexWeightFall112011AB+process.vertexWeight3DMay10ReReco+process.vertexWeight3DPromptRecov4+process.vertexWeight3D05AugReReco+process.vertexWeight3DPromptRecov6+process.vertexWeight3D2invfb+process.vertexWeight3D2011B+process.vertexWeight3D2011AB+process.vertexWeight3DFall11May10ReReco+process.vertexWeight3DFall11PromptRecov4+process.vertexWeight3DFall1105AugReReco+process.vertexWeight3DFall11PromptRecov6+process.vertexWeight3DFall112invfb+process.vertexWeight3DFall112011B+process.vertexWeight3DFall112011AB+process.vertexWeightSummer12MCICHEPData)


process.makePatElectrons = cms.Sequence(process.electronMatch+process.patElectrons)


process.electronSkimSequence = cms.Sequence(process.cmgElectronCount+process.cmgDiElectronCount)


process.recoTauCommonSequence = cms.Sequence(process.ak5PFJetTracksAssociatorAtVertex+process.recoTauAK5PFJets08Region+process.recoTauPileUpVertices+process.pfRecoTauTagInfoProducer)


process.genJetsSequence = cms.Sequence(process.genJet+process.genJetSel)


process.recoAllGenJetsNoNu = cms.Sequence(process.sisCone5GenJetsNoNu+process.sisCone7GenJetsNoNu+process.kt4GenJetsNoNu+process.kt6GenJetsNoNu+process.iterativeCone5GenJetsNoNu+process.ak5GenJetsNoNu+process.ak7GenJetsNoNu+process.gk5GenJetsNoNu+process.gk7GenJetsNoNu+process.ca4GenJetsNoNu+process.ca6GenJetsNoNu)


process.tauSequence = cms.Sequence(process.cmgTau+process.cmgTauSel)


process.rhoSequence = cms.Sequence(process.kt6PFJetsForIso+process.kt6PFJetsCHSForIso+process.kt6PFJets+process.ak5PFJets)


process.photonSequence = cms.Sequence(process.cmgPhoton+process.cmgPhotonSel)


process.RunTanc = cms.Sequence(process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent+process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent+process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent+process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent)


process.hpsPFTauDiscriminationByChargedIsolationSeq = cms.Sequence(process.hpsPFTauDiscriminationByVLooseChargedIsolation+process.hpsPFTauDiscriminationByLooseChargedIsolation+process.hpsPFTauDiscriminationByMediumChargedIsolation+process.hpsPFTauDiscriminationByTightChargedIsolation)


process.patTriggerDefaultSequence = cms.Sequence(process.patTrigger+process.patTriggerEvent)


process.hpsTancTauInitialSequence = cms.Sequence(process.combinatoricRecoTausDiscriminationByLeadingPionPtCut+process.combinatoricRecoTausHPSSelector+process.hpsTancTausSansRefs+process.hpsTancTaus+process.hpsTancTausDiscriminationByLeadingTrackFinding+process.hpsTancTausDiscriminationByLeadingPionPtCut+process.hpsTancTausDiscriminationByLeadingTrackPtCut+process.hpsTancTausDiscriminationByDecayModeSelection)


process.jetMCSequence = cms.Sequence(process.patJetPartonMatch+process.patJetGenJetMatch)


process.jetCutSummarySequence = cms.Sequence(process.cutSummaryPFJet)


process.hpsPFTauDiscriminationByCombinedIsolationSeqDBSumPtCorr = cms.Sequence(process.hpsPFTauDiscriminationByVLooseCombinedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr)


process.patJetFlavourIdCHS = cms.Sequence(process.patJetPartonsCHS+process.patJetPartonAssociationCHS+process.patJetFlavourAssociationCHS)


process.patElectronsWithTriggerSequence = cms.Sequence(process.eleTriggerMatchHLT1+process.eleTriggerMatchHLT2+process.eleTriggerMatchHLT3+process.eleTriggerMatchHLT4+process.eleTriggerMatchHLT5+process.eleTriggerMatchHLT6+process.eleTriggerMatchHLT7+process.eleTriggerMatchHLT8+process.eleTriggerMatchHLT9+process.eleTriggerMatchHLT10+process.patElectronsWithTrigger)


process.pfSortByTypeSequence = cms.Sequence(process.pfAllNeutralHadrons+process.pfAllChargedHadrons+process.pfAllPhotons+process.pfAllChargedParticles+process.pfPileUpAllChargedParticles+process.pfAllNeutralHadronsAndPhotons)


process.genForPF2PATSequence = cms.Sequence(process.genParticlesForJetsNoNu+process.iterativeCone5GenJetsNoNu+process.ak5GenJetsNoNu+process.ak7GenJetsNoNu)


process.MetSignificanceSequence = cms.Sequence(process.pfNoJet+process.pfMetSignificance)


process.genSequence = cms.Sequence(process.genParticlesPruned+process.genJetsSequence+process.listParticles)


process.muonCutSummarySequence = cms.Sequence(process.cutSummaryMuon)


process.diElectronSequence = cms.Sequence(process.cmgDiElectron+process.cmgDiElectronSel)


process.btaggingCHS = cms.Sequence(process.impactParameterTagInfosCHS+process.trackCountingHighEffBJetTagsCHS+process.trackCountingHighPurBJetTagsCHS+process.jetProbabilityBJetTagsCHS+process.jetBProbabilityBJetTagsCHS+process.secondaryVertexTagInfosCHS+process.simpleSecondaryVertexHighEffBJetTagsCHS+process.simpleSecondaryVertexHighPurBJetTagsCHS+process.combinedSecondaryVertexBJetTagsCHS+process.combinedSecondaryVertexMVABJetTagsCHS+process.ghostTrackVertexTagInfosCHS+process.ghostTrackBJetTagsCHS+process.softElectronCandsCHS+process.softElectronTagInfosCHS+process.softElectronByIP3dBJetTagsCHS+process.softElectronByPtBJetTagsCHS+process.softMuonTagInfosCHS+process.softMuonBJetTagsCHS+process.softMuonByIP3dBJetTagsCHS+process.softMuonByPtBJetTagsCHS)


process.tauCutSummarySequence = cms.Sequence(process.cutSummaryTau)


process.muonHistogramSequence = cms.Sequence(process.cmgMuonHistograms+process.muonLorentzVector+process.cmgDiMuonHistograms)


process.patPFTauIsolation = cms.Sequence(process.tauIsoDepositPFCandidates+process.tauIsoDepositPFChargedHadrons+process.tauIsoDepositPFNeutralHadrons+process.tauIsoDepositPFGammas)


process.produceAndDiscriminateFixedConePFTaus = cms.Sequence(process.fixedConePFTauProducer+process.fixedConePFTauDiscriminationByLeadingTrackFinding+process.fixedConePFTauDiscriminationByLeadingTrackPtCut+process.fixedConePFTauDiscriminationByLeadingPionPtCut+process.fixedConePFTauDiscriminationByIsolation+process.fixedConePFTauDiscriminationByTrackIsolation+process.fixedConePFTauDiscriminationByECALIsolation+process.fixedConePFTauDiscriminationByIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationByTrackIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationByECALIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationAgainstElectron+process.fixedConePFTauDiscriminationAgainstMuon)


process.pfNoPileUpSequence = cms.Sequence(process.goodOfflinePrimaryVertices+process.pfPileUp+process.pfNoPileUp)


process.recoTauClassicFixedConeSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsRecoTauPiZeros+process.produceAndDiscriminateFixedConePFTaus)


process.PATCMGVertexSequence = cms.Sequence(process.particleFlow)


process.pfJetHistogramSequence = cms.Sequence(process.pfJetLorentzVector+process.pfJetHistograms)


process.pfElectronIsolationFromDepositsSequence = cms.Sequence(process.isoValElectronWithCharged+process.isoValElectronWithNeutral+process.isoValElectronWithPhotons)


process.MetRegressionSequence = cms.Sequence(process.pfMetForRegression+process.nopuMet+process.puMet+process.pcMet+process.tkMet)


process.PATCMGMetRegressionSequence = cms.Sequence(process.MetRegressionSequence)


process.patJetCorrections = cms.Sequence(process.patJetCorrFactors)


process.genJetParticles = cms.Sequence(process.genParticlesForJets)


process.tauHistogramSequence = cms.Sequence(process.cmgTauHistograms+process.tauLorentzVector)


process.patElectronEcalIsolation = cms.Sequence(process.eleIsoDepositEcalFromHits+process.eleIsoFromDepsEcalFromHitsByCrystal)


process.PATGenJetSequence = cms.Sequence(process.genParticlesForJetsNoNu+process.ak5GenJetsNoNu)


process.makePatMuons = cms.Sequence(process.muonMatch+process.patMuons)


process.patMETCorrections = cms.Sequence(process.metJESCorAK5CaloJet+process.metJESCorAK5CaloJetMuons)


process.hpsPFTauDiscriminationByIsolationSeq = cms.Sequence(process.hpsPFTauDiscriminationByVLooseIsolation+process.hpsPFTauDiscriminationByLooseIsolation+process.hpsPFTauDiscriminationByMediumIsolation+process.hpsPFTauDiscriminationByTightIsolation)


process.patTriggerMatchEmbedderDefaultSequence = cms.Sequence(process.cleanPatPhotonsTriggerMatch+process.cleanPatElectronsTriggerMatch+process.cleanPatMuonsTriggerMatch+process.cleanPatTausTriggerMatch+process.cleanPatJetsTriggerMatch+process.patMETsTriggerMatch)


process.PATCMGGenSequence = cms.Sequence(process.PATGenJetSequence+process.genSequence)


process.ak5JTA = cms.Sequence(process.ak5JetTracksAssociatorAtVertex+process.ak5JetTracksAssociatorAtCaloFace+process.ak5JetExtender)


process.patElectronHcalIsolation = cms.Sequence(process.eleIsoDepositHcalFromTowers+process.eleIsoFromDepsHcalFromTowers)


process.detMuonIsoDepositSequence = cms.Sequence(process.vetoMuons+process.vetoElectrons7+process.muIsoFromDepsTkOptimized)


process.recoGenJets = cms.Sequence(process.kt4GenJets+process.kt6GenJets+process.iterativeCone5GenJets+process.ak5GenJets+process.ak7GenJets)


process.caloJetSequence = cms.Sequence(process.cmgCaloBaseJet+process.cmgCaloBaseJetSel+process.cmgCaloBaseJetLead)


process.simpleEleIdSequence = cms.Sequence(process.simpleEleId95relIso+process.simpleEleId90relIso+process.simpleEleId85relIso+process.simpleEleId80relIso+process.simpleEleId70relIso+process.simpleEleId60relIso+process.simpleEleId95cIso+process.simpleEleId90cIso+process.simpleEleId85cIso+process.simpleEleId80cIso+process.simpleEleId70cIso+process.simpleEleId60cIso)


process.PATMetSequence = cms.Sequence(process.metJESCorAK5PFJet+process.patMETs+process.patMETsRaw)


process.PATCMGRhoSequence = cms.Sequence(process.kt6PFJetsForIso+process.kt6PFJetsCHSForIso+process.kt6PFJets+process.ak5PFJets)


process.patElectronIsolation = cms.Sequence(process.patElectronTrackIsolation+process.patElectronEcalIsolation+process.patElectronHcalIsolation)


process.pfNoPileUpIsoSequence = cms.Sequence(process.pfPileUpIso+process.pfNoPileUpIso)


process.produceHPSPFTaus = cms.Sequence(process.hpsSelectionDiscriminator+process.hpsPFTauProducerSansRefs+process.hpsPFTauProducer)


process.PATTriggerSequence = cms.Sequence(process.patTriggerDefaultSequence)


process.pfJetSequence = cms.Sequence(process.cmgPUJetMva+process.cmgPFJet+process.cmgPFJetSel+process.cmgPFJetType1MET+process.jetIdSequence)


process.pfElectronIsoDepositsSequence = cms.Sequence(process.isoDepElectronWithCharged+process.isoDepElectronWithNeutral+process.isoDepElectronWithPhotons)


process.pfSimpleMetSequence = cms.Sequence(process.cmgPFMET+process.cmgPFMETSel+process.cmgPFMETType1Corrected)


process.electronCutSummarySequence = cms.Sequence(process.cutSummaryElectron)


process.produceAndDiscriminateShrinkingConePFTaus = cms.Sequence(process.shrinkingConePFTauProducerSansRefs+process.shrinkingConePFTauProducer+process.shrinkingConePFTauDiscriminationByLeadingTrackFinding+process.shrinkingConePFTauDiscriminationByLeadingTrackPtCut+process.shrinkingConePFTauDiscriminationByLeadingPionPtCut+process.shrinkingConePFTauDiscriminationByIsolation+process.shrinkingConePFTauDiscriminationByTrackIsolation+process.shrinkingConePFTauDiscriminationByECALIsolation+process.shrinkingConePFTauDiscriminationByIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationAgainstElectron+process.shrinkingConePFTauDiscriminationAgainstMuon)


process.triggerSequence = cms.Sequence(process.cmgTriggerObject+process.cmgTriggerObjectSel+process.cmgTriggerObjectCount+process.cmgTriggerObjectList+process.cmgTriggerObjectListSel+process.cmgTriggerObjectListCount)


process.collectionSizeSequence = cms.Sequence(process.vertexSize+process.muonSelSize+process.electronSelSize+process.tauSelSize+process.pfJetSelSize)


process.patMuonsWithTriggerSequence = cms.Sequence(process.muonMatchHLTL3+process.muonMatchHLTL3T+process.patMuonsWithTrigger)


process.recoAllGenJets = cms.Sequence(process.sisCone5GenJets+process.sisCone7GenJets+process.kt4GenJets+process.kt6GenJets+process.iterativeCone5GenJets+process.ak5GenJets+process.ak7GenJets+process.gk5GenJets+process.gk7GenJets+process.ca4GenJets+process.ca6GenJets)


process.photonPFIsolationDepositsSequence = cms.Sequence(process.phPFIsoDepositCharged+process.phPFIsoDepositChargedAll+process.phPFIsoDepositGamma+process.phPFIsoDepositNeutral+process.phPFIsoDepositPU)


process.hpsPFTauDiscriminationByMVAIsolationSeq = cms.Sequence(process.kt6PFJetsForRhoComputationVoronoi+process.hpsPFTauDiscriminationByIsolationMVAraw+process.hpsPFTauDiscriminationByLooseIsolationMVA+process.hpsPFTauDiscriminationByMediumIsolationMVA+process.hpsPFTauDiscriminationByTightIsolationMVA)


process.diMuonSequence = cms.Sequence(process.cmgDiMuon+process.cmgDiMuonSel)


process.hpsPFTauDiscriminationByIsolationSeqDBSumPtCorr = cms.Sequence(process.hpsPFTauDiscriminationByVLooseIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByLooseIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByMediumIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByTightIsolationDBSumPtCorr)


process.caloMetSequence = cms.Sequence(process.cmgCaloMET+process.cmgMHTCaloJet30)


process.pfParticleSelectionSequence = cms.Sequence(process.pfNoPileUpIsoSequence+process.pfSortByTypeSequence)


process.jetIdSequenceCHS = cms.Sequence(process.cmgPFJetVeryLooseJetId99FailedCHS+process.cmgPFJetVeryLooseJetId95FailedCHS+process.cmgPFJetVeryLooseJetId95h0FailedCHS+process.cmgPFJetVeryLooseJetId95gammaFailedCHS+process.cmgPFJetLooseJetIdFailedCHS+process.cmgPFJetMediumJetIdFailedCHS+process.cmgPFJetTightJetIdFailedCHS)


process.pfMETHistogramSequence = cms.Sequence(process.MHTPFJet30Histograms+process.patMETHistograms)


process.electronIDSequence = cms.Sequence(process.eidVeryLoose+process.eidLoose+process.eidMedium+process.eidTight+process.eidSuperTight)


process.muonSkimSequence = cms.Sequence(process.cmgMuonCount+process.cmgDiMuonCount)


process.tauSkimSequence = cms.Sequence(process.cmgTauCount)


process.jetMCSequenceCHS = cms.Sequence(process.patJetPartonMatchCHS+process.patJetGenJetMatchCHS)


process.jetSkimSequence = cms.Sequence(process.cmgPFJetCount)


process.muonSequence = cms.Sequence(process.cmgMuon+process.cmgMuonSel+process.diMuonSequence)


process.electronHistogramSequence = cms.Sequence(process.cmgElectronHistograms+process.cmgDiElectronHistograms)


process.hiRecoGenJets = cms.Sequence(process.iterativeCone5HiGenJets+process.iterativeCone7HiGenJets+process.ak5HiGenJets+process.ak7HiGenJets+process.kt4HiGenJets+process.kt6HiGenJets)


process.MetType1Corrections = cms.Sequence(process.metJESCorIC5CaloJet+process.metJESCorKT4CaloJet+process.metJESCorKT6CaloJet+process.metJESCorAK5CaloJet+process.metJESCorAK7CaloJet+process.metJESCorSC5CaloJet+process.metJESCorSC7CaloJet)


process.pfJetSequenceCHS = cms.Sequence(process.cmgPUJetMvaCHS+process.cmgPFJetCHS+process.cmgPFJetSelCHS+process.cmgPFJetType1METCHS+process.jetIdSequenceCHS)


process.recoTauHPSTancSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsLegacyHPSPiZeros+process.combinatoricRecoTaus+process.hpsTancTauInitialSequence+process.hpsTancTauDiscriminantSequence)


process.recoAllGenJetsNoMuNoNu = cms.Sequence(process.sisCone5GenJetsNoMuNoNu+process.sisCone7GenJetsNoMuNoNu+process.kt4GenJetsNoMuNoNu+process.kt6GenJetsNoMuNoNu+process.iterativeCone5GenJetsNoMuNoNu+process.ak5GenJetsNoMuNoNu+process.ak7GenJetsNoMuNoNu+process.gk5GenJetsNoMuNoNu+process.gk7GenJetsNoMuNoNu+process.ca4GenJetsNoMuNoNu+process.ca6GenJetsNoMuNoNu)


process.trackingFailureSequence = cms.Sequence(process.goodVertices+process.trackingFailureFilter)


process.detElectronIsoDepositSequence = cms.Sequence(process.vetoMuons+process.vetoElectrons5+process.vetoElectrons7+process.eleIsoDepositTk+process.eleIsoFromDepsTkOptimized5+process.eleIsoFromDepsTkOptimized7)


process.jetSequenceCHS = cms.Sequence(process.pfJetSequenceCHS)


process.mvaIDSequence = cms.Sequence(process.mvaTrigV0+process.mvaNonTrigV0)


process.muonPFIsolationDepositsSequence = cms.Sequence(process.muPFIsoDepositCharged+process.muPFIsoDepositChargedAll+process.muPFIsoDepositGamma+process.muPFIsoDepositNeutral+process.muPFIsoDepositPU)


process.electronPFIsolationDepositsSequence = cms.Sequence(process.elPFIsoDepositCharged+process.elPFIsoDepositChargedAll+process.elPFIsoDepositGamma+process.elPFIsoDepositNeutral+process.elPFIsoDepositPU)


process.produceShrinkingConeDiscriminationByTauNeuralClassifier = cms.Sequence(process.shrinkingConePFTauDiscriminationByTaNC+process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent+process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent+process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent+process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent)


process.PATJetSequence = cms.Sequence(process.ak5PFJetsSel+process.jetMCSequence+process.ak5JetTracksAssociatorAtVertex+process.btagging+process.patJetCorrFactors+process.patJetFlavourId+process.patJets+process.jetsPtGt1+process.nJetsPtGt1+process.selectedPatJets+process.puJetId)


process.triggerMatchingDefaultSequence = cms.Sequence(process.cleanMuonTriggerMatchHLTMu20+process.cleanMuonTriggerMatchHLTDoubleMu6+process.cleanPhotonTriggerMatchHLTPhoton26IsoVLPhoton18+process.cleanElectronTriggerMatchHLTEle27CaloIdVTCaloIsoTTrkIdTTrkIsoT+process.cleanTauTriggerMatchHLTDoubleIsoPFTau20Trk5+process.cleanJetTriggerMatchHLTJet240+process.metTriggerMatchHLTMET100+process.cleanMuonTriggerMatchHLTMu17CentralJet30+process.cleanJetTriggerMatchHLTMu17CentralJet30)


process.recoTauClassicShrinkingConeSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsRecoTauPiZeros+process.produceAndDiscriminateShrinkingConePFTaus)


process.PATCMGPileUpSubtractionSequence = cms.Sequence(process.pfNoPileUpSequence+process.pfParticleSelectionSequence)


process.pfMetSequence = cms.Sequence(process.pfSimpleMetSequence+process.cmgMHTPFJet30+process.cmgMHTPFJet30Sel)


process.PATJetSequenceCHS = cms.Sequence(process.ak5PFJetsSelCHS+process.jetMCSequenceCHS+process.ak5JetTracksAssociatorAtVertexCHS+process.btaggingCHS+process.patJetCorrFactorsCHS+process.patJetFlavourIdCHS+process.patJetsCHS+process.jetsPtGt1CHS+process.nJetsPtGt1CHS+process.selectedPatJetsCHS+process.puJetIdCHS)


process.muonPFIsolationSequence = cms.Sequence(process.muonPFIsolationDepositsSequence+process.muPFIsoValueCharged03+process.muPFIsoValueChargedAll03+process.muPFIsoValueGamma03+process.muPFIsoValueNeutral03+process.muPFIsoValuePU03+process.muPFIsoValueCharged04+process.muPFIsoValueChargedAll04+process.muPFIsoValueGamma04+process.muPFIsoValueNeutral04+process.muPFIsoValuePU04)


process.PATCMGJetCHSSequence = cms.Sequence(process.ak5PFJetsCHS+process.PATJetSequenceCHS+process.jetSequenceCHS+process.cmgPFBaseJetAllCHS+process.cmgPFBaseJetLeadCHS)


process.patElectronIDSequence = cms.Sequence(process.mvaIDSequence+process.simpleEleIdSequence+process.electronIDSequence)


process.recoTauClassicShrinkingConeMVASequence = cms.Sequence(process.produceShrinkingConeDiscriminationByTauNeuralClassifier)


process.pfMuonIsolationSequence = cms.Sequence(process.muonPFIsolationSequence)


process.jetSequence = cms.Sequence(process.pfJetSequence)


process.PATPhotonSequence = cms.Sequence(process.pfSelectedPhotons+process.photonPFIsolationDepositsSequence)


process.cutSummarySequence = cms.Sequence(process.jetCutSummarySequence+process.muonCutSummarySequence+process.electronCutSummarySequence+process.tauCutSummarySequence)


process.patPFCandidateIsoDepositSelection = cms.Sequence(process.pfNoPileUpIsoSequence+process.pfSortByTypeSequence)


process.metNoiseCleaning = cms.Sequence(process.primaryVertexFilter+process.noscraping+process.CSCTightHaloFilter+process.HBHENoiseFilter+process.hcalLaserEventFilter+process.EcalDeadCellTriggerPrimitiveFilter+process.trackingFailureSequence)


process.PATCMGMetSequence = cms.Sequence(process.PATMetSequence+process.cmgPFMET+process.cmgPFMETRaw)


process.produceAndDiscriminateHPSPFTaus = cms.Sequence(process.produceHPSPFTaus+process.hpsPFTauDiscriminationByDecayModeFinding+process.hpsPFTauDiscriminationByChargedIsolationSeq+process.hpsPFTauDiscriminationByIsolationSeq+process.hpsPFTauDiscriminationByIsolationSeqDBSumPtCorr+process.hpsPFTauDiscriminationByMVAIsolationSeq+process.hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByRawChargedIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByRawGammaIsolationDBSumPtCorr+process.hpsPFTauDiscriminationByCombinedIsolationSeqDBSumPtCorr+process.hpsPFTauDiscriminationByLooseElectronRejection+process.hpsPFTauDiscriminationByMediumElectronRejection+process.hpsPFTauDiscriminationByTightElectronRejection+process.hpsPFTauDiscriminationByMVAElectronRejection+process.hpsPFTauDiscriminationByMVA2rawElectronRejection+process.hpsPFTauDiscriminationByMVA2VLooseElectronRejection+process.hpsPFTauDiscriminationByMVA2LooseElectronRejection+process.hpsPFTauDiscriminationByMVA2MediumElectronRejection+process.hpsPFTauDiscriminationByMVA2TightElectronRejection+process.hpsPFTauDiscriminationByLooseMuonRejection+process.hpsPFTauDiscriminationByMediumMuonRejection+process.hpsPFTauDiscriminationByTightMuonRejection)


process.PATCMGTriggerSequence = cms.Sequence(process.PATTriggerSequence+process.triggerSequence)


process.patJetMETCorrections = cms.Sequence(process.patJetCorrections)


process.makePatJets = cms.Sequence(process.patJetCorrections+process.patJetCharge+process.patJetPartonMatch+process.patJetGenJetMatch+process.patJetFlavourId+process.patJets)


process.miscSequence = cms.Sequence(process.collectionSizeSequence)


process.metHistogramSequence = cms.Sequence(process.pfMETHistogramSequence)


process.recoTauClassicHPSSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsLegacyHPSPiZeros+process.combinatoricRecoTaus+process.produceAndDiscriminateHPSPFTaus)


process.PATCMGJetSequenceCHS = cms.Sequence(process.ak5PFJetsCHS+process.PATJetSequenceCHS+process.jetSequenceCHS+process.cmgPFBaseJetAllCHS+process.cmgPFBaseJetLeadCHS)


process.PATCMGJetSequence = cms.Sequence(process.PATJetSequence+process.jetSequence+process.cmgPFBaseJetAll+process.cmgPFBaseJetLead)


process.skimSequence = cms.Sequence(process.jetSkimSequence+process.metSkimSequence+process.electronSkimSequence+process.muonSkimSequence+process.tauSkimSequence)


process.jetHistogramSequence = cms.Sequence(process.pfJetHistogramSequence)


process.pfElectronIsolationSequence = cms.Sequence(process.electronPFIsolationDepositsSequence+process.elPFIsoValueCharged03PFId+process.elPFIsoValueChargedAll03PFId+process.elPFIsoValueGamma03PFId+process.elPFIsoValueNeutral03PFId+process.elPFIsoValuePU03PFId+process.elPFIsoValueCharged04PFId+process.elPFIsoValueChargedAll04PFId+process.elPFIsoValueGamma04PFId+process.elPFIsoValueNeutral04PFId+process.elPFIsoValuePU04PFId+process.elPFIsoValueCharged03NoPFId+process.elPFIsoValueChargedAll03NoPFId+process.elPFIsoValueGamma03NoPFId+process.elPFIsoValueNeutral03NoPFId+process.elPFIsoValuePU03NoPFId+process.elPFIsoValueCharged04NoPFId+process.elPFIsoValueChargedAll04NoPFId+process.elPFIsoValueGamma04NoPFId+process.elPFIsoValueNeutral04NoPFId+process.elPFIsoValuePU04NoPFId)


process.electronSequence = cms.Sequence(process.cmgElectron+process.cmgElectronSel+process.diElectronSequence)


process.PATMuonSequence = cms.Sequence(process.pfMuonIsolationSequence+process.detMuonIsoDepositSequence+process.makePatMuons+process.selectedPatMuons+process.patMuonsWithPF+process.patMuonsWithMVA+process.patMuonsWithTriggerSequence)


process.metSequence = cms.Sequence(process.pfMetSequence)


process.histogramSequence = cms.Sequence(process.jetHistogramSequence+process.metHistogramSequence+process.electronHistogramSequence+process.muonHistogramSequence+process.tauHistogramSequence)


process.PATCMGMuonSequence = cms.Sequence(process.PATMuonSequence+process.muonSequence)


process.PATCMGPhotonSequence = cms.Sequence(process.PATPhotonSequence+process.photonSequence)


process.cmgObjectSequence = cms.Sequence(process.jetSequence+process.metSequence+process.muonSequence+process.electronSequence+process.photonSequence+process.tauSequence+process.triggerSequence)


process.PFTau = cms.Sequence(process.recoTauCommonSequence+process.recoTauClassicHPSSequence)


process.makePatTaus = cms.Sequence(process.patPFCandidateIsoDepositSelection+process.patPFTauIsolation+process.tauMatch+process.tauGenJets+process.tauGenJetsSelectorAllHadrons+process.tauGenJetMatch+process.patTaus)


process.PATElectronSequence = cms.Sequence(process.pfElectronIsolationSequence+process.detElectronIsoDepositSequence+process.patElectronIDSequence+process.makePatElectrons+process.selectedPatElectrons+process.patElectronsWithMVA+process.patElectronsWithTriggerSequence+process.patConversions)


process.analysisSequence = cms.Sequence(process.cmgObjectSequence+process.miscSequence+process.skimSequence+process.cutSummarySequence)


process.PATTauSequence = cms.Sequence(process.pfJetsForHPSTau+process.PFTau+process.makePatTaus+process.selectedPatTaus)


process.PATCMGElectronSequence = cms.Sequence(process.PATElectronSequence+process.electronSequence)


process.PATCMGTauSequence = cms.Sequence(process.PATTauSequence+process.tauSequence)


process.PATCMGSequence = cms.Sequence(process.PATCMGGenSequence+process.PATCMGTriggerSequence+process.PATCMGVertexSequence+process.PATCMGPileUpSubtractionSequence+process.PATCMGRhoSequence+process.PATCMGMuonSequence+process.PATCMGElectronSequence+process.PATCMGPhotonSequence+process.PATCMGJetSequence+process.PATCMGTauSequence+process.PATCMGMetSequence+process.MetSignificanceSequence+process.PATCMGMetRegressionSequence)


process.hcalLaserEventFilterPath = cms.Path(process.hcalLaserEventFilter)


process.primaryVertexFilterPath = cms.Path(process.primaryVertexFilter)


process.EcalDeadCellTriggerPrimitiveFilterPath = cms.Path(process.EcalDeadCellTriggerPrimitiveFilter)


process.trackingFailureFilterPath = cms.Path(process.trackingFailureSequence)


process.CSCTightHaloFilterPath = cms.Path(process.CSCTightHaloFilter)


process.totalKinematicsFilterPath = cms.Path(process.totalKinematicsFilter)


process.HBHENoiseFilterPath = cms.Path(process.HBHENoiseFilter)


process.metNoiseCleaningPath = cms.Path(process.metNoiseCleaning)


process.noscrapingFilterPath = cms.Path(process.noscraping)


process.p = cms.Path(process.prePathCounter+process.PATCMGSequence+process.PATCMGJetCHSSequence+process.postPathCounter)


process.outpath = cms.EndPath(process.outcmg)


process.MessageLogger = cms.Service("MessageLogger",
    suppressInfo = cms.untracked.vstring(),
    debugs = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    suppressDebug = cms.untracked.vstring(),
    cout = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    cerr_stats = cms.untracked.PSet(
        threshold = cms.untracked.string('WARNING'),
        output = cms.untracked.string('cerr'),
        optionalPSet = cms.untracked.bool(True)
    ),
    warnings = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    default = cms.untracked.PSet(

    ),
    statistics = cms.untracked.vstring('cerr_stats'),
    cerr = cms.untracked.PSet(
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        noTimeStamps = cms.untracked.bool(False),
        FwkReport = cms.untracked.PSet(
            reportEvery = cms.untracked.int32(10),
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        threshold = cms.untracked.string('INFO'),
        FwkJob = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        FwkSummary = cms.untracked.PSet(
            reportEvery = cms.untracked.int32(1),
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        ),
        optionalPSet = cms.untracked.bool(True)
    ),
    FrameworkJobReport = cms.untracked.PSet(
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        optionalPSet = cms.untracked.bool(True),
        FwkJob = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        )
    ),
    suppressWarning = cms.untracked.vstring(),
    errors = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    destinations = cms.untracked.vstring('warnings', 
        'errors', 
        'infos', 
        'debugs', 
        'cout', 
        'cerr'),
    debugModules = cms.untracked.vstring(),
    infos = cms.untracked.PSet(
        optionalPSet = cms.untracked.bool(True),
        Root_NoDictionary = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        placeholder = cms.untracked.bool(True)
    ),
    categories = cms.untracked.vstring('FwkJob', 
        'FwkReport', 
        'FwkSummary', 
        'Root_NoDictionary'),
    fwkJobReports = cms.untracked.vstring('FrameworkJobReport')
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    appendToDataLabel = cms.string(''),
    useDDD = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    alignmentsLabel = cms.string(''),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True),
    useCentreTIOffsets = cms.bool(False),
    applyAlignment = cms.bool(True)
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring('HCAL', 
        'ZDC', 
        'CASTOR', 
        'EcalBarrel', 
        'EcalEndcap', 
        'EcalPreshower', 
        'TOWER')
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerGeometryFromDBEP = cms.ESProducer("CaloTowerGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.CastorDbProducer = cms.ESProducer("CastorDbProducer")


process.CastorGeometryFromDBEP = cms.ESProducer("CastorGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(True),
    alignmentsLabel = cms.string('')
)


process.EcalBarrelGeometryFromDBEP = cms.ESProducer("EcalBarrelGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryFromDBEP = cms.ESProducer("EcalEndcapGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalLaserCorrectionService = cms.ESProducer("EcalLaserCorrectionService")


process.EcalPreshowerGeometryFromDBEP = cms.ESProducer("EcalPreshowerGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.HcalAlignmentEP = cms.ESProducer("HcalAlignmentEP")


process.HcalGeometryFromDBEP = cms.ESProducer("HcalGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.HcalTopologyIdealEP = cms.ESProducer("HcalTopologyIdealEP")


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.MuonNumberingInitialization = cms.ESProducer("MuonNumberingInitialization")


process.ParametrizedMagneticFieldProducer = cms.ESProducer("ParametrizedMagneticFieldProducer",
    version = cms.string('OAE_1103l_071212'),
    parameters = cms.PSet(
        BValue = cms.string('3_8T')
    ),
    label = cms.untracked.string('parametrizedField')
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    useDDD = cms.untracked.bool(False),
    compatibiltyWith11 = cms.untracked.bool(True)
)


process.SiStripRecHitMatcherESProducer = cms.ESProducer("SiStripRecHitMatcherESProducer",
    ComponentName = cms.string('StandardMatcher'),
    NSigmaInside = cms.double(3.0)
)


process.SteppingHelixPropagatorAlong = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAlong'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.StripCPEfromTrackAngleESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('StripCPEfromTrackAngle')
)


process.TrackerDigiGeometryESModule = cms.ESProducer("TrackerDigiGeometryESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(True),
    alignmentsLabel = cms.string('')
)


process.TrackerGeometricDetESModule = cms.ESProducer("TrackerGeometricDetESModule",
    fromDDD = cms.bool(False)
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer")


process.TransientTrackBuilderESProducer = cms.ESProducer("TransientTrackBuilderESProducer",
    ComponentName = cms.string('TransientTrackBuilder')
)


process.VolumeBasedMagneticFieldESProducer = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    scalingVolumes = cms.vint32(14100, 14200, 17600, 17800, 17900, 
        18100, 18300, 18400, 18600, 23100, 
        23300, 23400, 23600, 23800, 23900, 
        24100, 28600, 28800, 28900, 29100, 
        29300, 29400, 29600, 28609, 28809, 
        28909, 29109, 29309, 29409, 29609, 
        28610, 28810, 28910, 29110, 29310, 
        29410, 29610, 28611, 28811, 28911, 
        29111, 29311, 29411, 29611),
    scalingFactors = cms.vdouble(1, 1, 0.994, 1.004, 1.004, 
        1.005, 1.004, 1.004, 0.994, 0.965, 
        0.958, 0.958, 0.953, 0.958, 0.958, 
        0.965, 0.918, 0.924, 0.924, 0.906, 
        0.924, 0.924, 0.918, 0.991, 0.998, 
        0.998, 0.978, 0.998, 0.998, 0.991, 
        0.991, 0.998, 0.998, 0.978, 0.998, 
        0.998, 0.991, 0.991, 0.998, 0.998, 
        0.978, 0.998, 0.998, 0.991),
    overrideMasterSector = cms.bool(False),
    useParametrizedTrackerField = cms.bool(True),
    label = cms.untracked.string(''),
    version = cms.string('grid_1103l_090322_3_8t'),
    debugBuilder = cms.untracked.bool(False),
    paramLabel = cms.string('parametrizedField'),
    cacheLastVolume = cms.untracked.bool(True)
)


process.XMLFromDBSource = cms.ESProducer("XMLIdealGeometryESProducer",
    rootDDName = cms.string('cms:OCMS'),
    label = cms.string('Extended')
)


process.ZdcGeometryFromDBEP = cms.ESProducer("ZdcGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.caloDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('CaloDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.combinedMVA = cms.ESProducer("CombinedMVAJetTagESProducer",
    useCategories = cms.bool(False),
    calibrationRecord = cms.string('CombinedMVA'),
    jetTagComputers = cms.VPSet(cms.PSet(
        discriminator = cms.bool(True),
        variables = cms.bool(False),
        jetTagComputer = cms.string('jetProbability')
    ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('combinedSecondaryVertex')
        ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('softMuon')
        ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('softElectron')
        ))
)


process.combinedSecondaryVertex = cms.ESProducer("CombinedSecondaryVertexESProducer",
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False),
    calibrationRecords = cms.vstring('CombinedSVRecoVertex', 
        'CombinedSVPseudoVertex', 
        'CombinedSVNoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.combinedSecondaryVertexMVA = cms.ESProducer("CombinedSecondaryVertexESProducer",
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False),
    calibrationRecords = cms.vstring('CombinedSVMVARecoVertex', 
        'CombinedSVMVAPseudoVertex', 
        'CombinedSVMVANoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.ecalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('EcalDetIdAssociator'),
    etaBinSize = cms.double(0.02),
    nEta = cms.int32(300),
    nPhi = cms.int32(360)
)


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.ghostTrack = cms.ESProducer("GhostTrackESProducer",
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    trackSort = cms.string('sip2dSig'),
    minimumTrackWeight = cms.double(0.5),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    calibrationRecords = cms.vstring('GhostTrackRecoVertex', 
        'GhostTrackPseudoVertex', 
        'GhostTrackNoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.hcalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HcalDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.hcal_db_producer = cms.ESProducer("HcalDbProducer",
    file = cms.untracked.string(''),
    dump = cms.untracked.vstring('')
)


process.hoDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HODetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(30),
    nPhi = cms.int32(72)
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    useDDD = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    alignmentsLabel = cms.string('fakeForIdeal'),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True),
    useCentreTIOffsets = cms.bool(False),
    applyAlignment = cms.bool(False)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(False),
    alignmentsLabel = cms.string('fakeForIdeal')
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(False),
    alignmentsLabel = cms.string('fakeForIdeal')
)


process.impactParameterMVAComputer = cms.ESProducer("GenericMVAJetTagESProducer",
    useCategories = cms.bool(False),
    calibrationRecord = cms.string('ImpactParameterMVA')
)


process.jetBProbability = cms.ESProducer("JetBProbabilityESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    trackIpSign = cms.int32(1),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    maximumDecayLength = cms.double(5.0)
)


process.jetProbability = cms.ESProducer("JetProbabilityESProducer",
    deltaR = cms.double(0.3),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    trackIpSign = cms.int32(1),
    minimumProbability = cms.double(0.005),
    maximumDecayLength = cms.double(5.0)
)


process.muonDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('MuonDetIdAssociator'),
    includeBadChambers = cms.bool(False),
    etaBinSize = cms.double(0.125),
    nEta = cms.int32(48),
    nPhi = cms.int32(48)
)


process.preshowerDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('PreshowerDetIdAssociator'),
    etaBinSize = cms.double(0.1),
    nEta = cms.int32(60),
    nPhi = cms.int32(30)
)


process.siPixelQualityESProducer = cms.ESProducer("SiPixelQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiPixelQualityFromDbRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiPixelDetVOffRcd'),
            tag = cms.string('')
        ))
)


process.siStripGainESProducer = cms.ESProducer("SiStripGainESProducer",
    printDebug = cms.untracked.bool(False),
    appendToDataLabel = cms.string(''),
    APVGain = cms.VPSet(cms.PSet(
        Record = cms.string('SiStripApvGainRcd'),
        NormalizationFactor = cms.untracked.double(1.0),
        Label = cms.untracked.string('')
    ), 
        cms.PSet(
            Record = cms.string('SiStripApvGain2Rcd'),
            NormalizationFactor = cms.untracked.double(1.0),
            Label = cms.untracked.string('')
        )),
    AutomaticNormalization = cms.bool(False)
)


process.siStripLorentzAngleDepESProducer = cms.ESProducer("SiStripLorentzAngleDepESProducer",
    LatencyRecord = cms.PSet(
        record = cms.string('SiStripLatencyRcd'),
        label = cms.untracked.string('')
    ),
    LorentzAngleDeconvMode = cms.PSet(
        record = cms.string('SiStripLorentzAngleRcd'),
        label = cms.untracked.string('deconvolution')
    ),
    LorentzAnglePeakMode = cms.PSet(
        record = cms.string('SiStripLorentzAngleRcd'),
        label = cms.untracked.string('peak')
    )
)


process.siStripQualityESProducer = cms.ESProducer("SiStripQualityESProducer",
    appendToDataLabel = cms.string(''),
    PrintDebugOutput = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiStripDetVOffRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiStripDetCablingRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('RunInfoRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadFiberRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadModuleRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadStripRcd'),
            tag = cms.string('')
        ))
)


process.simpleSecondaryVertex2Trk = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(2),
    unBoost = cms.bool(False),
    useSignificance = cms.bool(True),
    use3d = cms.bool(True)
)


process.simpleSecondaryVertex3Trk = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(3),
    unBoost = cms.bool(False),
    useSignificance = cms.bool(True),
    use3d = cms.bool(True)
)


process.sistripconn = cms.ESProducer("SiStripConnectivity")


process.softElectron = cms.ESProducer("ElectronTaggerESProducer",
    ipSign = cms.string('any')
)


process.softLeptonByIP3d = cms.ESProducer("LeptonTaggerByIPESProducer",
    use3d = cms.bool(True),
    ipSign = cms.string('any')
)


process.softLeptonByPt = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('any')
)


process.softMuon = cms.ESProducer("MuonTaggerESProducer",
    ipSign = cms.string('any')
)


process.softMuonNoIP = cms.ESProducer("MuonTaggerNoIPESProducer",
    ipSign = cms.string('any')
)


process.trackCounting3D2nd = cms.ESProducer("TrackCountingESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    maximumDecayLength = cms.double(5.0),
    nthTrack = cms.int32(2)
)


process.trackCounting3D3rd = cms.ESProducer("TrackCountingESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    maximumDecayLength = cms.double(5.0),
    nthTrack = cms.int32(3)
)


process.BTagRecord = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('JetTagComputerRecord'),
    firstValid = cms.vuint32(1)
)


process.GlobalTag = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string('.'),
        enableReadOnlySessionOnUpdateConnection = cms.untracked.bool(False),
        idleConnectionCleanupPeriod = cms.untracked.int32(10),
        messageLevel = cms.untracked.int32(0),
        enablePoolAutomaticCleanUp = cms.untracked.bool(False),
        enableConnectionSharing = cms.untracked.bool(True),
        connectionRetrialTimeOut = cms.untracked.int32(60),
        connectionTimeOut = cms.untracked.int32(60),
        connectionRetrialPeriod = cms.untracked.int32(10)
    ),
    BlobStreamerName = cms.untracked.string('TBufferBlobStreamingService'),
    toGet = cms.VPSet(),
    connect = cms.string('frontier://FrontierProd/CMS_COND_31X_GLOBALTAG'),
    globaltag = cms.string('START44_V13::All')
)


process.HepPDTESSource = cms.ESSource("HepPDTESSource",
    pdtFileName = cms.FileInPath('SimGeneral/HepPDTESSource/data/pythiaparticle.tbl')
)


process.ak5CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloL6SLB')
)


process.ak5CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak5CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Offset', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Offset', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.ak5CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloL6SLB')
)


process.ak5CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    level = cms.string('L2Relative'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    era = cms.string('Spring10')
)


process.ak5CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    level = cms.string('L3Absolute'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    era = cms.string('Spring10')
)


process.ak5CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ak5CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ak5CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.ak5CaloResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    level = cms.string('L2L3Residual'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    era = cms.string('Spring10DataV2')
)


process.ak5JPTL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5JPTL1Fastjet', 
        'ak5JPTL1Offset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5JPTL1Fastjet', 
        'ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak5JPTL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5JPTL1Offset', 
        'ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5JPTL1Offset', 
        'ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.ak5JPTL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Summer10'),
    section = cms.string(''),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L2Relative')
)


process.ak5JPTL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Summer10'),
    section = cms.string(''),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L3Absolute')
)


process.ak5JPTResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L2L3Residual')
)


process.ak5L1JPTOffset = cms.ESSource("L1JPTOffsetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L1JPTOffset'),
    section = cms.string(''),
    era = cms.string('Jec10V1'),
    offsetService = cms.string('ak5CaloL1Offset')
)


process.ak5PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFL6SLB')
)


process.ak5PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak5PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Offset', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Offset', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.ak5PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFL6SLB')
)


process.ak5PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2Relative')
)


process.ak5PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L3Absolute')
)


process.ak5PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ak5PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ak5PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.ak5PFResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.ak5TrackL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5TrackL2Relative', 
        'ak5TrackL3Absolute')
)


process.ak5TrackL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5TrackL2Relative', 
        'ak5TrackL3Absolute')
)


process.ak5TrackL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK5TRK'),
    level = cms.string('L2Relative')
)


process.ak5TrackL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK5TRK'),
    level = cms.string('L3Absolute')
)


process.ak7CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloL6SLB')
)


process.ak7CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL1Fastjet', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak7CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.ak7CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloL6SLB')
)


process.ak7CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L2Relative')
)


process.ak7CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L3Absolute')
)


process.ak7CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ak7CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ak7CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.ak7CaloResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ak7JPTL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7JPTL1Fastjet', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute', 
        'ak7JPTResidual')
)


process.ak7JPTL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak7JPTL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7JPTL1Offset', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute')
)


process.ak7JPTL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7JPTL1Offset', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute', 
        'ak7JPTResidual')
)


process.ak7JPTL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.ak7JPTL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute')
)


process.ak7L1JPTOffset = cms.ESSource("L1JPTOffsetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L1JPTOffset'),
    section = cms.string(''),
    era = cms.string('Jec10V1'),
    offsetService = cms.string('ak5CaloL1Offset')
)


process.ak7PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFL6SLB')
)


process.ak7PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak7PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL1Offset', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL1Offset', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.ak7PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFL6SLB')
)


process.ak7PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK7PF'),
    level = cms.string('L2Relative')
)


process.ak7PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK7PF'),
    level = cms.string('L3Absolute')
)


process.ak7PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ak7PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ak7PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.ak7PFResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10DataV2'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.eegeom = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd'),
    firstValid = cms.vuint32(1)
)


process.es_hardcode = cms.ESSource("HcalHardcodeCalibrations",
    toGet = cms.untracked.vstring('GainWidths')
)


process.ic5CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloL6SLB')
)


process.ic5CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL1Fastjet', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    era = cms.string('Jec10V1')
)


process.ic5CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.ic5CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloL6SLB')
)


process.ic5CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L2Relative')
)


process.ic5CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L3Absolute')
)


process.ic5CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ic5CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ic5CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.ic5CaloResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ic5PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFL6SLB')
)


process.ic5PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ic5PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL1Offset', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL1Offset', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.ic5PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFL6SLB')
)


process.ic5PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('IC5PF'),
    level = cms.string('L2Relative')
)


process.ic5PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('IC5PF'),
    level = cms.string('L3Absolute')
)


process.ic5PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ic5PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ic5PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.ic5PFResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10DataV2'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.kt4CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloL6SLB')
)


process.kt4CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL1Fastjet', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    era = cms.string('Jec10V1')
)


process.kt4CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.kt4CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloL6SLB')
)


process.kt4CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L2Relative')
)


process.kt4CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L3Absolute')
)


process.kt4CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("kt4CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("kt4CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.kt4CaloResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.kt4PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFL6SLB')
)


process.kt4PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.kt4PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL1Offset', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL1Offset', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.kt4PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFL6SLB')
)


process.kt4PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('KT4PF'),
    level = cms.string('L2Relative')
)


process.kt4PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('KT4PF'),
    level = cms.string('L3Absolute')
)


process.kt4PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("kt4PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("kt4PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.kt4PFResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10DataV2'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.kt6CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloL6SLB')
)


process.kt6CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL1Fastjet', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6CaloJets","rho"),
    era = cms.string('Jec10V1')
)


process.kt6CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.kt6CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloL6SLB')
)


process.kt6CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L2Relative')
)


process.kt6CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L3Absolute')
)


process.kt6CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("kt6CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("kt6CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.kt6CaloResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.kt6PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFL6SLB')
)


process.kt6PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.kt6PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL1Offset', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL1Offset', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Jec10V1')
)


process.kt6PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFL6SLB')
)


process.kt6PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('KT6PF'),
    level = cms.string('L2Relative')
)


process.kt6PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('KT6PF'),
    level = cms.string('L3Absolute')
)


process.kt6PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("kt6PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("kt6PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.kt6PFResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10DataV2'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.magfield = cms.ESSource("XMLIdealGeometryESSource",
    geomXMLFiles = cms.vstring('Geometry/CMSCommonData/data/normal/cmsextent.xml', 
        'Geometry/CMSCommonData/data/cms.xml', 
        'Geometry/CMSCommonData/data/cmsMagneticField.xml', 
        'MagneticField/GeomBuilder/data/MagneticFieldVolumes_1103l.xml', 
        'MagneticField/GeomBuilder/data/MagneticFieldParameters_07_2pi.xml', 
        'Geometry/CMSCommonData/data/materials.xml'),
    rootNodeName = cms.string('cmsMagneticField:MAGF')
)


process.prefer("magfield")

process.AnomalousCellParameters = cms.PSet(
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999)
)

process.CondDBSetup = cms.PSet(
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string('.'),
        enableReadOnlySessionOnUpdateConnection = cms.untracked.bool(False),
        idleConnectionCleanupPeriod = cms.untracked.int32(10),
        messageLevel = cms.untracked.int32(0),
        enablePoolAutomaticCleanUp = cms.untracked.bool(False),
        enableConnectionSharing = cms.untracked.bool(True),
        connectionRetrialTimeOut = cms.untracked.int32(60),
        connectionTimeOut = cms.untracked.int32(60),
        connectionRetrialPeriod = cms.untracked.int32(10)
    )
)

process.EleIsoEcalFromHitsExtractorBlock = cms.PSet(
    isolationVariable = cms.string('et'),
    tryBoth = cms.bool(True),
    recHitFlagsToBeExcluded = cms.vstring('kFaultyHardware', 
        'kPoorCalib', 
        'kTowerRecovered', 
        'kDead'),
    ComponentName = cms.string('EgammaRecHitExtractor'),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    intStrip = cms.double(0.0),
    intRadius = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    energyMin = cms.double(0.08),
    extRadius = cms.double(0.6),
    subtractSuperClusterEnergy = cms.bool(False),
    vetoClustered = cms.bool(False),
    etMin = cms.double(0.0),
    DepositLabel = cms.untracked.string(''),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)

process.EleIsoHcalFromHitsExtractorBlock = cms.PSet(
    ComponentName = cms.string('EgammaHcalExtractor'),
    intRadius = cms.double(0.0),
    extRadius = cms.double(0.6),
    DepositLabel = cms.untracked.string(''),
    hcalRecHits = cms.InputTag("hbhereco"),
    etMin = cms.double(-999.0)
)

process.EleIsoHcalFromTowersExtractorBlock = cms.PSet(
    caloTowers = cms.InputTag("towerMaker"),
    ComponentName = cms.string('EgammaTowerExtractor'),
    hcalDepth = cms.int32(-1),
    intRadius = cms.double(0.0),
    extRadius = cms.double(0.6),
    DepositLabel = cms.untracked.string(''),
    etMin = cms.double(-999.0)
)

process.EleIsoTrackExtractorBlock = cms.PSet(
    Diff_z = cms.double(0.2),
    dzOption = cms.string('vz'),
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    ComponentName = cms.string('EgammaTrackExtractor'),
    DR_Max = cms.double(1.0),
    Diff_r = cms.double(9999.0),
    Chi2Prob_Min = cms.double(-1.0),
    DR_Veto = cms.double(0.0),
    NHits_Min = cms.uint32(0),
    Chi2Ndof_Max = cms.double(1e+64),
    Pt_Min = cms.double(-1.0),
    DepositLabel = cms.untracked.string(''),
    BeamlineOption = cms.string('BeamSpotFromEvent'),
    inputTrackCollection = cms.InputTag("generalTracks")
)

process.EmptyJetIdParams = cms.PSet(
    Pt2030_Tight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt2030_Loose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3050_Medium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_Tight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt2030_Medium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt010_Tight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_Loose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt010_Medium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt1020_Medium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt010_Loose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3050_Loose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
    Pt3050_Tight = cms.vdouble(-999.0, -999.0, -999.0, -999.0)
)

process.GenJetParameters = cms.PSet(
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doPUOffsetCorr = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    jetType = cms.string('GenJet'),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    inputEMin = cms.double(0.0)
)

process.JetIdParams = cms.PSet(
    Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
    Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
    Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
    Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
    Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
    Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
    Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
    Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
    Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
    Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
    Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
    Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
)

process.METSignificance_params = cms.PSet(
    resolutionsEra = cms.string('Spring10'),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    PF_PhiResType1 = cms.vdouble(0.002),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)

process.OneProngNoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZero'),
    decayModeIndices = cms.vint32(0)
)

process.OneProngNoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(0)
)

process.OneProngOnePiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngOnePiZero'),
    decayModeIndices = cms.vint32(1)
)

process.OneProngOnePiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngOnePiZeroIso'),
    decayModeIndices = cms.vint32(1)
)

process.OneProngTwoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngTwoPiZero'),
    decayModeIndices = cms.vint32(2)
)

process.OneProngTwoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngTwoPiZeroIso'),
    decayModeIndices = cms.vint32(2)
)

process.PFJetParameters = cms.PSet(
    Active_Area_Repeats = cms.int32(1),
    doOutputJets = cms.bool(True),
    useDeterministicSeed = cms.bool(True),
    doPVCorrection = cms.bool(False),
    minSeed = cms.uint32(14327),
    voronoiRfact = cms.double(-0.9),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doPUOffsetCorr = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    jetPtMin = cms.double(3.0),
    inputEMin = cms.double(0.0),
    src = cms.InputTag("particleFlow"),
    doAreaDiskApprox = cms.bool(False),
    jetType = cms.string('PFJet'),
    radiusPU = cms.double(0.5)
)

process.PFTauQualityCuts = cms.PSet(
    isolationQualityCuts = cms.PSet(
        minTrackHits = cms.uint32(8),
        minTrackVertexWeight = cms.double(-1),
        minTrackPt = cms.double(1.0),
        maxTrackChi2 = cms.double(100.0),
        minTrackPixelHits = cms.uint32(0),
        minGammaEt = cms.double(1.5),
        maxDeltaZ = cms.double(0.2),
        maxTransverseImpactParameter = cms.double(0.03)
    ),
    pvFindingAlgo = cms.string('highestWeightForLeadTrack'),
    primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
    signalQualityCuts = cms.PSet(
        minTrackHits = cms.uint32(3),
        minTrackVertexWeight = cms.double(-1),
        minTrackPt = cms.double(0.5),
        maxTrackChi2 = cms.double(100.0),
        minTrackPixelHits = cms.uint32(0),
        minGammaEt = cms.double(0.5),
        maxDeltaZ = cms.double(0.2),
        maxTransverseImpactParameter = cms.double(0.03)
    )
)

process.PhilV0 = cms.PSet(
    tmvaMethod = cms.string('JetID'),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/mva_JetID.weights.xml'),
    version = cms.int32(0),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt2030_Loose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3050_Medium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_Tight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt2030_Medium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt010_Tight = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_Loose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt010_Medium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt1020_Medium = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt010_Loose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3050_Loose = cms.vdouble(-999.0, -999.0, -999.0, -999.0),
        Pt3050_Tight = cms.vdouble(-999.0, -999.0, -999.0, -999.0)
    ),
    impactParTkThreshold = cms.double(1.0)
)

process.PhilV1 = cms.PSet(
    tmvaVariables = cms.vstring('nvtx', 
        'jetPt', 
        'jetEta', 
        'jetPhi', 
        'dZ', 
        'd0', 
        'beta', 
        'betaStar', 
        'nCharged', 
        'nNeutrals', 
        'dRMean', 
        'frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05'),
    tmvaMethod = cms.string('JetID'),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/mva_JetID_v1.weights.xml'),
    tmvaSpectators = cms.vstring(),
    label = cms.string('philv1'),
    version = cms.int32(-1),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.3, 0.4, 0.7, 0.8),
        Pt2030_Loose = cms.vdouble(0.0, 0.0, 0.2, 0.6),
        Pt3050_Medium = cms.vdouble(0.3, 0.2, 0.7, 0.8),
        Pt1020_Tight = cms.vdouble(-0.2, 0.2, 0.2, 0.6),
        Pt2030_Medium = cms.vdouble(0.2, 0.2, 0.5, 0.7),
        Pt010_Tight = cms.vdouble(0.5, 0.6, 0.6, 0.9),
        Pt1020_Loose = cms.vdouble(-0.4, -0.4, -0.4, 0.4),
        Pt010_Medium = cms.vdouble(0.2, 0.4, 0.2, 0.6),
        Pt1020_Medium = cms.vdouble(-0.3, 0.0, 0.0, 0.5),
        Pt010_Loose = cms.vdouble(0.0, 0.0, 0.0, 0.2),
        Pt3050_Loose = cms.vdouble(0.0, 0.0, 0.6, 0.2),
        Pt3050_Tight = cms.vdouble(0.5, 0.4, 0.8, 0.9)
    ),
    impactParTkThreshold = cms.double(1.0)
)

process.PuJetIdCutBased_wp = cms.PSet(
    Pt010_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
    Pt3050_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
    Pt3050_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
    Pt010_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
    Pt1020_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
    Pt010_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
    Pt1020_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
    Pt1020_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
    Pt2030_RMSTight = cms.vdouble(0.05, 0.07, 0.03, 0.045),
    Pt3050_RMSTight = cms.vdouble(0.05, 0.06, 0.03, 0.04),
    Pt1020_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05),
    Pt3050_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
    Pt3050_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
    Pt2030_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
    Pt010_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
    Pt2030_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
    Pt1020_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
    Pt2030_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
    Pt2030_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
    Pt2030_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
    Pt010_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
    Pt3050_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
    Pt1020_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
    Pt010_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05)
)

process.PuJetIdMinMVA_wp = cms.PSet(
    Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
    Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
    Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
    Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
    Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
    Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
    Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
    Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
    Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
    Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
    Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
    Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
)

process.PuJetIdOptMVA_wp = cms.PSet(
    Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
    Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
    Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
    Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
    Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
    Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
    Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
    Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
    Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
    Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
    Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
    Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
)

process.SingleNet = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNet'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
)

process.SingleNetIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNetIso'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
)

process.ThreeProngNoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngNoPiZero'),
    decayModeIndices = cms.vint32(10)
)

process.ThreeProngNoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(10)
)

process.ThreeProngOnePiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngOnePiZero'),
    decayModeIndices = cms.vint32(11)
)

process.ThreeProngOnePiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngOnePiZeroIso'),
    decayModeIndices = cms.vint32(11)
)

process.TrackAssociatorParameterBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    )
)

process.TrackAssociatorParameters = cms.PSet(
    muonMaxDistanceSigmaX = cms.double(0.0),
    muonMaxDistanceSigmaY = cms.double(0.0),
    CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
    dRHcal = cms.double(9999.0),
    dREcal = cms.double(9999.0),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    useEcal = cms.bool(True),
    dREcalPreselection = cms.double(0.05),
    HORecHitCollectionLabel = cms.InputTag("horeco"),
    dRMuon = cms.double(9999.0),
    propagateAllDirections = cms.bool(True),
    muonMaxDistanceX = cms.double(5.0),
    muonMaxDistanceY = cms.double(5.0),
    useHO = cms.bool(True),
    trajectoryUncertaintyTolerance = cms.double(-1.0),
    usePreshower = cms.bool(False),
    DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
    EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    dRHcalPreselection = cms.double(0.2),
    useMuon = cms.bool(True),
    useCalo = cms.bool(False),
    accountForTrajectoryChangeCalo = cms.bool(False),
    EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRMuonPreselection = cms.double(0.2),
    truthMatch = cms.bool(False),
    HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
    useHcal = cms.bool(True)
)

process.combinedSecondaryVertexCommon = cms.PSet(
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False)
)

process.cutbased = cms.PSet(
    cutBased = cms.bool(True),
    JetIdParams = cms.PSet(
        Pt010_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
        Pt3050_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
        Pt3050_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
        Pt010_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
        Pt1020_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
        Pt010_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
        Pt1020_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.07),
        Pt1020_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
        Pt2030_RMSTight = cms.vdouble(0.05, 0.07, 0.03, 0.045),
        Pt3050_RMSTight = cms.vdouble(0.05, 0.06, 0.03, 0.04),
        Pt1020_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05),
        Pt3050_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
        Pt3050_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
        Pt2030_RMSLoose = cms.vdouble(0.06, 0.05, 0.05, 0.055),
        Pt010_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
        Pt2030_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
        Pt1020_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
        Pt2030_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
        Pt2030_BetaStarTight = cms.vdouble(0.15, 0.15, 999.0, 999.0),
        Pt2030_RMSMedium = cms.vdouble(0.06, 0.03, 0.03, 0.04),
        Pt010_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
        Pt3050_BetaStarLoose = cms.vdouble(0.2, 0.3, 999.0, 999.0),
        Pt1020_BetaStarMedium = cms.vdouble(0.2, 0.3, 999.0, 999.0),
        Pt010_RMSTight = cms.vdouble(0.06, 0.07, 0.04, 0.05)
    ),
    impactParTkThreshold = cms.double(1.0),
    label = cms.string('cutbased')
)

process.cuts = cms.PSet(
    tightCut = cms.double(0.985),
    looseCut = cms.double(0.95),
    mediumCut = cms.double(0.97),
    vlooseCut = cms.double(0.9)
)

process.diElectronFactory = cms.PSet(
    leg2Collection = cms.InputTag("cmgElectronSel"),
    leg1Collection = cms.InputTag("cmgElectronSel"),
    metCollection = cms.InputTag("")
)

process.diObjectFactory = cms.PSet(
    leg2Collection = cms.InputTag("dummy"),
    leg1Collection = cms.InputTag("dummy"),
    metCollection = cms.InputTag("")
)

process.dimuonFactory = cms.PSet(
    leg2Collection = cms.InputTag("cmgMuonSel"),
    leg1Collection = cms.InputTag("cmgMuonSel"),
    metCollection = cms.InputTag("")
)

process.discriminantConfiguration = cms.PSet(
    BinnedMaskedHcalIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        mask = cms.PSet(
            finalHcalCone = cms.double(0.08),
            ecalCone = cms.double(0.15),
            hcalCone = cms.double(0.3),
            maxSigmas = cms.double(2)
        ),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                nPUVtx = cms.int32(4)
            )),
        defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
        plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
    ),
    InvariantOpeningAngle = cms.PSet(
        defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
        plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
        decayModes = cms.VPSet(cms.PSet(
            nPiZeros = cms.uint32(1),
            rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
            nCharged = cms.uint32(1),
            mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
        ), 
            cms.PSet(
                nPiZeros = cms.uint32(2),
                rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(0),
                rms = cms.string('0.38/max(pt, 1.0)'),
                nCharged = cms.uint32(3),
                mean = cms.string('0.87/max(pt, 1.0)')
            )),
        defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
    ),
    BinnedMaskedEcalIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        mask = cms.PSet(
            finalHcalCone = cms.double(0.08),
            ecalCone = cms.double(0.15),
            hcalCone = cms.double(0.3),
            maxSigmas = cms.double(2)
        ),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(0.5, 0.88, 2.53),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.65, 0.98, 2.53),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.74, 1.05, 2.54),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.8, 1.11, 2.54),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.86, 1.15, 2.54),
                nPUVtx = cms.int32(4)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.9, 1.19, 2.55),
                nPUVtx = cms.int32(5)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.94, 1.22, 2.55),
                nPUVtx = cms.int32(6)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.97, 1.25, 2.55),
                nPUVtx = cms.int32(7)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.0, 1.27, 2.56),
                nPUVtx = cms.int32(8)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.03, 1.3, 2.56),
                nPUVtx = cms.int32(9)
            )),
        defaultBinning = cms.vdouble(1.03, 1.3, 2.56),
        plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
    ),
    FlightPathSignificance = cms.PSet(
        plugin = cms.string('RecoTauDiscriminantFromDiscriminator'),
        discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
        maxValue = cms.double(25),
        minValue = cms.double(-25)
    ),
    BinnedTrackIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                nPUVtx = cms.int32(4)
            )),
        defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
        plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
    )
)

process.electronFactory = cms.PSet(
    leptonFactory = cms.PSet(
        vertexType = cms.int32(0),
        photonsIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet(cms.PSet(
                dEta = cms.double(0.1),
                dPhi = cms.double(0.2),
                type = cms.string('RectangularEtaPhiVeto')
            ))
        ),
        useIsoDeposits = cms.bool(False),
        useParticleFlowIso = cms.bool(True),
        puChargedHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        chargedAllIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        vertexCollection = cms.InputTag("offlinePrimaryVertices"),
        neutralHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        chargedHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        )
    ),
    inputCollection = cms.InputTag("selectedPatElectronsAK5"),
    primaryVertexCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    electronMVAFile = cms.FileInPath('CMGTools/Common/data/TMVA_BDTSimpleCat.weights.xml')
)

process.electronIDs = cms.PSet(
    eidMedium = cms.InputTag("eidMedium"),
    mvaTrigV0 = cms.InputTag("mvaTrigV0"),
    simpleEleId70relIso = cms.InputTag("simpleEleId70relIso"),
    simpleEleId60relIso = cms.InputTag("simpleEleId60relIso"),
    eidVeryLoose = cms.InputTag("eidVeryLoose"),
    simpleEleId80relIso = cms.InputTag("simpleEleId80relIso"),
    simpleEleId85relIso = cms.InputTag("simpleEleId85relIso"),
    simpleEleId95relIso = cms.InputTag("simpleEleId95relIso"),
    eidTight = cms.InputTag("eidTight"),
    eidLoose = cms.InputTag("eidLoose"),
    simpleEleId90relIso = cms.InputTag("simpleEleId90relIso"),
    eidSuperTight = cms.InputTag("eidSuperTight"),
    mvaNonTrigV0 = cms.InputTag("mvaNonTrigV0")
)

process.electronUserIsolation = cms.PSet(
    user = cms.VPSet(cms.PSet(
        src = cms.InputTag("eleIsoFromDepsTkOptimized5")
    ), 
        cms.PSet(
            src = cms.InputTag("eleIsoFromDepsTkOptimized7")
        ))
)

process.fieldScaling = cms.PSet(
    scalingVolumes = cms.vint32(14100, 14200, 17600, 17800, 17900, 
        18100, 18300, 18400, 18600, 23100, 
        23300, 23400, 23600, 23800, 23900, 
        24100, 28600, 28800, 28900, 29100, 
        29300, 29400, 29600, 28609, 28809, 
        28909, 29109, 29309, 29409, 29609, 
        28610, 28810, 28910, 29110, 29310, 
        29410, 29610, 28611, 28811, 28911, 
        29111, 29311, 29411, 29611),
    scalingFactors = cms.vdouble(1, 1, 0.994, 1.004, 1.004, 
        1.005, 1.004, 1.004, 0.994, 0.965, 
        0.958, 0.958, 0.953, 0.958, 0.958, 
        0.965, 0.918, 0.924, 0.924, 0.906, 
        0.924, 0.924, 0.918, 0.991, 0.998, 
        0.998, 0.978, 0.998, 0.998, 0.991, 
        0.991, 0.998, 0.998, 0.978, 0.998, 
        0.998, 0.991, 0.991, 0.998, 0.998, 
        0.978, 0.998, 0.998, 0.991)
)

process.full = cms.PSet(
    tmvaVariables = cms.vstring('frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05', 
        'nvtx', 
        'nNeutrals', 
        'beta', 
        'betaStar', 
        'dZ', 
        'nCharged'),
    tmvaMethod = cms.string('PuJetIdOptMVA'),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdOptMVA.weights.xml'),
    tmvaSpectators = cms.vstring('jetPt', 
        'jetEta'),
    label = cms.string('full'),
    version = cms.int32(-1),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
        Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
        Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
        Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
        Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.4, -0.45),
        Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
        Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
        Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
        Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
        Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.9, -0.9),
        Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
        Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
    ),
    impactParTkThreshold = cms.double(1.0)
)

process.full_5x = cms.PSet(
    tmvaVariables = cms.vstring('frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05', 
        'dR2Mean', 
        'nvtx', 
        'nNeutrals', 
        'beta', 
        'betaStar', 
        'dZ', 
        'nCharged'),
    tmvaMethod = cms.string('BDT_fullPlusRMS'),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_fullPlusRMS.weights.xml'),
    tmvaSpectators = cms.vstring('jetPt', 
        'jetEta'),
    label = cms.string('full'),
    version = cms.int32(-1),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74),
        Pt2030_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
        Pt3050_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
        Pt1020_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
        Pt2030_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
        Pt010_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
        Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
        Pt010_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
        Pt1020_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
        Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
        Pt3050_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
        Pt3050_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74)
    ),
    impactParTkThreshold = cms.double(1.0)
)

process.full_5x_chs = cms.PSet(
    tmvaVariables = cms.vstring('frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05', 
        'dR2Mean', 
        'nvtx', 
        'nNeutrals', 
        'beta', 
        'betaStar', 
        'dZ', 
        'nCharged'),
    tmvaMethod = cms.string('BDT_chsFullPlusRMS'),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_chsFullPlusRMS.weights.xml'),
    tmvaSpectators = cms.vstring('jetPt', 
        'jetEta'),
    label = cms.string('full'),
    version = cms.int32(-1),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.41, -0.1, -0.2, -0.45),
        Pt2030_Loose = cms.vdouble(-0.89, -0.77, -0.69, -0.75),
        Pt3050_Medium = cms.vdouble(-0.58, -0.65, -0.57, -0.67),
        Pt1020_Tight = cms.vdouble(-0.59, -0.75, -0.78, -0.8),
        Pt2030_Medium = cms.vdouble(-0.58, -0.65, -0.57, -0.67),
        Pt010_Tight = cms.vdouble(-0.59, -0.75, -0.78, -0.8),
        Pt1020_Loose = cms.vdouble(-0.98, -0.95, -0.94, -0.94),
        Pt010_Medium = cms.vdouble(-0.94, -0.91, -0.91, -0.92),
        Pt1020_Medium = cms.vdouble(-0.94, -0.91, -0.91, -0.92),
        Pt010_Loose = cms.vdouble(-0.98, -0.95, -0.94, -0.94),
        Pt3050_Loose = cms.vdouble(-0.89, -0.77, -0.69, -0.57),
        Pt3050_Tight = cms.vdouble(0.41, -0.1, -0.2, -0.45)
    ),
    impactParTkThreshold = cms.double(1.0)
)

process.full_5x_chs_wp = cms.PSet(
    Pt2030_Tight = cms.vdouble(0.41, -0.1, -0.2, -0.45),
    Pt2030_Loose = cms.vdouble(-0.89, -0.77, -0.69, -0.75),
    Pt3050_Medium = cms.vdouble(-0.58, -0.65, -0.57, -0.67),
    Pt1020_Tight = cms.vdouble(-0.59, -0.75, -0.78, -0.8),
    Pt2030_Medium = cms.vdouble(-0.58, -0.65, -0.57, -0.67),
    Pt010_Tight = cms.vdouble(-0.59, -0.75, -0.78, -0.8),
    Pt1020_Loose = cms.vdouble(-0.98, -0.95, -0.94, -0.94),
    Pt010_Medium = cms.vdouble(-0.94, -0.91, -0.91, -0.92),
    Pt1020_Medium = cms.vdouble(-0.94, -0.91, -0.91, -0.92),
    Pt010_Loose = cms.vdouble(-0.98, -0.95, -0.94, -0.94),
    Pt3050_Loose = cms.vdouble(-0.89, -0.77, -0.69, -0.57),
    Pt3050_Tight = cms.vdouble(0.41, -0.1, -0.2, -0.45)
)

process.full_5x_wp = cms.PSet(
    Pt2030_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74),
    Pt2030_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
    Pt3050_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
    Pt1020_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
    Pt2030_Medium = cms.vdouble(-0.4, -0.74, -0.76, -0.81),
    Pt010_Tight = cms.vdouble(-0.47, -0.92, -0.92, -0.94),
    Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
    Pt010_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
    Pt1020_Medium = cms.vdouble(-0.83, -0.96, -0.95, -0.96),
    Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.97, -0.97),
    Pt3050_Loose = cms.vdouble(-0.8, -0.85, -0.84, -0.85),
    Pt3050_Tight = cms.vdouble(0.32, -0.49, -0.61, -0.74)
)

process.genJetFactory = cms.PSet(
    inputCollection = cms.InputTag("ak5GenJetsNoNu")
)

process.ghostTrackCommon = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    trackSort = cms.string('sip2dSig'),
    minimumTrackWeight = cms.double(0.5)
)

process.ghostTrackVertexRecoBlock = cms.PSet(
    vertexReco = cms.PSet(
        primcut = cms.double(2.0),
        seccut = cms.double(4.0),
        maxFitChi2 = cms.double(10.0),
        fitType = cms.string('RefitGhostTrackWithVertices'),
        mergeThreshold = cms.double(3.0),
        finder = cms.string('gtvr')
    )
)

process.highptmuonNoVtx = cms.PSet(
    numberOfValidMuonHits = cms.string('numberOfValidMuonHits() > 0'),
    numberOfMatchedStations = cms.string('numberOfMatchedStations() > 1'),
    trackerLayersWithMeasurement = cms.string('trackerLayersWithMeasurement() > 8'),
    numberOfValidPixelHits = cms.string('numberOfValidPixelHits() > 0'),
    isGlobal = cms.string('isGlobal()')
)

process.hpsTancRequireDecayMode = cms.PSet(
    BooleanOperator = cms.string('and'),
    decayMode = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
    )
)

process.j2tParametersCALO = cms.PSet(
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator")
)

process.j2tParametersVX = cms.PSet(
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5)
)

process.kinematics = cms.PSet(
    phi = cms.string('abs(phi()) < 3.2'),
    eta = cms.string('abs(eta()) < 2.4'),
    pt = cms.string('pt() > 10')
)

process.leadTrackFinding = cms.PSet(
    cut = cms.double(0.5),
    Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
)

process.leptonFactory = cms.PSet(
    vertexType = cms.int32(0),
    photonsIsoPar = cms.PSet(
        coneSize = cms.double(0.4),
        vetoes = cms.VPSet(cms.PSet(
            dEta = cms.double(0.1),
            dPhi = cms.double(0.2),
            type = cms.string('RectangularEtaPhiVeto')
        ))
    ),
    useIsoDeposits = cms.bool(False),
    useParticleFlowIso = cms.bool(True),
    puChargedHadronIsoPar = cms.PSet(
        coneSize = cms.double(0.4),
        vetoes = cms.VPSet()
    ),
    chargedAllIsoPar = cms.PSet(
        coneSize = cms.double(0.4),
        vetoes = cms.VPSet()
    ),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    neutralHadronIsoPar = cms.PSet(
        coneSize = cms.double(0.4),
        vetoes = cms.VPSet()
    ),
    chargedHadronIsoPar = cms.PSet(
        coneSize = cms.double(0.4),
        vetoes = cms.VPSet()
    )
)

process.looseNoVtx = cms.PSet(
    sigmaIetaIeta = cms.string('(sourcePtr().isEB() && sourcePtr().sigmaIetaIeta() < 0.010 ) || ( sourcePtr().isEE() && sourcePtr().sigmaIetaIeta() < 0.030 )'),
    ooemoop = cms.string('( 1.0/sourcePtr().ecalEnergy() - sourcePtr().eSuperClusterOverP()/sourcePtr().ecalEnergy() ) < 0.050'),
    passConversionVeto = cms.string('sourcePtr().passConversionVeto() == 1'),
    hadronicOverEm = cms.string('(sourcePtr().isEB() && sourcePtr().hadronicOverEm() < 0.120 ) || ( sourcePtr().isEE() && sourcePtr().hadronicOverEm() < 0.100)'),
    deltaPhiSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.150 ) || ( sourcePtr().isEE() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.100 )'),
    deltaEtaSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.007 ) || ( sourcePtr().isEE() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.009 )'),
    mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() <= 1')
)

process.looseSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.017),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.39),
    BarrelMVACuts = cms.vdouble(-0.1, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.looseSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(-0.24, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 7.01)
)

process.loosemuon = cms.PSet(
    isPF = cms.string('isPF()'),
    isNotSTA = cms.string('isGlobal()||isTracker()')
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(-1)
)

process.mediumNoVtx = cms.PSet(
    sigmaIetaIeta = cms.string('(sourcePtr().isEB() && sourcePtr().sigmaIetaIeta() < 0.010 ) || ( sourcePtr().isEE() && sourcePtr().sigmaIetaIeta() < 0.030 )'),
    ooemoop = cms.string('( 1.0/sourcePtr().ecalEnergy() - sourcePtr().eSuperClusterOverP()/sourcePtr().ecalEnergy() ) < 0.050'),
    passConversionVeto = cms.string('sourcePtr().passConversionVeto() == 1'),
    hadronicOverEm = cms.string('(sourcePtr().isEB() && sourcePtr().hadronicOverEm() < 0.120 ) || ( sourcePtr().isEE() && sourcePtr().hadronicOverEm() < 0.100)'),
    deltaPhiSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.060 ) || ( sourcePtr().isEE() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.030 )'),
    deltaEtaSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.004 ) || ( sourcePtr().isEE() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.007 )'),
    mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() <= 1')
)

process.mediumSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.0047),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.54),
    BarrelMVACuts = cms.vdouble(0.6, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.mediumSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.003),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(0.37, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 20.0)
)

process.muonFactory = cms.PSet(
    leptonFactory = cms.PSet(
        vertexType = cms.int32(0),
        photonsIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet(cms.PSet(
                dEta = cms.double(0.1),
                dPhi = cms.double(0.2),
                type = cms.string('RectangularEtaPhiVeto')
            ))
        ),
        useIsoDeposits = cms.bool(False),
        useParticleFlowIso = cms.bool(True),
        puChargedHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        chargedAllIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        vertexCollection = cms.InputTag("offlinePrimaryVertices"),
        neutralHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        chargedHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        )
    ),
    muonIDType = cms.string('TMLastStationLoose'),
    trackType = cms.int32(0),
    inputCollection = cms.InputTag("selectedPatMuonsAK5")
)

process.noPrediscriminants = cms.PSet(
    BooleanOperator = cms.string('and')
)

process.options = cms.untracked.PSet(
    wantSummary = cms.untracked.bool(False)
)

process.photonFactory = cms.PSet(
    photonsIsoPar = cms.PSet(
        coneSize = cms.double(0.3),
        vetoes = cms.VPSet(cms.PSet(
            threshold = cms.double(0.5),
            type = cms.string('ThresholdVeto')
        ))
    ),
    muonCollection = cms.InputTag("patMuonsWithTrigger"),
    isoDepWithCharged = cms.InputTag("phPFIsoDepositCharged"),
    puIsoPar = cms.PSet(
        coneSize = cms.double(0.3),
        vetoes = cms.VPSet(cms.PSet(
            threshold = cms.double(0.2),
            type = cms.string('ThresholdVeto')
        ))
    ),
    neutralHadronIsoPar = cms.PSet(
        coneSize = cms.double(0.3),
        vetoes = cms.VPSet(cms.PSet(
            threshold = cms.double(0.5),
            type = cms.string('ThresholdVeto')
        ))
    ),
    isoDepWithPhotons = cms.InputTag("phPFIsoDepositGamma"),
    inputCollection = cms.InputTag("pfSelectedPhotons"),
    pfCollection = cms.InputTag("particleFlow"),
    chargedHadronIsoPar = cms.PSet(
        coneSize = cms.double(0.3),
        vetoes = cms.VPSet(cms.PSet(
            threshold = cms.double(0.2),
            type = cms.string('ThresholdVeto')
        ))
    ),
    isoDepWithNeutral = cms.InputTag("phPFIsoDepositNeutral"),
    isoDepWithPU = cms.InputTag("phPFIsoDepositPU")
)

process.premvaTrig = cms.PSet(
    sigmaIetaIeta = cms.string('( sourcePtr().superCluster().get().eta() < 1.479 && sourcePtr().sigmaIetaIeta() < 0.014 ) || ( sourcePtr().superCluster().get().eta() >= 1.479 && sourcePtr().sigmaIetaIeta() < 0.035 )'),
    dr03Hcal = cms.string('sourcePtr().dr03HcalTowerSumEt()/pt() < 0.2'),
    dr03Trk = cms.string('sourcePtr().dr03TkSumPt()/pt() < 0.2'),
    hadronicOverEm = cms.string('( sourcePtr().superCluster().get().eta() < 1.479 && sourcePtr().hadronicOverEm() < 0.15 ) || ( sourcePtr().superCluster().get().eta() >= 1.479 && sourcePtr().hadronicOverEm() < 0.10 )'),
    dr03Ecal = cms.string('sourcePtr().dr03EcalRecHitSumEt()/pt() < 0.2'),
    mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() == 0')
)

process.requireDecayMode = cms.PSet(
    BooleanOperator = cms.string('and'),
    decayMode = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
    )
)

process.requireLeadPion = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadPion = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.requireLeadTrack = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.requireLeadTrackCalo = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.shrinkingConeLeadTrackFinding = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
    )
)

process.simple = cms.PSet(
    tmvaVariables = cms.vstring('frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05', 
        'beta', 
        'betaStar'),
    tmvaMethod = cms.string('PuJetIdMinMVA'),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_PuJetIdMinMVA.weights.xml'),
    tmvaSpectators = cms.vstring('nvtx', 
        'jetPt', 
        'jetEta'),
    label = cms.string('simple'),
    version = cms.int32(-1),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0),
        Pt2030_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
        Pt3050_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
        Pt1020_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
        Pt2030_Medium = cms.vdouble(0.1, -0.4, -0.5, -0.45),
        Pt010_Tight = cms.vdouble(-0.5, -0.2, -0.83, -0.7),
        Pt1020_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
        Pt010_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
        Pt1020_Medium = cms.vdouble(-0.73, -0.89, -0.89, -0.83),
        Pt010_Loose = cms.vdouble(-0.9, -0.9, -0.94, -0.9),
        Pt3050_Loose = cms.vdouble(-0.4, -0.85, -0.7, -0.6),
        Pt3050_Tight = cms.vdouble(-0.2, 0.0, 0.0, 0.0)
    ),
    impactParTkThreshold = cms.double(1.0)
)

process.simple_5x = cms.PSet(
    tmvaVariables = cms.vstring('frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05', 
        'nvtx', 
        'beta', 
        'betaStar'),
    tmvaMethod = cms.string('BDT_simpleNoVtxCat'),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_simpleNoVtxCat.weights.xml'),
    tmvaSpectators = cms.vstring('jetPt', 
        'jetEta'),
    label = cms.string('simple'),
    version = cms.int32(-1),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(0.26, -0.54, -0.63, -0.74),
        Pt2030_Loose = cms.vdouble(-0.8, -0.86, -0.8, -0.84),
        Pt3050_Medium = cms.vdouble(-0.4, -0.73, -0.74, -0.8),
        Pt1020_Tight = cms.vdouble(-0.54, -0.93, -0.93, -0.94),
        Pt2030_Medium = cms.vdouble(-0.4, -0.73, -0.74, -0.8),
        Pt010_Tight = cms.vdouble(-0.54, -0.93, -0.93, -0.94),
        Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.96, -0.97),
        Pt010_Medium = cms.vdouble(-0.85, -0.96, -0.95, -0.96),
        Pt1020_Medium = cms.vdouble(-0.85, -0.96, -0.95, -0.96),
        Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.96, -0.97),
        Pt3050_Loose = cms.vdouble(-0.8, -0.86, -0.8, -0.84),
        Pt3050_Tight = cms.vdouble(0.26, -0.54, -0.63, -0.74)
    ),
    impactParTkThreshold = cms.double(1.0)
)

process.simple_5x_chs = cms.PSet(
    tmvaVariables = cms.vstring('frac01', 
        'frac02', 
        'frac03', 
        'frac04', 
        'frac05', 
        'nvtx', 
        'beta', 
        'betaStar'),
    tmvaMethod = cms.string('BDT_chsSimpleNoVtxCat'),
    cutBased = cms.bool(False),
    tmvaWeights = cms.string('CMGTools/External/data/TMVAClassification_5x_BDT_chsSimpleNoVtxCat.weights.xml'),
    tmvaSpectators = cms.vstring('jetPt', 
        'jetEta'),
    label = cms.string('simple'),
    version = cms.int32(-1),
    JetIdParams = cms.PSet(
        Pt2030_Tight = cms.vdouble(-0.47, -0.06, -0.23, -0.47),
        Pt2030_Loose = cms.vdouble(-0.89, -0.75, -0.72, -0.75),
        Pt3050_Medium = cms.vdouble(-0.59, -0.65, -0.56, -0.68),
        Pt1020_Tight = cms.vdouble(-0.6, -0.74, -0.78, -0.81),
        Pt2030_Medium = cms.vdouble(-0.59, -0.65, -0.56, -0.68),
        Pt010_Tight = cms.vdouble(-0.6, -0.74, -0.78, -0.81),
        Pt1020_Loose = cms.vdouble(-0.98, -0.96, -0.94, -0.94),
        Pt010_Medium = cms.vdouble(-0.95, -0.94, -0.92, -0.91),
        Pt1020_Medium = cms.vdouble(-0.95, -0.94, -0.92, -0.91),
        Pt010_Loose = cms.vdouble(-0.98, -0.96, -0.94, -0.94),
        Pt3050_Loose = cms.vdouble(-0.89, -0.75, -0.72, -0.75),
        Pt3050_Tight = cms.vdouble(-0.47, -0.06, -0.23, -0.47)
    ),
    impactParTkThreshold = cms.double(1.0)
)

process.simple_5x_chs_wp = cms.PSet(
    Pt2030_Tight = cms.vdouble(-0.47, -0.06, -0.23, -0.47),
    Pt2030_Loose = cms.vdouble(-0.89, -0.75, -0.72, -0.75),
    Pt3050_Medium = cms.vdouble(-0.59, -0.65, -0.56, -0.68),
    Pt1020_Tight = cms.vdouble(-0.6, -0.74, -0.78, -0.81),
    Pt2030_Medium = cms.vdouble(-0.59, -0.65, -0.56, -0.68),
    Pt010_Tight = cms.vdouble(-0.6, -0.74, -0.78, -0.81),
    Pt1020_Loose = cms.vdouble(-0.98, -0.96, -0.94, -0.94),
    Pt010_Medium = cms.vdouble(-0.95, -0.94, -0.92, -0.91),
    Pt1020_Medium = cms.vdouble(-0.95, -0.94, -0.92, -0.91),
    Pt010_Loose = cms.vdouble(-0.98, -0.96, -0.94, -0.94),
    Pt3050_Loose = cms.vdouble(-0.89, -0.75, -0.72, -0.75),
    Pt3050_Tight = cms.vdouble(-0.47, -0.06, -0.23, -0.47)
)

process.simple_5x_wp = cms.PSet(
    Pt2030_Tight = cms.vdouble(0.26, -0.54, -0.63, -0.74),
    Pt2030_Loose = cms.vdouble(-0.8, -0.86, -0.8, -0.84),
    Pt3050_Medium = cms.vdouble(-0.4, -0.73, -0.74, -0.8),
    Pt1020_Tight = cms.vdouble(-0.54, -0.93, -0.93, -0.94),
    Pt2030_Medium = cms.vdouble(-0.4, -0.73, -0.74, -0.8),
    Pt010_Tight = cms.vdouble(-0.54, -0.93, -0.93, -0.94),
    Pt1020_Loose = cms.vdouble(-0.95, -0.97, -0.96, -0.97),
    Pt010_Medium = cms.vdouble(-0.85, -0.96, -0.95, -0.96),
    Pt1020_Medium = cms.vdouble(-0.85, -0.96, -0.95, -0.96),
    Pt010_Loose = cms.vdouble(-0.95, -0.97, -0.96, -0.97),
    Pt3050_Loose = cms.vdouble(-0.8, -0.86, -0.8, -0.84),
    Pt3050_Tight = cms.vdouble(0.26, -0.54, -0.63, -0.74)
)

process.softmuonNoVtx = cms.PSet(
    pixelLayersWithMeasurement = cms.string('pixelLayersWithMeasurement() > 1'),
    tkNormalizedChi2 = cms.string('tkNormalizedChi2 < 1.8'),
    isTMOST = cms.string('isTMOST()'),
    trackerLayersWithMeasurement = cms.string('trackerLayersWithMeasurement() > 5')
)

process.standardDecayModeParams = cms.PSet(
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxNbrOfIterations = cms.int32(10),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionPiZeroes = cms.double(0.15),
    maxPhotonsToMerge = cms.uint32(2),
    filterTwoProngs = cms.bool(True),
    maxPiZeroMass = cms.double(0.2),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1)
)

process.tauFactory = cms.PSet(
    leptonFactory = cms.PSet(
        vertexType = cms.int32(0),
        photonsIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet(cms.PSet(
                dEta = cms.double(0.1),
                dPhi = cms.double(0.2),
                type = cms.string('RectangularEtaPhiVeto')
            ))
        ),
        useIsoDeposits = cms.bool(False),
        useParticleFlowIso = cms.bool(True),
        puChargedHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        chargedAllIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        vertexCollection = cms.InputTag("offlinePrimaryVertices"),
        neutralHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        ),
        chargedHadronIsoPar = cms.PSet(
            coneSize = cms.double(0.4),
            vetoes = cms.VPSet()
        )
    ),
    inputCollection = cms.InputTag("selectedPatTausAK5")
)

process.tautagInfoModifer = cms.PSet(
    pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
    name = cms.string('TTIworkaround'),
    plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
)

process.tightNoVtx = cms.PSet(
    sigmaIetaIeta = cms.string('(sourcePtr().isEB() && sourcePtr().sigmaIetaIeta() < 0.010 ) || ( sourcePtr().isEE() && sourcePtr().sigmaIetaIeta() < 0.030 )'),
    ooemoop = cms.string('( 1.0/sourcePtr().ecalEnergy() - sourcePtr().eSuperClusterOverP()/sourcePtr().ecalEnergy() ) < 0.050'),
    passConversionVeto = cms.string('sourcePtr().passConversionVeto() == 1'),
    hadronicOverEm = cms.string('(sourcePtr().isEB() && sourcePtr().hadronicOverEm() < 0.120 ) || ( sourcePtr().isEE() && sourcePtr().hadronicOverEm() < 0.100)'),
    deltaPhiSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.030 ) || ( sourcePtr().isEE() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.020 )'),
    deltaEtaSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.004 ) || ( sourcePtr().isEE() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.005 )'),
    mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() <= 0')
)

process.tightSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.065),
    BarrelMVACuts = cms.vdouble(0.58, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.tightSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.01),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(0.6, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 15.0)
)

process.tightmuonNoVtx = cms.PSet(
    normalizedChi2 = cms.string('normalizedChi2() < 10'),
    numberOfMatchedStations = cms.string('numberOfMatchedStations() > 1'),
    numberOfValidMuonHits = cms.string('numberOfValidMuonHits() > 0'),
    isGlobal = cms.string('isGlobal()'),
    numberOfValidPixelHits = cms.string('numberOfValidPixelHits() > 0'),
    isPF = cms.string('isPF()'),
    trackerLayersWithMeasurement = cms.string('trackerLayersWithMeasurement() > 5')
)

process.trackPseudoSelectionBlock = cms.PSet(
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.trackSelectionBlock = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.triggerObjectFactory = cms.PSet(
    useTriggerObjects = cms.untracked.bool(False),
    processName = cms.untracked.string('*'),
    triggerResults = cms.InputTag("TriggerResults"),
    triggerObjects = cms.InputTag("patTrigger")
)

process.triggerObjectListFactory = cms.PSet(
    useTriggerObjects = cms.untracked.bool(True),
    processName = cms.untracked.string('*'),
    saveAllHLTPathsInObjs = cms.untracked.bool(False),
    triggerResults = cms.InputTag("TriggerResults"),
    triggerObjects = cms.InputTag("patTrigger")
)

process.vbtfmuon = cms.PSet(
    normalizedChi2 = cms.string('normalizedChi2() < 10'),
    numberOfMatches = cms.string('numberOfMatches() > 1'),
    dxy = cms.string('abs(dxy()) < 0.2'),
    numberOfValidMuonHits = cms.string('numberOfValidMuonHits() > 0'),
    isGlobal = cms.string('isGlobal()'),
    isTracker = cms.string('isTracker()'),
    numberOfValidPixelHits = cms.string('numberOfValidPixelHits() > 0'),
    trackerLayersWithMeasurement = cms.string('trackerLayersWithMeasurement() > 8')
)

process.vertexCutsBlock = cms.PSet(
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    )
)

process.vertexRecoBlock = cms.PSet(
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    )
)

process.vertexSelectionBlock = cms.PSet(
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)

process.vertexTrackSelectionBlock = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.vetoNoVtx = cms.PSet(
    sigmaIetaIeta = cms.string('(sourcePtr().isEB() && sourcePtr().sigmaIetaIeta() < 0.010 ) || ( sourcePtr().isEE() && sourcePtr().sigmaIetaIeta() < 0.030 )'),
    ooemoop = cms.string('( 1.0/sourcePtr().ecalEnergy() - sourcePtr().eSuperClusterOverP()/sourcePtr().ecalEnergy() ) < 999.9'),
    passConversionVeto = cms.string('sourcePtr().passConversionVeto() == 1 || sourcePtr().passConversionVeto() != 1'),
    hadronicOverEm = cms.string('(sourcePtr().isEB() && sourcePtr().hadronicOverEm() < 0.150 ) || ( sourcePtr().isEE() && sourcePtr().hadronicOverEm() < 999.9)'),
    deltaPhiSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.800 ) || ( sourcePtr().isEE() && sourcePtr().deltaPhiSuperClusterTrackAtVtx() < 0.700 )'),
    deltaEtaSuperClusterTrackAtVtx = cms.string('(sourcePtr().isEB() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.007 ) || ( sourcePtr().isEE() && sourcePtr().deltaEtaSuperClusterTrackAtVtx() < 0.010 )'),
    mHits = cms.string('sourcePtr().gsfTrack().get().trackerExpectedHitsInner().numberOfHits() <= 999')
)

process.zee = cms.PSet(
    leg2_quality = cms.string(''),
    leg1_kinematics = cms.PSet(
        phi = cms.string('abs(leg1().phi()) < 10'),
        eta = cms.string('abs(leg1().eta()) < 3'),
        pt = cms.string('leg1().pt() > 15')
    ),
    leg2_kinematics = cms.PSet(
        phi = cms.string('abs(leg2().phi()) < 10'),
        eta = cms.string('abs(leg2().eta()) < 3'),
        pt = cms.string('leg2().pt() > 10')
    ),
    mass = cms.string('mass() >= 50 && mass() < 120'),
    leg1_quality = cms.string('')
)

process.MultiNetIso = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(0)
), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngOnePiZeroIso'),
        decayModeIndices = cms.vint32(1)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngTwoPiZeroIso'),
        decayModeIndices = cms.vint32(2)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngNoPiZeroIso'),
        decayModeIndices = cms.vint32(10)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngOnePiZeroIso'),
        decayModeIndices = cms.vint32(11)
    ))

process.SingleNetBasedTauID = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNet'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
))

process.TaNC = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZero'),
    decayModeIndices = cms.vint32(0)
), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngOnePiZero'),
        decayModeIndices = cms.vint32(1)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngTwoPiZero'),
        decayModeIndices = cms.vint32(2)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngNoPiZero'),
        decayModeIndices = cms.vint32(10)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngOnePiZero'),
        decayModeIndices = cms.vint32(11)
    ))

process.transforms = cms.VPSet(cms.PSet(
    nPiZeros = cms.uint32(0),
    transform = cms.PSet(
        max = cms.double(1.99833333333),
        transform = (cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508)+cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335)+cms.vdouble(0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 0.9679163435, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
        min = cms.double(-0.998333333333)
    ),
    nCharged = cms.uint32(3)
), 
    cms.PSet(
        nPiZeros = cms.uint32(1),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdoublecms.vdouble(0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364)+cms.vdouble(0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ), 
    cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdoublecms.vdouble(0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107)+cms.vdouble(0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ), 
    cms.PSet(
        nPiZeros = cms.uint32(2),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277)+cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792)+cms.vdouble(0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ))

process.schedule = cms.Schedule(*[process.p,process.EcalDeadCellTriggerPrimitiveFilterPath,process.hcalLaserEventFilterPath,process.trackingFailureFilterPath,process.primaryVertexFilterPath,process.noscrapingFilterPath,process.metNoiseCleaningPath,process.totalKinematicsFilterPath,process.CSCTightHaloFilterPath,process.HBHENoiseFilterPath,process.outpath])
